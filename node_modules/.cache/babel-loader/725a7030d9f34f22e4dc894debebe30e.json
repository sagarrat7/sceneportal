{"ast":null,"code":"import _objectSpread from \"/Users/sarahagarrat/git/sceneportal/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"/Users/sarahagarrat/git/sceneportal/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/sarahagarrat/git/sceneportal/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _createClass from \"/Users/sarahagarrat/git/sceneportal/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/sarahagarrat/git/sceneportal/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _inherits from \"/Users/sarahagarrat/git/sceneportal/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/sarahagarrat/git/sceneportal/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _wrapNativeSuper from \"/Users/sarahagarrat/git/sceneportal/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\n\n/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\n\nvar _0n = BigInt(0);\n\nvar _1n = BigInt(1);\n\nvar _2n = BigInt(2);\n\nvar _3n = BigInt(3);\n\nvar _8n = BigInt(8);\n\nvar CURVE = Object.freeze({\n  a: _0n,\n  b: BigInt(7),\n  P: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n  n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n  h: _1n,\n  Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n  Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n  beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee')\n});\nexport { CURVE };\n\nfunction weistrass(x) {\n  var a = CURVE.a,\n      b = CURVE.b;\n  var x2 = mod(x * x);\n  var x3 = mod(x2 * x);\n  return mod(x3 + a * x + b);\n}\n\nvar USE_ENDOMORPHISM = CURVE.a === _0n;\n\nvar ShaError = /*#__PURE__*/function (_Error) {\n  _inherits(ShaError, _Error);\n\n  var _super = _createSuper(ShaError);\n\n  function ShaError(message) {\n    _classCallCheck(this, ShaError);\n\n    return _super.call(this, message);\n  }\n\n  return _createClass(ShaError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar JacobianPoint = /*#__PURE__*/function () {\n  function JacobianPoint(x, y, z) {\n    _classCallCheck(this, JacobianPoint);\n\n    this.x = x;\n    this.y = y;\n    this.z = z;\n  }\n\n  _createClass(JacobianPoint, [{\n    key: \"equals\",\n    value: function equals(other) {\n      if (!(other instanceof JacobianPoint)) throw new TypeError('JacobianPoint expected');\n      var X1 = this.x,\n          Y1 = this.y,\n          Z1 = this.z;\n      var X2 = other.x,\n          Y2 = other.y,\n          Z2 = other.z;\n      var Z1Z1 = mod(Z1 * Z1);\n      var Z2Z2 = mod(Z2 * Z2);\n      var U1 = mod(X1 * Z2Z2);\n      var U2 = mod(X2 * Z1Z1);\n      var S1 = mod(mod(Y1 * Z2) * Z2Z2);\n      var S2 = mod(mod(Y2 * Z1) * Z1Z1);\n      return U1 === U2 && S1 === S2;\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n  }, {\n    key: \"double\",\n    value: function double() {\n      var X1 = this.x,\n          Y1 = this.y,\n          Z1 = this.z;\n      var A = mod(X1 * X1);\n      var B = mod(Y1 * Y1);\n      var C = mod(B * B);\n      var x1b = X1 + B;\n      var D = mod(_2n * (mod(x1b * x1b) - A - C));\n      var E = mod(_3n * A);\n      var F = mod(E * E);\n      var X3 = mod(F - _2n * D);\n      var Y3 = mod(E * (D - X3) - _8n * C);\n      var Z3 = mod(_2n * Y1 * Z1);\n      return new JacobianPoint(X3, Y3, Z3);\n    }\n  }, {\n    key: \"add\",\n    value: function add(other) {\n      if (!(other instanceof JacobianPoint)) throw new TypeError('JacobianPoint expected');\n      var X1 = this.x,\n          Y1 = this.y,\n          Z1 = this.z;\n      var X2 = other.x,\n          Y2 = other.y,\n          Z2 = other.z;\n      if (X2 === _0n || Y2 === _0n) return this;\n      if (X1 === _0n || Y1 === _0n) return other;\n      var Z1Z1 = mod(Z1 * Z1);\n      var Z2Z2 = mod(Z2 * Z2);\n      var U1 = mod(X1 * Z2Z2);\n      var U2 = mod(X2 * Z1Z1);\n      var S1 = mod(mod(Y1 * Z2) * Z2Z2);\n      var S2 = mod(mod(Y2 * Z1) * Z1Z1);\n      var H = mod(U2 - U1);\n      var r = mod(S2 - S1);\n\n      if (H === _0n) {\n        if (r === _0n) {\n          return this.double();\n        } else {\n          return JacobianPoint.ZERO;\n        }\n      }\n\n      var HH = mod(H * H);\n      var HHH = mod(H * HH);\n      var V = mod(U1 * HH);\n      var X3 = mod(r * r - HHH - _2n * V);\n      var Y3 = mod(r * (V - X3) - S1 * HHH);\n      var Z3 = mod(Z1 * Z2 * H);\n      return new JacobianPoint(X3, Y3, Z3);\n    }\n  }, {\n    key: \"subtract\",\n    value: function subtract(other) {\n      return this.add(other.negate());\n    }\n  }, {\n    key: \"multiplyUnsafe\",\n    value: function multiplyUnsafe(scalar) {\n      var P0 = JacobianPoint.ZERO;\n      if (typeof scalar === 'bigint' && scalar === _0n) return P0;\n      var n = normalizeScalar(scalar);\n      if (n === _1n) return this;\n\n      if (!USE_ENDOMORPHISM) {\n        var p = P0;\n\n        var _d = this;\n\n        while (n > _0n) {\n          if (n & _1n) p = p.add(_d);\n          _d = _d.double();\n          n >>= _1n;\n        }\n\n        return p;\n      }\n\n      var _splitScalarEndo = splitScalarEndo(n),\n          k1neg = _splitScalarEndo.k1neg,\n          k1 = _splitScalarEndo.k1,\n          k2neg = _splitScalarEndo.k2neg,\n          k2 = _splitScalarEndo.k2;\n\n      var k1p = P0;\n      var k2p = P0;\n      var d = this;\n\n      while (k1 > _0n || k2 > _0n) {\n        if (k1 & _1n) k1p = k1p.add(d);\n        if (k2 & _1n) k2p = k2p.add(d);\n        d = d.double();\n        k1 >>= _1n;\n        k2 >>= _1n;\n      }\n\n      if (k1neg) k1p = k1p.negate();\n      if (k2neg) k2p = k2p.negate();\n      k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n      return k1p.add(k2p);\n    }\n  }, {\n    key: \"precomputeWindow\",\n    value: function precomputeWindow(W) {\n      var windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n      var points = [];\n      var p = this;\n      var base = p;\n\n      for (var window = 0; window < windows; window++) {\n        base = p;\n        points.push(base);\n\n        for (var i = 1; i < Math.pow(2, W - 1); i++) {\n          base = base.add(p);\n          points.push(base);\n        }\n\n        p = base.double();\n      }\n\n      return points;\n    }\n  }, {\n    key: \"wNAF\",\n    value: function wNAF(n, affinePoint) {\n      if (!affinePoint && this.equals(JacobianPoint.BASE)) affinePoint = Point.BASE;\n      var W = affinePoint && affinePoint._WINDOW_SIZE || 1;\n\n      if (256 % W) {\n        throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n      }\n\n      var precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n\n      if (!precomputes) {\n        precomputes = this.precomputeWindow(W);\n\n        if (affinePoint && W !== 1) {\n          precomputes = JacobianPoint.normalizeZ(precomputes);\n          pointPrecomputes.set(affinePoint, precomputes);\n        }\n      }\n\n      var p = JacobianPoint.ZERO;\n      var f = JacobianPoint.ZERO;\n      var windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n      var windowSize = Math.pow(2, W - 1);\n      var mask = BigInt(Math.pow(2, W) - 1);\n      var maxNumber = Math.pow(2, W);\n      var shiftBy = BigInt(W);\n\n      for (var window = 0; window < windows; window++) {\n        var offset = window * windowSize;\n        var wbits = Number(n & mask);\n        n >>= shiftBy;\n\n        if (wbits > windowSize) {\n          wbits -= maxNumber;\n          n += _1n;\n        }\n\n        if (wbits === 0) {\n          var pr = precomputes[offset];\n          if (window % 2) pr = pr.negate();\n          f = f.add(pr);\n        } else {\n          var cached = precomputes[offset + Math.abs(wbits) - 1];\n          if (wbits < 0) cached = cached.negate();\n          p = p.add(cached);\n        }\n      }\n\n      return {\n        p: p,\n        f: f\n      };\n    }\n  }, {\n    key: \"multiply\",\n    value: function multiply(scalar, affinePoint) {\n      var n = normalizeScalar(scalar);\n      var point;\n      var fake;\n\n      if (USE_ENDOMORPHISM) {\n        var _splitScalarEndo2 = splitScalarEndo(n),\n            k1neg = _splitScalarEndo2.k1neg,\n            k1 = _splitScalarEndo2.k1,\n            k2neg = _splitScalarEndo2.k2neg,\n            k2 = _splitScalarEndo2.k2;\n\n        var _this$wNAF = this.wNAF(k1, affinePoint),\n            k1p = _this$wNAF.p,\n            f1p = _this$wNAF.f;\n\n        var _this$wNAF2 = this.wNAF(k2, affinePoint),\n            k2p = _this$wNAF2.p,\n            f2p = _this$wNAF2.f;\n\n        if (k1neg) k1p = k1p.negate();\n        if (k2neg) k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n        point = k1p.add(k2p);\n        fake = f1p.add(f2p);\n      } else {\n        var _this$wNAF3 = this.wNAF(n, affinePoint),\n            p = _this$wNAF3.p,\n            f = _this$wNAF3.f;\n\n        point = p;\n        fake = f;\n      }\n\n      return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n  }, {\n    key: \"toAffine\",\n    value: function toAffine() {\n      var invZ = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : invert(this.z);\n      var x = this.x,\n          y = this.y,\n          z = this.z;\n      var iz1 = invZ;\n      var iz2 = mod(iz1 * iz1);\n      var iz3 = mod(iz2 * iz1);\n      var ax = mod(x * iz2);\n      var ay = mod(y * iz3);\n      var zz = mod(z * iz1);\n      if (zz !== _1n) throw new Error('invZ was invalid');\n      return new Point(ax, ay);\n    }\n  }], [{\n    key: \"fromAffine\",\n    value: function fromAffine(p) {\n      if (!(p instanceof Point)) {\n        throw new TypeError('JacobianPoint#fromAffine: expected Point');\n      }\n\n      return new JacobianPoint(p.x, p.y, _1n);\n    }\n  }, {\n    key: \"toAffineBatch\",\n    value: function toAffineBatch(points) {\n      var toInv = invertBatch(points.map(function (p) {\n        return p.z;\n      }));\n      return points.map(function (p, i) {\n        return p.toAffine(toInv[i]);\n      });\n    }\n  }, {\n    key: \"normalizeZ\",\n    value: function normalizeZ(points) {\n      return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n  }]);\n\n  return JacobianPoint;\n}();\n\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nvar pointPrecomputes = new WeakMap();\nexport var Point = /*#__PURE__*/function () {\n  function Point(x, y) {\n    _classCallCheck(this, Point);\n\n    this.x = x;\n    this.y = y;\n  }\n\n  _createClass(Point, [{\n    key: \"_setWindowSize\",\n    value: function _setWindowSize(windowSize) {\n      this._WINDOW_SIZE = windowSize;\n      pointPrecomputes.delete(this);\n    }\n  }, {\n    key: \"hasEvenY\",\n    value: function hasEvenY() {\n      return this.y % _2n === _0n;\n    }\n  }, {\n    key: \"toRawBytes\",\n    value: function toRawBytes() {\n      var isCompressed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      return hexToBytes(this.toHex(isCompressed));\n    }\n  }, {\n    key: \"toHex\",\n    value: function toHex() {\n      var isCompressed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var x = numTo32bStr(this.x);\n\n      if (isCompressed) {\n        var prefix = this.hasEvenY() ? '02' : '03';\n        return \"\".concat(prefix).concat(x);\n      } else {\n        return \"04\".concat(x).concat(numTo32bStr(this.y));\n      }\n    }\n  }, {\n    key: \"toHexX\",\n    value: function toHexX() {\n      return this.toHex(true).slice(2);\n    }\n  }, {\n    key: \"toRawX\",\n    value: function toRawX() {\n      return this.toRawBytes(true).slice(1);\n    }\n  }, {\n    key: \"assertValidity\",\n    value: function assertValidity() {\n      var msg = 'Point is not on elliptic curve';\n      var x = this.x,\n          y = this.y;\n      if (!isValidFieldElement(x) || !isValidFieldElement(y)) throw new Error(msg);\n      var left = mod(y * y);\n      var right = weistrass(x);\n      if (mod(left - right) !== _0n) throw new Error(msg);\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      return this.x === other.x && this.y === other.y;\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      return new Point(this.x, mod(-this.y));\n    }\n  }, {\n    key: \"double\",\n    value: function double() {\n      return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n  }, {\n    key: \"add\",\n    value: function add(other) {\n      return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n  }, {\n    key: \"subtract\",\n    value: function subtract(other) {\n      return this.add(other.negate());\n    }\n  }, {\n    key: \"multiply\",\n    value: function multiply(scalar) {\n      return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n  }, {\n    key: \"multiplyAndAddUnsafe\",\n    value: function multiplyAndAddUnsafe(Q, a, b) {\n      var P = JacobianPoint.fromAffine(this);\n      var aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n      var bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n      var sum = aP.add(bQ);\n      return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n  }], [{\n    key: \"fromCompressedHex\",\n    value: function fromCompressedHex(bytes) {\n      var isShort = bytes.length === 32;\n      var x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n      if (!isValidFieldElement(x)) throw new Error('Point is not on curve');\n      var y2 = weistrass(x);\n      var y = sqrtMod(y2);\n      var isYOdd = (y & _1n) === _1n;\n\n      if (isShort) {\n        if (isYOdd) y = mod(-y);\n      } else {\n        var isFirstByteOdd = (bytes[0] & 1) === 1;\n        if (isFirstByteOdd !== isYOdd) y = mod(-y);\n      }\n\n      var point = new Point(x, y);\n      point.assertValidity();\n      return point;\n    }\n  }, {\n    key: \"fromUncompressedHex\",\n    value: function fromUncompressedHex(bytes) {\n      var x = bytesToNumber(bytes.subarray(1, 33));\n      var y = bytesToNumber(bytes.subarray(33, 65));\n      var point = new Point(x, y);\n      point.assertValidity();\n      return point;\n    }\n  }, {\n    key: \"fromHex\",\n    value: function fromHex(hex) {\n      var bytes = ensureBytes(hex);\n      var len = bytes.length;\n      var header = bytes[0];\n\n      if (len === 32 || len === 33 && (header === 0x02 || header === 0x03)) {\n        return this.fromCompressedHex(bytes);\n      }\n\n      if (len === 65 && header === 0x04) return this.fromUncompressedHex(bytes);\n      throw new Error(\"Point.fromHex: received invalid point. Expected 32-33 compressed bytes or 65 uncompressed bytes, not \".concat(len));\n    }\n  }, {\n    key: \"fromPrivateKey\",\n    value: function fromPrivateKey(privateKey) {\n      return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n  }, {\n    key: \"fromSignature\",\n    value: function fromSignature(msgHash, signature, recovery) {\n      msgHash = ensureBytes(msgHash);\n      var h = truncateHash(msgHash);\n\n      var _normalizeSignature = normalizeSignature(signature),\n          r = _normalizeSignature.r,\n          s = _normalizeSignature.s;\n\n      if (recovery !== 0 && recovery !== 1) {\n        throw new Error('Cannot recover signature: invalid recovery bit');\n      }\n\n      var prefix = recovery & 1 ? '03' : '02';\n      var R = Point.fromHex(prefix + numTo32bStr(r));\n      var n = CURVE.n;\n      var rinv = invert(r, n);\n      var u1 = mod(-h * rinv, n);\n      var u2 = mod(s * rinv, n);\n      var Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n      if (!Q) throw new Error('Cannot recover signature: point at infinify');\n      Q.assertValidity();\n      return Q;\n    }\n  }]);\n\n  return Point;\n}();\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\n\nfunction sliceDER(s) {\n  return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\n\nfunction parseDERInt(data) {\n  if (data.length < 2 || data[0] !== 0x02) {\n    throw new Error(\"Invalid signature integer tag: \".concat(bytesToHex(data)));\n  }\n\n  var len = data[1];\n  var res = data.subarray(2, len + 2);\n\n  if (!len || res.length !== len) {\n    throw new Error(\"Invalid signature integer: wrong length\");\n  }\n\n  if (res[0] === 0x00 && res[1] <= 0x7f) {\n    throw new Error('Invalid signature integer: trailing length');\n  }\n\n  return {\n    data: bytesToNumber(res),\n    left: data.subarray(len + 2)\n  };\n}\n\nfunction parseDERSignature(data) {\n  if (data.length < 2 || data[0] != 0x30) {\n    throw new Error(\"Invalid signature tag: \".concat(bytesToHex(data)));\n  }\n\n  if (data[1] !== data.length - 2) {\n    throw new Error('Invalid signature: incorrect length');\n  }\n\n  var _parseDERInt = parseDERInt(data.subarray(2)),\n      r = _parseDERInt.data,\n      sBytes = _parseDERInt.left;\n\n  var _parseDERInt2 = parseDERInt(sBytes),\n      s = _parseDERInt2.data,\n      rBytesLeft = _parseDERInt2.left;\n\n  if (rBytesLeft.length) {\n    throw new Error(\"Invalid signature: left bytes after parsing: \".concat(bytesToHex(rBytesLeft)));\n  }\n\n  return {\n    r: r,\n    s: s\n  };\n}\n\nexport var Signature = /*#__PURE__*/function () {\n  function Signature(r, s) {\n    _classCallCheck(this, Signature);\n\n    this.r = r;\n    this.s = s;\n    this.assertValidity();\n  }\n\n  _createClass(Signature, [{\n    key: \"assertValidity\",\n    value: function assertValidity() {\n      var r = this.r,\n          s = this.s;\n      if (!isWithinCurveOrder(r)) throw new Error('Invalid Signature: r must be 0 < r < n');\n      if (!isWithinCurveOrder(s)) throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n  }, {\n    key: \"hasHighS\",\n    value: function hasHighS() {\n      var HALF = CURVE.n >> _1n;\n      return this.s > HALF;\n    }\n  }, {\n    key: \"normalizeS\",\n    value: function normalizeS() {\n      return this.hasHighS() ? new Signature(this.r, CURVE.n - this.s) : this;\n    }\n  }, {\n    key: \"toDERRawBytes\",\n    value: function toDERRawBytes() {\n      var isCompressed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      return hexToBytes(this.toDERHex(isCompressed));\n    }\n  }, {\n    key: \"toDERHex\",\n    value: function toDERHex() {\n      var isCompressed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var sHex = sliceDER(numberToHexUnpadded(this.s));\n      if (isCompressed) return sHex;\n      var rHex = sliceDER(numberToHexUnpadded(this.r));\n      var rLen = numberToHexUnpadded(rHex.length / 2);\n      var sLen = numberToHexUnpadded(sHex.length / 2);\n      var length = numberToHexUnpadded(rHex.length / 2 + sHex.length / 2 + 4);\n      return \"30\".concat(length, \"02\").concat(rLen).concat(rHex, \"02\").concat(sLen).concat(sHex);\n    }\n  }, {\n    key: \"toRawBytes\",\n    value: function toRawBytes() {\n      return this.toDERRawBytes();\n    }\n  }, {\n    key: \"toHex\",\n    value: function toHex() {\n      return this.toDERHex();\n    }\n  }, {\n    key: \"toCompactRawBytes\",\n    value: function toCompactRawBytes() {\n      return hexToBytes(this.toCompactHex());\n    }\n  }, {\n    key: \"toCompactHex\",\n    value: function toCompactHex() {\n      return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n  }], [{\n    key: \"fromCompact\",\n    value: function fromCompact(hex) {\n      var arr = hex instanceof Uint8Array;\n      var name = 'Signature.fromCompact';\n      if (typeof hex !== 'string' && !arr) throw new TypeError(\"\".concat(name, \": Expected string or Uint8Array\"));\n      var str = arr ? bytesToHex(hex) : hex;\n      if (str.length !== 128) throw new Error(\"\".concat(name, \": Expected 64-byte hex\"));\n      return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n  }, {\n    key: \"fromDER\",\n    value: function fromDER(hex) {\n      var arr = hex instanceof Uint8Array;\n      if (typeof hex !== 'string' && !arr) throw new TypeError(\"Signature.fromDER: Expected string or Uint8Array\");\n\n      var _parseDERSignature = parseDERSignature(arr ? hex : hexToBytes(hex)),\n          r = _parseDERSignature.r,\n          s = _parseDERSignature.s;\n\n      return new Signature(r, s);\n    }\n  }, {\n    key: \"fromHex\",\n    value: function fromHex(hex) {\n      return this.fromDER(hex);\n    }\n  }]);\n\n  return Signature;\n}();\n\nfunction concatBytes() {\n  for (var _len = arguments.length, arrays = new Array(_len), _key = 0; _key < _len; _key++) {\n    arrays[_key] = arguments[_key];\n  }\n\n  if (!arrays.every(function (b) {\n    return b instanceof Uint8Array;\n  })) throw new Error('Uint8Array list expected');\n  if (arrays.length === 1) return arrays[0];\n  var length = arrays.reduce(function (a, arr) {\n    return a + arr.length;\n  }, 0);\n  var result = new Uint8Array(length);\n\n  for (var i = 0, pad = 0; i < arrays.length; i++) {\n    var arr = arrays[i];\n    result.set(arr, pad);\n    pad += arr.length;\n  }\n\n  return result;\n}\n\nvar hexes = Array.from({\n  length: 256\n}, function (v, i) {\n  return i.toString(16).padStart(2, '0');\n});\n\nfunction bytesToHex(uint8a) {\n  if (!(uint8a instanceof Uint8Array)) throw new Error('Expected Uint8Array');\n  var hex = '';\n\n  for (var i = 0; i < uint8a.length; i++) {\n    hex += hexes[uint8a[i]];\n  }\n\n  return hex;\n}\n\nvar POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\n\nfunction numTo32bStr(num) {\n  if (typeof num !== 'bigint') throw new Error('Expected bigint');\n  if (!(_0n <= num && num < POW_2_256)) throw new Error('Expected number < 2^256');\n  return num.toString(16).padStart(64, '0');\n}\n\nfunction numTo32b(num) {\n  var b = hexToBytes(numTo32bStr(num));\n  if (b.length !== 32) throw new Error('Error: expected 32 bytes');\n  return b;\n}\n\nfunction numberToHexUnpadded(num) {\n  var hex = num.toString(16);\n  return hex.length & 1 ? \"0\".concat(hex) : hex;\n}\n\nfunction hexToNumber(hex) {\n  if (typeof hex !== 'string') {\n    throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n  }\n\n  return BigInt(\"0x\".concat(hex));\n}\n\nfunction hexToBytes(hex) {\n  if (typeof hex !== 'string') {\n    throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n  }\n\n  if (hex.length % 2) throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n  var array = new Uint8Array(hex.length / 2);\n\n  for (var i = 0; i < array.length; i++) {\n    var j = i * 2;\n    var hexByte = hex.slice(j, j + 2);\n    var byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n\n  return array;\n}\n\nfunction bytesToNumber(bytes) {\n  return hexToNumber(bytesToHex(bytes));\n}\n\nfunction ensureBytes(hex) {\n  return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\n\nfunction normalizeScalar(num) {\n  if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0) return BigInt(num);\n  if (typeof num === 'bigint' && isWithinCurveOrder(num)) return num;\n  throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\n\nfunction mod(a) {\n  var b = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : CURVE.P;\n  var result = a % b;\n  return result >= _0n ? result : b + result;\n}\n\nfunction pow2(x, power) {\n  var P = CURVE.P;\n  var res = x;\n\n  while (power-- > _0n) {\n    res *= res;\n    res %= P;\n  }\n\n  return res;\n}\n\nfunction sqrtMod(x) {\n  var P = CURVE.P;\n\n  var _6n = BigInt(6);\n\n  var _11n = BigInt(11);\n\n  var _22n = BigInt(22);\n\n  var _23n = BigInt(23);\n\n  var _44n = BigInt(44);\n\n  var _88n = BigInt(88);\n\n  var b2 = x * x * x % P;\n  var b3 = b2 * b2 * x % P;\n  var b6 = pow2(b3, _3n) * b3 % P;\n  var b9 = pow2(b6, _3n) * b3 % P;\n  var b11 = pow2(b9, _2n) * b2 % P;\n  var b22 = pow2(b11, _11n) * b11 % P;\n  var b44 = pow2(b22, _22n) * b22 % P;\n  var b88 = pow2(b44, _44n) * b44 % P;\n  var b176 = pow2(b88, _88n) * b88 % P;\n  var b220 = pow2(b176, _44n) * b44 % P;\n  var b223 = pow2(b220, _3n) * b3 % P;\n  var t1 = pow2(b223, _23n) * b22 % P;\n  var t2 = pow2(t1, _6n) * b2 % P;\n  return pow2(t2, _2n);\n}\n\nfunction invert(number) {\n  var modulo = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : CURVE.P;\n\n  if (number === _0n || modulo <= _0n) {\n    throw new Error(\"invert: expected positive integers, got n=\".concat(number, \" mod=\").concat(modulo));\n  }\n\n  var a = mod(number, modulo);\n  var b = modulo;\n  var x = _0n,\n      y = _1n,\n      u = _1n,\n      v = _0n;\n\n  while (a !== _0n) {\n    var q = b / a;\n    var r = b % a;\n    var m = x - u * q;\n    var n = y - v * q;\n    b = a, a = r, x = u, y = v, u = m, v = n;\n  }\n\n  var gcd = b;\n  if (gcd !== _1n) throw new Error('invert: does not exist');\n  return mod(x, modulo);\n}\n\nfunction invertBatch(nums) {\n  var p = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : CURVE.P;\n  var scratch = new Array(nums.length);\n  var lastMultiplied = nums.reduce(function (acc, num, i) {\n    if (num === _0n) return acc;\n    scratch[i] = acc;\n    return mod(acc * num, p);\n  }, _1n);\n  var inverted = invert(lastMultiplied, p);\n  nums.reduceRight(function (acc, num, i) {\n    if (num === _0n) return acc;\n    scratch[i] = mod(acc * scratch[i], p);\n    return mod(acc * num, p);\n  }, inverted);\n  return scratch;\n}\n\nvar divNearest = function divNearest(a, b) {\n  return (a + b / _2n) / b;\n};\n\nvar ENDO = {\n  a1: BigInt('0x3086d221a7d46bcde86c90e49284eb15'),\n  b1: -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3'),\n  a2: BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8'),\n  b2: BigInt('0x3086d221a7d46bcde86c90e49284eb15'),\n  POW_2_128: BigInt('0x100000000000000000000000000000000')\n};\n\nfunction splitScalarEndo(k) {\n  var n = CURVE.n;\n  var a1 = ENDO.a1,\n      b1 = ENDO.b1,\n      a2 = ENDO.a2,\n      b2 = ENDO.b2,\n      POW_2_128 = ENDO.POW_2_128;\n  var c1 = divNearest(b2 * k, n);\n  var c2 = divNearest(-b1 * k, n);\n  var k1 = mod(k - c1 * a1 - c2 * a2, n);\n  var k2 = mod(-c1 * b1 - c2 * b2, n);\n  var k1neg = k1 > POW_2_128;\n  var k2neg = k2 > POW_2_128;\n  if (k1neg) k1 = n - k1;\n  if (k2neg) k2 = n - k2;\n\n  if (k1 > POW_2_128 || k2 > POW_2_128) {\n    throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n  }\n\n  return {\n    k1neg: k1neg,\n    k1: k1,\n    k2neg: k2neg,\n    k2: k2\n  };\n}\n\nfunction truncateHash(hash) {\n  var n = CURVE.n;\n  var byteLength = hash.length;\n  var delta = byteLength * 8 - 256;\n  var h = bytesToNumber(hash);\n  if (delta > 0) h = h >> BigInt(delta);\n  if (h >= n) h -= n;\n  return h;\n}\n\nvar _sha256Sync;\n\nvar _hmacSha256Sync;\n\nvar HmacDrbg = /*#__PURE__*/function () {\n  function HmacDrbg() {\n    _classCallCheck(this, HmacDrbg);\n\n    this.v = new Uint8Array(32).fill(1);\n    this.k = new Uint8Array(32).fill(0);\n    this.counter = 0;\n  }\n\n  _createClass(HmacDrbg, [{\n    key: \"hmac\",\n    value: function hmac() {\n      for (var _len2 = arguments.length, values = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        values[_key2] = arguments[_key2];\n      }\n\n      return utils.hmacSha256.apply(utils, [this.k].concat(values));\n    }\n  }, {\n    key: \"hmacSync\",\n    value: function hmacSync() {\n      for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        values[_key3] = arguments[_key3];\n      }\n\n      return _hmacSha256Sync.apply(void 0, [this.k].concat(values));\n    }\n  }, {\n    key: \"checkSync\",\n    value: function checkSync() {\n      if (typeof _hmacSha256Sync !== 'function') throw new ShaError('hmacSha256Sync needs to be set');\n    }\n  }, {\n    key: \"incr\",\n    value: function incr() {\n      if (this.counter >= 1000) throw new Error('Tried 1,000 k values for sign(), all were invalid');\n      this.counter += 1;\n    }\n  }, {\n    key: \"reseed\",\n    value: function () {\n      var _reseed = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var seed,\n            _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                seed = _args.length > 0 && _args[0] !== undefined ? _args[0] : new Uint8Array();\n                _context.next = 3;\n                return this.hmac(this.v, Uint8Array.from([0x00]), seed);\n\n              case 3:\n                this.k = _context.sent;\n                _context.next = 6;\n                return this.hmac(this.v);\n\n              case 6:\n                this.v = _context.sent;\n\n                if (!(seed.length === 0)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 9:\n                _context.next = 11;\n                return this.hmac(this.v, Uint8Array.from([0x01]), seed);\n\n              case 11:\n                this.k = _context.sent;\n                _context.next = 14;\n                return this.hmac(this.v);\n\n              case 14:\n                this.v = _context.sent;\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function reseed() {\n        return _reseed.apply(this, arguments);\n      }\n\n      return reseed;\n    }()\n  }, {\n    key: \"reseedSync\",\n    value: function reseedSync() {\n      var seed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Uint8Array();\n      this.checkSync();\n      this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n      this.v = this.hmacSync(this.v);\n      if (seed.length === 0) return;\n      this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n      this.v = this.hmacSync(this.v);\n    }\n  }, {\n    key: \"generate\",\n    value: function () {\n      var _generate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.incr();\n                _context2.next = 3;\n                return this.hmac(this.v);\n\n              case 3:\n                this.v = _context2.sent;\n                return _context2.abrupt(\"return\", this.v);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function generate() {\n        return _generate.apply(this, arguments);\n      }\n\n      return generate;\n    }()\n  }, {\n    key: \"generateSync\",\n    value: function generateSync() {\n      this.checkSync();\n      this.incr();\n      this.v = this.hmacSync(this.v);\n      return this.v;\n    }\n  }]);\n\n  return HmacDrbg;\n}();\n\nfunction isWithinCurveOrder(num) {\n  return _0n < num && num < CURVE.n;\n}\n\nfunction isValidFieldElement(num) {\n  return _0n < num && num < CURVE.P;\n}\n\nfunction kmdToSig(kBytes, m, d) {\n  var k = bytesToNumber(kBytes);\n  if (!isWithinCurveOrder(k)) return;\n  var n = CURVE.n;\n  var q = Point.BASE.multiply(k);\n  var r = mod(q.x, n);\n  if (r === _0n) return;\n  var s = mod(invert(k, n) * mod(m + d * r, n), n);\n  if (s === _0n) return;\n  var sig = new Signature(r, s);\n  var recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n  return {\n    sig: sig,\n    recovery: recovery\n  };\n}\n\nfunction normalizePrivateKey(key) {\n  var num;\n\n  if (typeof key === 'bigint') {\n    num = key;\n  } else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n    num = BigInt(key);\n  } else if (typeof key === 'string') {\n    if (key.length !== 64) throw new Error('Expected 32 bytes of private key');\n    num = hexToNumber(key);\n  } else if (key instanceof Uint8Array) {\n    if (key.length !== 32) throw new Error('Expected 32 bytes of private key');\n    num = bytesToNumber(key);\n  } else {\n    throw new TypeError('Expected valid private key');\n  }\n\n  if (!isWithinCurveOrder(num)) throw new Error('Expected private key: 0 < key < n');\n  return num;\n}\n\nfunction normalizePublicKey(publicKey) {\n  if (publicKey instanceof Point) {\n    publicKey.assertValidity();\n    return publicKey;\n  } else {\n    return Point.fromHex(publicKey);\n  }\n}\n\nfunction normalizeSignature(signature) {\n  if (signature instanceof Signature) {\n    signature.assertValidity();\n    return signature;\n  }\n\n  try {\n    return Signature.fromDER(signature);\n  } catch (error) {\n    return Signature.fromCompact(signature);\n  }\n}\n\nexport function getPublicKey(privateKey) {\n  var isCompressed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery) {\n  var isCompressed = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\n\nfunction isProbPub(item) {\n  var arr = item instanceof Uint8Array;\n  var str = typeof item === 'string';\n  var len = (arr || str) && item.length;\n  if (arr) return len === 33 || len === 65;\n  if (str) return len === 66 || len === 130;\n  if (item instanceof Point) return true;\n  return false;\n}\n\nexport function getSharedSecret(privateA, publicB) {\n  var isCompressed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  if (isProbPub(privateA)) throw new TypeError('getSharedSecret: first arg must be private key');\n  if (!isProbPub(publicB)) throw new TypeError('getSharedSecret: second arg must be public key');\n  var b = normalizePublicKey(publicB);\n  b.assertValidity();\n  return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\n\nfunction bits2int(bytes) {\n  var slice = bytes.length > 32 ? bytes.slice(0, 32) : bytes;\n  return bytesToNumber(slice);\n}\n\nfunction bits2octets(bytes) {\n  var z1 = bits2int(bytes);\n  var z2 = mod(z1, CURVE.n);\n  return int2octets(z2 < _0n ? z1 : z2);\n}\n\nfunction int2octets(num) {\n  return numTo32b(num);\n}\n\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n  if (msgHash == null) throw new Error(\"sign: expected valid message hash, not \\\"\".concat(msgHash, \"\\\"\"));\n  var h1 = ensureBytes(msgHash);\n  var d = normalizePrivateKey(privateKey);\n  var seedArgs = [int2octets(d), bits2octets(h1)];\n\n  if (extraEntropy != null) {\n    if (extraEntropy === true) extraEntropy = utils.randomBytes(32);\n    var e = ensureBytes(extraEntropy);\n    if (e.length !== 32) throw new Error('sign: Expected 32 bytes of extra data');\n    seedArgs.push(e);\n  }\n\n  var seed = concatBytes.apply(void 0, seedArgs);\n  var m = bits2int(h1);\n  return {\n    seed: seed,\n    m: m,\n    d: d\n  };\n}\n\nfunction finalizeSig(recSig, opts) {\n  var sig = recSig.sig,\n      recovery = recSig.recovery;\n\n  var _Object$assign = Object.assign({\n    canonical: true,\n    der: true\n  }, opts),\n      canonical = _Object$assign.canonical,\n      der = _Object$assign.der,\n      recovered = _Object$assign.recovered;\n\n  if (canonical && sig.hasHighS()) {\n    sig = sig.normalizeS();\n    recovery ^= 1;\n  }\n\n  var hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n  return recovered ? [hashed, recovery] : hashed;\n}\n\nfunction sign(_x, _x2) {\n  return _sign.apply(this, arguments);\n}\n\nfunction _sign() {\n  _sign = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(msgHash, privKey) {\n    var opts,\n        _initSigArgs2,\n        seed,\n        m,\n        d,\n        sig,\n        drbg,\n        _args7 = arguments;\n\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            opts = _args7.length > 2 && _args7[2] !== undefined ? _args7[2] : {};\n            _initSigArgs2 = initSigArgs(msgHash, privKey, opts.extraEntropy), seed = _initSigArgs2.seed, m = _initSigArgs2.m, d = _initSigArgs2.d;\n            drbg = new HmacDrbg();\n            _context7.next = 5;\n            return drbg.reseed(seed);\n\n          case 5:\n            _context7.t0 = kmdToSig;\n            _context7.next = 8;\n            return drbg.generate();\n\n          case 8:\n            _context7.t1 = _context7.sent;\n            _context7.t2 = m;\n            _context7.t3 = d;\n\n            if (sig = (0, _context7.t0)(_context7.t1, _context7.t2, _context7.t3)) {\n              _context7.next = 16;\n              break;\n            }\n\n            _context7.next = 14;\n            return drbg.reseed();\n\n          case 14:\n            _context7.next = 5;\n            break;\n\n          case 16:\n            return _context7.abrupt(\"return\", finalizeSig(sig, opts));\n\n          case 17:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _sign.apply(this, arguments);\n}\n\nfunction signSync(msgHash, privKey) {\n  var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var _initSigArgs = initSigArgs(msgHash, privKey, opts.extraEntropy),\n      seed = _initSigArgs.seed,\n      m = _initSigArgs.m,\n      d = _initSigArgs.d;\n\n  var sig;\n  var drbg = new HmacDrbg();\n  drbg.reseedSync(seed);\n\n  while (!(sig = kmdToSig(drbg.generateSync(), m, d))) {\n    drbg.reseedSync();\n  }\n\n  return finalizeSig(sig, opts);\n}\n\nexport { sign, signSync };\nvar vopts = {\n  strict: true\n};\nexport function verify(signature, msgHash, publicKey) {\n  var opts = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : vopts;\n  var sig;\n\n  try {\n    sig = normalizeSignature(signature);\n    msgHash = ensureBytes(msgHash);\n  } catch (error) {\n    return false;\n  }\n\n  var _sig = sig,\n      r = _sig.r,\n      s = _sig.s;\n  if (opts.strict && sig.hasHighS()) return false;\n  var h = truncateHash(msgHash);\n  var P;\n\n  try {\n    P = normalizePublicKey(publicKey);\n  } catch (error) {\n    return false;\n  }\n\n  var n = CURVE.n;\n  var sinv = invert(s, n);\n  var u1 = mod(h * sinv, n);\n  var u2 = mod(r * sinv, n);\n  var R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n  if (!R) return false;\n  var v = mod(R.x, n);\n  return v === r;\n}\n\nfunction schnorrChallengeFinalize(ch) {\n  return mod(bytesToNumber(ch), CURVE.n);\n}\n\nvar SchnorrSignature = /*#__PURE__*/function () {\n  function SchnorrSignature(r, s) {\n    _classCallCheck(this, SchnorrSignature);\n\n    this.r = r;\n    this.s = s;\n    this.assertValidity();\n  }\n\n  _createClass(SchnorrSignature, [{\n    key: \"assertValidity\",\n    value: function assertValidity() {\n      var r = this.r,\n          s = this.s;\n      if (!isValidFieldElement(r) || !isWithinCurveOrder(s)) throw new Error('Invalid signature');\n    }\n  }, {\n    key: \"toHex\",\n    value: function toHex() {\n      return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n  }, {\n    key: \"toRawBytes\",\n    value: function toRawBytes() {\n      return hexToBytes(this.toHex());\n    }\n  }], [{\n    key: \"fromHex\",\n    value: function fromHex(hex) {\n      var bytes = ensureBytes(hex);\n      if (bytes.length !== 64) throw new TypeError(\"SchnorrSignature.fromHex: expected 64 bytes, not \".concat(bytes.length));\n      var r = bytesToNumber(bytes.subarray(0, 32));\n      var s = bytesToNumber(bytes.subarray(32, 64));\n      return new SchnorrSignature(r, s);\n    }\n  }]);\n\n  return SchnorrSignature;\n}();\n\nfunction schnorrGetPublicKey(privateKey) {\n  return Point.fromPrivateKey(privateKey).toRawX();\n}\n\nvar InternalSchnorrSignature = /*#__PURE__*/function () {\n  function InternalSchnorrSignature(message, privateKey) {\n    var auxRand = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : utils.randomBytes();\n\n    _classCallCheck(this, InternalSchnorrSignature);\n\n    if (message == null) throw new TypeError(\"sign: Expected valid message, not \\\"\".concat(message, \"\\\"\"));\n    this.m = ensureBytes(message);\n\n    var _this$getScalar = this.getScalar(normalizePrivateKey(privateKey)),\n        x = _this$getScalar.x,\n        scalar = _this$getScalar.scalar;\n\n    this.px = x;\n    this.d = scalar;\n    this.rand = ensureBytes(auxRand);\n    if (this.rand.length !== 32) throw new TypeError('sign: Expected 32 bytes of aux randomness');\n  }\n\n  _createClass(InternalSchnorrSignature, [{\n    key: \"getScalar\",\n    value: function getScalar(priv) {\n      var point = Point.fromPrivateKey(priv);\n      var scalar = point.hasEvenY() ? priv : CURVE.n - priv;\n      return {\n        point: point,\n        scalar: scalar,\n        x: point.toRawX()\n      };\n    }\n  }, {\n    key: \"initNonce\",\n    value: function initNonce(d, t0h) {\n      return numTo32b(d ^ bytesToNumber(t0h));\n    }\n  }, {\n    key: \"finalizeNonce\",\n    value: function finalizeNonce(k0h) {\n      var k0 = mod(bytesToNumber(k0h), CURVE.n);\n      if (k0 === _0n) throw new Error('sign: Creation of signature failed. k is zero');\n\n      var _this$getScalar2 = this.getScalar(k0),\n          R = _this$getScalar2.point,\n          rx = _this$getScalar2.x,\n          k = _this$getScalar2.scalar;\n\n      return {\n        R: R,\n        rx: rx,\n        k: k\n      };\n    }\n  }, {\n    key: \"finalizeSig\",\n    value: function finalizeSig(R, k, e, d) {\n      return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n    }\n  }, {\n    key: \"error\",\n    value: function error() {\n      throw new Error('sign: Invalid signature produced');\n    }\n  }, {\n    key: \"calc\",\n    value: function () {\n      var _calc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var m, d, px, rand, tag, t, _this$finalizeNonce, R, rx, k, e, sig;\n\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                m = this.m, d = this.d, px = this.px, rand = this.rand;\n                tag = utils.taggedHash;\n                _context3.t0 = this;\n                _context3.t1 = d;\n                _context3.next = 6;\n                return tag(TAGS.aux, rand);\n\n              case 6:\n                _context3.t2 = _context3.sent;\n                t = _context3.t0.initNonce.call(_context3.t0, _context3.t1, _context3.t2);\n                _context3.t3 = this;\n                _context3.next = 11;\n                return tag(TAGS.nonce, t, px, m);\n\n              case 11:\n                _context3.t4 = _context3.sent;\n                _this$finalizeNonce = _context3.t3.finalizeNonce.call(_context3.t3, _context3.t4);\n                R = _this$finalizeNonce.R;\n                rx = _this$finalizeNonce.rx;\n                k = _this$finalizeNonce.k;\n                _context3.t5 = schnorrChallengeFinalize;\n                _context3.next = 19;\n                return tag(TAGS.challenge, rx, px, m);\n\n              case 19:\n                _context3.t6 = _context3.sent;\n                e = (0, _context3.t5)(_context3.t6);\n                sig = this.finalizeSig(R, k, e, d);\n                _context3.next = 24;\n                return schnorrVerify(sig, m, px);\n\n              case 24:\n                if (_context3.sent) {\n                  _context3.next = 26;\n                  break;\n                }\n\n                this.error();\n\n              case 26:\n                return _context3.abrupt(\"return\", sig);\n\n              case 27:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function calc() {\n        return _calc.apply(this, arguments);\n      }\n\n      return calc;\n    }()\n  }, {\n    key: \"calcSync\",\n    value: function calcSync() {\n      var m = this.m,\n          d = this.d,\n          px = this.px,\n          rand = this.rand;\n      var tag = utils.taggedHashSync;\n      var t = this.initNonce(d, tag(TAGS.aux, rand));\n\n      var _this$finalizeNonce2 = this.finalizeNonce(tag(TAGS.nonce, t, px, m)),\n          R = _this$finalizeNonce2.R,\n          rx = _this$finalizeNonce2.rx,\n          k = _this$finalizeNonce2.k;\n\n      var e = schnorrChallengeFinalize(tag(TAGS.challenge, rx, px, m));\n      var sig = this.finalizeSig(R, k, e, d);\n      if (!schnorrVerifySync(sig, m, px)) this.error();\n      return sig;\n    }\n  }]);\n\n  return InternalSchnorrSignature;\n}();\n\nfunction schnorrSign(_x3, _x4, _x5) {\n  return _schnorrSign.apply(this, arguments);\n}\n\nfunction _schnorrSign() {\n  _schnorrSign = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(msg, privKey, auxRand) {\n    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            return _context8.abrupt(\"return\", new InternalSchnorrSignature(msg, privKey, auxRand).calc());\n\n          case 1:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _schnorrSign.apply(this, arguments);\n}\n\nfunction schnorrSignSync(msg, privKey, auxRand) {\n  return new InternalSchnorrSignature(msg, privKey, auxRand).calcSync();\n}\n\nfunction initSchnorrVerify(signature, message, publicKey) {\n  var raw = signature instanceof SchnorrSignature;\n  var sig = raw ? signature : SchnorrSignature.fromHex(signature);\n  if (raw) sig.assertValidity();\n  return _objectSpread(_objectSpread({}, sig), {}, {\n    m: ensureBytes(message),\n    P: normalizePublicKey(publicKey)\n  });\n}\n\nfunction finalizeSchnorrVerify(r, P, s, e) {\n  var R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n  if (!R || !R.hasEvenY() || R.x !== r) return false;\n  return true;\n}\n\nfunction schnorrVerify(_x6, _x7, _x8) {\n  return _schnorrVerify.apply(this, arguments);\n}\n\nfunction _schnorrVerify() {\n  _schnorrVerify = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(signature, message, publicKey) {\n    var _initSchnorrVerify2, r, s, m, P, e;\n\n    return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.prev = 0;\n            _initSchnorrVerify2 = initSchnorrVerify(signature, message, publicKey), r = _initSchnorrVerify2.r, s = _initSchnorrVerify2.s, m = _initSchnorrVerify2.m, P = _initSchnorrVerify2.P;\n            _context9.t0 = schnorrChallengeFinalize;\n            _context9.next = 5;\n            return utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m);\n\n          case 5:\n            _context9.t1 = _context9.sent;\n            e = (0, _context9.t0)(_context9.t1);\n            return _context9.abrupt(\"return\", finalizeSchnorrVerify(r, P, s, e));\n\n          case 10:\n            _context9.prev = 10;\n            _context9.t2 = _context9[\"catch\"](0);\n            return _context9.abrupt(\"return\", false);\n\n          case 13:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9, null, [[0, 10]]);\n  }));\n  return _schnorrVerify.apply(this, arguments);\n}\n\nfunction schnorrVerifySync(signature, message, publicKey) {\n  try {\n    var _initSchnorrVerify = initSchnorrVerify(signature, message, publicKey),\n        r = _initSchnorrVerify.r,\n        s = _initSchnorrVerify.s,\n        m = _initSchnorrVerify.m,\n        P = _initSchnorrVerify.P;\n\n    var e = schnorrChallengeFinalize(utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n    return finalizeSchnorrVerify(r, P, s, e);\n  } catch (error) {\n    if (error instanceof ShaError) throw error;\n    return false;\n  }\n}\n\nexport var schnorr = {\n  Signature: SchnorrSignature,\n  getPublicKey: schnorrGetPublicKey,\n  sign: schnorrSign,\n  verify: schnorrVerify,\n  signSync: schnorrSignSync,\n  verifySync: schnorrVerifySync\n};\n\nPoint.BASE._setWindowSize(8);\n\nvar crypto = {\n  node: nodeCrypto,\n  web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined\n};\nvar TAGS = {\n  challenge: 'BIP0340/challenge',\n  aux: 'BIP0340/aux',\n  nonce: 'BIP0340/nonce'\n};\nvar TAGGED_HASH_PREFIXES = {};\nexport var utils = {\n  bytesToHex: bytesToHex,\n  hexToBytes: hexToBytes,\n  concatBytes: concatBytes,\n  mod: mod,\n  invert: invert,\n  isValidPrivateKey: function isValidPrivateKey(privateKey) {\n    try {\n      normalizePrivateKey(privateKey);\n      return true;\n    } catch (error) {\n      return false;\n    }\n  },\n  _bigintTo32Bytes: numTo32b,\n  _normalizePrivateKey: normalizePrivateKey,\n  hashToPrivateKey: function hashToPrivateKey(hash) {\n    hash = ensureBytes(hash);\n    if (hash.length < 40 || hash.length > 1024) throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n\n    var num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n\n    return numTo32b(num);\n  },\n  randomBytes: function randomBytes() {\n    var bytesLength = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 32;\n\n    if (crypto.web) {\n      return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    } else if (crypto.node) {\n      var randomBytes = crypto.node.randomBytes;\n      return Uint8Array.from(randomBytes(bytesLength));\n    } else {\n      throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n  },\n  randomPrivateKey: function randomPrivateKey() {\n    return utils.hashToPrivateKey(utils.randomBytes(40));\n  },\n  sha256: function () {\n    var _sha = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n      var _len4,\n          messages,\n          _key4,\n          buffer,\n          createHash,\n          hash,\n          _args4 = arguments;\n\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              for (_len4 = _args4.length, messages = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n                messages[_key4] = _args4[_key4];\n              }\n\n              if (!crypto.web) {\n                _context4.next = 8;\n                break;\n              }\n\n              _context4.next = 4;\n              return crypto.web.subtle.digest('SHA-256', concatBytes.apply(void 0, messages));\n\n            case 4:\n              buffer = _context4.sent;\n              return _context4.abrupt(\"return\", new Uint8Array(buffer));\n\n            case 8:\n              if (!crypto.node) {\n                _context4.next = 15;\n                break;\n              }\n\n              createHash = crypto.node.createHash;\n              hash = createHash('sha256');\n              messages.forEach(function (m) {\n                return hash.update(m);\n              });\n              return _context4.abrupt(\"return\", Uint8Array.from(hash.digest()));\n\n            case 15:\n              throw new Error(\"The environment doesn't have sha256 function\");\n\n            case 16:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function sha256() {\n      return _sha.apply(this, arguments);\n    }\n\n    return sha256;\n  }(),\n  hmacSha256: function () {\n    var _hmacSha = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(key) {\n      var _len5,\n          messages,\n          _key5,\n          ckey,\n          message,\n          buffer,\n          createHmac,\n          hash,\n          _args5 = arguments;\n\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              for (_len5 = _args5.length, messages = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n                messages[_key5 - 1] = _args5[_key5];\n              }\n\n              if (!crypto.web) {\n                _context5.next = 12;\n                break;\n              }\n\n              _context5.next = 4;\n              return crypto.web.subtle.importKey('raw', key, {\n                name: 'HMAC',\n                hash: {\n                  name: 'SHA-256'\n                }\n              }, false, ['sign']);\n\n            case 4:\n              ckey = _context5.sent;\n              message = concatBytes.apply(void 0, messages);\n              _context5.next = 8;\n              return crypto.web.subtle.sign('HMAC', ckey, message);\n\n            case 8:\n              buffer = _context5.sent;\n              return _context5.abrupt(\"return\", new Uint8Array(buffer));\n\n            case 12:\n              if (!crypto.node) {\n                _context5.next = 19;\n                break;\n              }\n\n              createHmac = crypto.node.createHmac;\n              hash = createHmac('sha256', key);\n              messages.forEach(function (m) {\n                return hash.update(m);\n              });\n              return _context5.abrupt(\"return\", Uint8Array.from(hash.digest()));\n\n            case 19:\n              throw new Error(\"The environment doesn't have hmac-sha256 function\");\n\n            case 20:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function hmacSha256(_x9) {\n      return _hmacSha.apply(this, arguments);\n    }\n\n    return hmacSha256;\n  }(),\n  sha256Sync: undefined,\n  hmacSha256Sync: undefined,\n  taggedHash: function () {\n    var _taggedHash = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(tag) {\n      var tagP,\n          tagH,\n          _len6,\n          messages,\n          _key6,\n          _args6 = arguments;\n\n      return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              tagP = TAGGED_HASH_PREFIXES[tag];\n\n              if (!(tagP === undefined)) {\n                _context6.next = 7;\n                break;\n              }\n\n              _context6.next = 4;\n              return utils.sha256(Uint8Array.from(tag, function (c) {\n                return c.charCodeAt(0);\n              }));\n\n            case 4:\n              tagH = _context6.sent;\n              tagP = concatBytes(tagH, tagH);\n              TAGGED_HASH_PREFIXES[tag] = tagP;\n\n            case 7:\n              for (_len6 = _args6.length, messages = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n                messages[_key6 - 1] = _args6[_key6];\n              }\n\n              return _context6.abrupt(\"return\", utils.sha256.apply(utils, [tagP].concat(messages)));\n\n            case 9:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    function taggedHash(_x10) {\n      return _taggedHash.apply(this, arguments);\n    }\n\n    return taggedHash;\n  }(),\n  taggedHashSync: function taggedHashSync(tag) {\n    if (typeof _sha256Sync !== 'function') throw new ShaError('sha256Sync is undefined, you need to set it');\n    var tagP = TAGGED_HASH_PREFIXES[tag];\n\n    if (tagP === undefined) {\n      var tagH = _sha256Sync(Uint8Array.from(tag, function (c) {\n        return c.charCodeAt(0);\n      }));\n\n      tagP = concatBytes(tagH, tagH);\n      TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n\n    for (var _len7 = arguments.length, messages = new Array(_len7 > 1 ? _len7 - 1 : 0), _key7 = 1; _key7 < _len7; _key7++) {\n      messages[_key7 - 1] = arguments[_key7];\n    }\n\n    return _sha256Sync.apply(void 0, [tagP].concat(messages));\n  },\n  precompute: function precompute() {\n    var windowSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 8;\n    var point = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Point.BASE;\n    var cached = point === Point.BASE ? point : new Point(point.x, point.y);\n\n    cached._setWindowSize(windowSize);\n\n    cached.multiply(_3n);\n    return cached;\n  }\n};\nObject.defineProperties(utils, {\n  sha256Sync: {\n    configurable: false,\n    get: function get() {\n      return _sha256Sync;\n    },\n    set: function set(val) {\n      if (!_sha256Sync) _sha256Sync = val;\n    }\n  },\n  hmacSha256Sync: {\n    configurable: false,\n    get: function get() {\n      return _hmacSha256Sync;\n    },\n    set: function set(val) {\n      if (!_hmacSha256Sync) _hmacSha256Sync = val;\n    }\n  }\n});","map":{"version":3,"names":["nodeCrypto","_0n","BigInt","_1n","_2n","_3n","_8n","CURVE","Object","freeze","a","b","P","n","h","Gx","Gy","beta","weistrass","x","x2","mod","x3","USE_ENDOMORPHISM","ShaError","message","Error","JacobianPoint","y","z","other","TypeError","X1","Y1","Z1","X2","Y2","Z2","Z1Z1","Z2Z2","U1","U2","S1","S2","A","B","C","x1b","D","E","F","X3","Y3","Z3","H","r","double","ZERO","HH","HHH","V","add","negate","scalar","P0","normalizeScalar","p","d","splitScalarEndo","k1neg","k1","k2neg","k2","k1p","k2p","W","windows","points","base","window","push","i","affinePoint","equals","BASE","Point","_WINDOW_SIZE","precomputes","pointPrecomputes","get","precomputeWindow","normalizeZ","set","f","windowSize","mask","maxNumber","shiftBy","offset","wbits","Number","pr","cached","Math","abs","point","fake","wNAF","f1p","f2p","invZ","invert","iz1","iz2","iz3","ax","ay","zz","toInv","invertBatch","map","toAffine","toAffineBatch","fromAffine","WeakMap","delete","isCompressed","hexToBytes","toHex","numTo32bStr","prefix","hasEvenY","slice","toRawBytes","msg","isValidFieldElement","left","right","multiply","Q","aP","multiplyUnsafe","bQ","sum","undefined","bytes","isShort","length","bytesToNumber","subarray","y2","sqrtMod","isYOdd","isFirstByteOdd","assertValidity","hex","ensureBytes","len","header","fromCompressedHex","fromUncompressedHex","privateKey","normalizePrivateKey","msgHash","signature","recovery","truncateHash","normalizeSignature","s","R","fromHex","rinv","u1","u2","multiplyAndAddUnsafe","sliceDER","parseInt","parseDERInt","data","bytesToHex","res","parseDERSignature","sBytes","rBytesLeft","Signature","isWithinCurveOrder","HALF","hasHighS","toDERHex","sHex","numberToHexUnpadded","rHex","rLen","sLen","toDERRawBytes","toCompactHex","arr","Uint8Array","name","str","hexToNumber","fromDER","concatBytes","arrays","every","reduce","result","pad","hexes","Array","from","v","toString","padStart","uint8a","POW_2_256","num","numTo32b","array","j","hexByte","byte","isNaN","isSafeInteger","pow2","power","_6n","_11n","_22n","_23n","_44n","_88n","b2","b3","b6","b9","b11","b22","b44","b88","b176","b220","b223","t1","t2","number","modulo","u","q","m","gcd","nums","scratch","lastMultiplied","acc","inverted","reduceRight","divNearest","ENDO","a1","b1","a2","POW_2_128","k","c1","c2","hash","byteLength","delta","_sha256Sync","_hmacSha256Sync","HmacDrbg","fill","counter","values","utils","hmacSha256","seed","hmac","checkSync","hmacSync","incr","kmdToSig","kBytes","sig","key","normalizePublicKey","publicKey","error","fromCompact","getPublicKey","fromPrivateKey","recoverPublicKey","fromSignature","isProbPub","item","getSharedSecret","privateA","publicB","bits2int","bits2octets","z1","z2","int2octets","initSigArgs","extraEntropy","h1","seedArgs","randomBytes","e","finalizeSig","recSig","opts","assign","canonical","der","recovered","normalizeS","hashed","toCompactRawBytes","sign","privKey","drbg","reseed","generate","signSync","reseedSync","generateSync","vopts","strict","verify","sinv","schnorrChallengeFinalize","ch","SchnorrSignature","schnorrGetPublicKey","toRawX","InternalSchnorrSignature","auxRand","getScalar","px","rand","priv","t0h","k0h","k0","rx","tag","taggedHash","TAGS","aux","t","initNonce","nonce","finalizeNonce","challenge","schnorrVerify","taggedHashSync","schnorrVerifySync","schnorrSign","calc","schnorrSignSync","calcSync","initSchnorrVerify","raw","finalizeSchnorrVerify","schnorr","verifySync","_setWindowSize","crypto","node","web","self","TAGGED_HASH_PREFIXES","isValidPrivateKey","_bigintTo32Bytes","_normalizePrivateKey","hashToPrivateKey","bytesLength","getRandomValues","randomPrivateKey","sha256","messages","subtle","digest","buffer","createHash","forEach","update","importKey","ckey","createHmac","sha256Sync","hmacSha256Sync","tagP","c","charCodeAt","tagH","precompute","defineProperties","configurable","val"],"sources":["/Users/sarahagarrat/git/sceneportal/node_modules/@noble/secp256k1/lib/esm/index.js"],"sourcesContent":["/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst CURVE = Object.freeze({\n    a: _0n,\n    b: BigInt(7),\n    P: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n});\nexport { CURVE };\nfunction weistrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass ShaError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(B * B);\n        const x1b = X1 + B;\n        const D = mod(_2n * (mod(x1b * x1b) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E * E);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H * H);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r * r - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        const P0 = JacobianPoint.ZERO;\n        if (typeof scalar === 'bigint' && scalar === _0n)\n            return P0;\n        let n = normalizeScalar(scalar);\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.ZERO;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ = invert(this.z)) {\n        const { x, y, z } = this;\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    hasEvenY() {\n        return this.y % _2n === _0n;\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weistrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, 33));\n        const y = bytesToNumber(bytes.subarray(33, 65));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === 32 || (len === 33 && (header === 0x02 || header === 0x03))) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === 65 && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-33 compressed bytes or 65 uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        msgHash = ensureBytes(msgHash);\n        const h = truncateHash(msgHash);\n        const { r, s } = normalizeSignature(signature);\n        if (recovery !== 0 && recovery !== 1) {\n            throw new Error('Cannot recover signature: invalid recovery bit');\n        }\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(r));\n        const { n } = CURVE;\n        const rinv = invert(r, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.hasEvenY() ? '02' : '03';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weistrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = hex instanceof Uint8Array;\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = hex instanceof Uint8Array;\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, CURVE.n - this.s) : this;\n    }\n    toDERRawBytes(isCompressed = false) {\n        return hexToBytes(this.toDERHex(isCompressed));\n    }\n    toDERHex(isCompressed = false) {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        if (isCompressed)\n            return sHex;\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const rLen = numberToHexUnpadded(rHex.length / 2);\n        const sLen = numberToHexUnpadded(sHex.length / 2);\n        const length = numberToHexUnpadded(rHex.length / 2 + sHex.length / 2 + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every((b) => b instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nfunction numTo32bStr(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    if (!(_0n <= num && num < POW_2_256))\n        throw new Error('Expected number < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    const b = hexToBytes(numTo32bStr(num));\n    if (b.length !== 32)\n        throw new Error('Error: expected 32 bytes');\n    return b;\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    return pow2(t2, _2n);\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst ENDO = {\n    a1: BigInt('0x3086d221a7d46bcde86c90e49284eb15'),\n    b1: -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3'),\n    a2: BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8'),\n    b2: BigInt('0x3086d221a7d46bcde86c90e49284eb15'),\n    POW_2_128: BigInt('0x100000000000000000000000000000000'),\n};\nfunction splitScalarEndo(k) {\n    const { n } = CURVE;\n    const { a1, b1, a2, b2, POW_2_128 } = ENDO;\n    const c1 = divNearest(b2 * k, n);\n    const c2 = divNearest(-b1 * k, n);\n    let k1 = mod(k - c1 * a1 - c2 * a2, n);\n    let k2 = mod(-c1 * b1 - c2 * b2, n);\n    const k1neg = k1 > POW_2_128;\n    const k2neg = k2 > POW_2_128;\n    if (k1neg)\n        k1 = n - k1;\n    if (k2neg)\n        k2 = n - k2;\n    if (k1 > POW_2_128 || k2 > POW_2_128) {\n        throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n    }\n    return { k1neg, k1, k2neg, k2 };\n}\nfunction truncateHash(hash) {\n    const { n } = CURVE;\n    const byteLength = hash.length;\n    const delta = byteLength * 8 - 256;\n    let h = bytesToNumber(hash);\n    if (delta > 0)\n        h = h >> BigInt(delta);\n    if (h >= n)\n        h -= n;\n    return h;\n}\nlet _sha256Sync;\nlet _hmacSha256Sync;\nclass HmacDrbg {\n    constructor() {\n        this.v = new Uint8Array(32).fill(1);\n        this.k = new Uint8Array(32).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        return _hmacSha256Sync(this.k, ...values);\n    }\n    checkSync() {\n        if (typeof _hmacSha256Sync !== 'function')\n            throw new ShaError('hmacSha256Sync needs to be set');\n    }\n    incr() {\n        if (this.counter >= 1000)\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.checkSync();\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        this.v = await this.hmac(this.v);\n        return this.v;\n    }\n    generateSync() {\n        this.checkSync();\n        this.incr();\n        this.v = this.hmacSync(this.v);\n        return this.v;\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d) {\n    const k = bytesToNumber(kBytes);\n    if (!isWithinCurveOrder(k))\n        return;\n    const { n } = CURVE;\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(invert(k, n) * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    const sig = new Signature(r, s);\n    const recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 64)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (key instanceof Uint8Array) {\n        if (key.length !== 32)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nfunction isProbPub(item) {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === 33 || len === 65;\n    if (str)\n        return len === 66 || len === 130;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isProbPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isProbPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > 32 ? bytes.slice(0, 32) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    return numTo32b(num);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(32);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== 32)\n            throw new Error('sign: Expected 32 bytes of extra data');\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    let { sig, recovery } = recSig;\n    const { canonical, der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    if (canonical && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    await drbg.reseed(seed);\n    while (!(sig = kmdToSig(await drbg.generate(), m, d)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    drbg.reseedSync(seed);\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nfunction schnorrChallengeFinalize(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nclass InternalSchnorrSignature {\n    constructor(message, privateKey, auxRand = utils.randomBytes()) {\n        if (message == null)\n            throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n        this.m = ensureBytes(message);\n        const { x, scalar } = this.getScalar(normalizePrivateKey(privateKey));\n        this.px = x;\n        this.d = scalar;\n        this.rand = ensureBytes(auxRand);\n        if (this.rand.length !== 32)\n            throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    }\n    getScalar(priv) {\n        const point = Point.fromPrivateKey(priv);\n        const scalar = point.hasEvenY() ? priv : CURVE.n - priv;\n        return { point, scalar, x: point.toRawX() };\n    }\n    initNonce(d, t0h) {\n        return numTo32b(d ^ bytesToNumber(t0h));\n    }\n    finalizeNonce(k0h) {\n        const k0 = mod(bytesToNumber(k0h), CURVE.n);\n        if (k0 === _0n)\n            throw new Error('sign: Creation of signature failed. k is zero');\n        const { point: R, x: rx, scalar: k } = this.getScalar(k0);\n        return { R, rx, k };\n    }\n    finalizeSig(R, k, e, d) {\n        return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n    }\n    error() {\n        throw new Error('sign: Invalid signature produced');\n    }\n    async calc() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHash;\n        const t = this.initNonce(d, await tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(await tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(await tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!(await schnorrVerify(sig, m, px)))\n            this.error();\n        return sig;\n    }\n    calcSync() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHashSync;\n        const t = this.initNonce(d, tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!schnorrVerifySync(sig, m, px))\n            this.error();\n        return sig;\n    }\n}\nasync function schnorrSign(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calc();\n}\nfunction schnorrSignSync(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calcSync();\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !R.hasEvenY() || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(await utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        if (error instanceof ShaError)\n            throw error;\n        return false;\n    }\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    _bigintTo32Bytes: numTo32b,\n    _normalizePrivateKey: normalizePrivateKey,\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.hashToPrivateKey(utils.randomBytes(40));\n    },\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof _sha256Sync !== 'function')\n            throw new ShaError('sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = _sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return _sha256Sync(tagP, ...messages);\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n};\nObject.defineProperties(utils, {\n    sha256Sync: {\n        configurable: false,\n        get() {\n            return _sha256Sync;\n        },\n        set(val) {\n            if (!_sha256Sync)\n                _sha256Sync = val;\n        },\n    },\n    hmacSha256Sync: {\n        configurable: false,\n        get() {\n            return _hmacSha256Sync;\n        },\n        set(val) {\n            if (!_hmacSha256Sync)\n                _hmacSha256Sync = val;\n        },\n    },\n});\n"],"mappings":";;;;;;;;;AAAA;AACA,OAAO,KAAKA,UAAZ,MAA4B,QAA5B;;AACA,IAAMC,GAAG,GAAGC,MAAM,CAAC,CAAD,CAAlB;;AACA,IAAMC,GAAG,GAAGD,MAAM,CAAC,CAAD,CAAlB;;AACA,IAAME,GAAG,GAAGF,MAAM,CAAC,CAAD,CAAlB;;AACA,IAAMG,GAAG,GAAGH,MAAM,CAAC,CAAD,CAAlB;;AACA,IAAMI,GAAG,GAAGJ,MAAM,CAAC,CAAD,CAAlB;;AACA,IAAMK,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAc;EACxBC,CAAC,EAAET,GADqB;EAExBU,CAAC,EAAET,MAAM,CAAC,CAAD,CAFe;EAGxBU,CAAC,EAAEV,MAAM,CAAC,oEAAD,CAHe;EAIxBW,CAAC,EAAEX,MAAM,CAAC,oEAAD,CAJe;EAKxBY,CAAC,EAAEX,GALqB;EAMxBY,EAAE,EAAEb,MAAM,CAAC,+EAAD,CANc;EAOxBc,EAAE,EAAEd,MAAM,CAAC,+EAAD,CAPc;EAQxBe,IAAI,EAAEf,MAAM,CAAC,oEAAD;AARY,CAAd,CAAd;AAUA,SAASK,KAAT;;AACA,SAASW,SAAT,CAAmBC,CAAnB,EAAsB;EAClB,IAAQT,CAAR,GAAiBH,KAAjB,CAAQG,CAAR;EAAA,IAAWC,CAAX,GAAiBJ,KAAjB,CAAWI,CAAX;EACA,IAAMS,EAAE,GAAGC,GAAG,CAACF,CAAC,GAAGA,CAAL,CAAd;EACA,IAAMG,EAAE,GAAGD,GAAG,CAACD,EAAE,GAAGD,CAAN,CAAd;EACA,OAAOE,GAAG,CAACC,EAAE,GAAGZ,CAAC,GAAGS,CAAT,GAAaR,CAAd,CAAV;AACH;;AACD,IAAMY,gBAAgB,GAAGhB,KAAK,CAACG,CAAN,KAAYT,GAArC;;IACMuB,Q;;;;;EACF,kBAAYC,OAAZ,EAAqB;IAAA;;IAAA,yBACXA,OADW;EAEpB;;;iCAHkBC,K;;IAKjBC,a;EACF,uBAAYR,CAAZ,EAAeS,CAAf,EAAkBC,CAAlB,EAAqB;IAAA;;IACjB,KAAKV,CAAL,GAASA,CAAT;IACA,KAAKS,CAAL,GAASA,CAAT;IACA,KAAKC,CAAL,GAASA,CAAT;EACH;;;;WAcD,gBAAOC,KAAP,EAAc;MACV,IAAI,EAAEA,KAAK,YAAYH,aAAnB,CAAJ,EACI,MAAM,IAAII,SAAJ,CAAc,wBAAd,CAAN;MACJ,IAAWC,EAAX,GAAgC,IAAhC,CAAQb,CAAR;MAAA,IAAkBc,EAAlB,GAAgC,IAAhC,CAAeL,CAAf;MAAA,IAAyBM,EAAzB,GAAgC,IAAhC,CAAsBL,CAAtB;MACA,IAAWM,EAAX,GAAgCL,KAAhC,CAAQX,CAAR;MAAA,IAAkBiB,EAAlB,GAAgCN,KAAhC,CAAeF,CAAf;MAAA,IAAyBS,EAAzB,GAAgCP,KAAhC,CAAsBD,CAAtB;MACA,IAAMS,IAAI,GAAGjB,GAAG,CAACa,EAAE,GAAGA,EAAN,CAAhB;MACA,IAAMK,IAAI,GAAGlB,GAAG,CAACgB,EAAE,GAAGA,EAAN,CAAhB;MACA,IAAMG,EAAE,GAAGnB,GAAG,CAACW,EAAE,GAAGO,IAAN,CAAd;MACA,IAAME,EAAE,GAAGpB,GAAG,CAACc,EAAE,GAAGG,IAAN,CAAd;MACA,IAAMI,EAAE,GAAGrB,GAAG,CAACA,GAAG,CAACY,EAAE,GAAGI,EAAN,CAAH,GAAeE,IAAhB,CAAd;MACA,IAAMI,EAAE,GAAGtB,GAAG,CAACA,GAAG,CAACe,EAAE,GAAGF,EAAN,CAAH,GAAeI,IAAhB,CAAd;MACA,OAAOE,EAAE,KAAKC,EAAP,IAAaC,EAAE,KAAKC,EAA3B;IACH;;;WACD,kBAAS;MACL,OAAO,IAAIhB,aAAJ,CAAkB,KAAKR,CAAvB,EAA0BE,GAAG,CAAC,CAAC,KAAKO,CAAP,CAA7B,EAAwC,KAAKC,CAA7C,CAAP;IACH;;;WACD,kBAAS;MACL,IAAWG,EAAX,GAAgC,IAAhC,CAAQb,CAAR;MAAA,IAAkBc,EAAlB,GAAgC,IAAhC,CAAeL,CAAf;MAAA,IAAyBM,EAAzB,GAAgC,IAAhC,CAAsBL,CAAtB;MACA,IAAMe,CAAC,GAAGvB,GAAG,CAACW,EAAE,GAAGA,EAAN,CAAb;MACA,IAAMa,CAAC,GAAGxB,GAAG,CAACY,EAAE,GAAGA,EAAN,CAAb;MACA,IAAMa,CAAC,GAAGzB,GAAG,CAACwB,CAAC,GAAGA,CAAL,CAAb;MACA,IAAME,GAAG,GAAGf,EAAE,GAAGa,CAAjB;MACA,IAAMG,CAAC,GAAG3B,GAAG,CAACjB,GAAG,IAAIiB,GAAG,CAAC0B,GAAG,GAAGA,GAAP,CAAH,GAAiBH,CAAjB,GAAqBE,CAAzB,CAAJ,CAAb;MACA,IAAMG,CAAC,GAAG5B,GAAG,CAAChB,GAAG,GAAGuC,CAAP,CAAb;MACA,IAAMM,CAAC,GAAG7B,GAAG,CAAC4B,CAAC,GAAGA,CAAL,CAAb;MACA,IAAME,EAAE,GAAG9B,GAAG,CAAC6B,CAAC,GAAG9C,GAAG,GAAG4C,CAAX,CAAd;MACA,IAAMI,EAAE,GAAG/B,GAAG,CAAC4B,CAAC,IAAID,CAAC,GAAGG,EAAR,CAAD,GAAe7C,GAAG,GAAGwC,CAAtB,CAAd;MACA,IAAMO,EAAE,GAAGhC,GAAG,CAACjB,GAAG,GAAG6B,EAAN,GAAWC,EAAZ,CAAd;MACA,OAAO,IAAIP,aAAJ,CAAkBwB,EAAlB,EAAsBC,EAAtB,EAA0BC,EAA1B,CAAP;IACH;;;WACD,aAAIvB,KAAJ,EAAW;MACP,IAAI,EAAEA,KAAK,YAAYH,aAAnB,CAAJ,EACI,MAAM,IAAII,SAAJ,CAAc,wBAAd,CAAN;MACJ,IAAWC,EAAX,GAAgC,IAAhC,CAAQb,CAAR;MAAA,IAAkBc,EAAlB,GAAgC,IAAhC,CAAeL,CAAf;MAAA,IAAyBM,EAAzB,GAAgC,IAAhC,CAAsBL,CAAtB;MACA,IAAWM,EAAX,GAAgCL,KAAhC,CAAQX,CAAR;MAAA,IAAkBiB,EAAlB,GAAgCN,KAAhC,CAAeF,CAAf;MAAA,IAAyBS,EAAzB,GAAgCP,KAAhC,CAAsBD,CAAtB;MACA,IAAIM,EAAE,KAAKlC,GAAP,IAAcmC,EAAE,KAAKnC,GAAzB,EACI,OAAO,IAAP;MACJ,IAAI+B,EAAE,KAAK/B,GAAP,IAAcgC,EAAE,KAAKhC,GAAzB,EACI,OAAO6B,KAAP;MACJ,IAAMQ,IAAI,GAAGjB,GAAG,CAACa,EAAE,GAAGA,EAAN,CAAhB;MACA,IAAMK,IAAI,GAAGlB,GAAG,CAACgB,EAAE,GAAGA,EAAN,CAAhB;MACA,IAAMG,EAAE,GAAGnB,GAAG,CAACW,EAAE,GAAGO,IAAN,CAAd;MACA,IAAME,EAAE,GAAGpB,GAAG,CAACc,EAAE,GAAGG,IAAN,CAAd;MACA,IAAMI,EAAE,GAAGrB,GAAG,CAACA,GAAG,CAACY,EAAE,GAAGI,EAAN,CAAH,GAAeE,IAAhB,CAAd;MACA,IAAMI,EAAE,GAAGtB,GAAG,CAACA,GAAG,CAACe,EAAE,GAAGF,EAAN,CAAH,GAAeI,IAAhB,CAAd;MACA,IAAMgB,CAAC,GAAGjC,GAAG,CAACoB,EAAE,GAAGD,EAAN,CAAb;MACA,IAAMe,CAAC,GAAGlC,GAAG,CAACsB,EAAE,GAAGD,EAAN,CAAb;;MACA,IAAIY,CAAC,KAAKrD,GAAV,EAAe;QACX,IAAIsD,CAAC,KAAKtD,GAAV,EAAe;UACX,OAAO,KAAKuD,MAAL,EAAP;QACH,CAFD,MAGK;UACD,OAAO7B,aAAa,CAAC8B,IAArB;QACH;MACJ;;MACD,IAAMC,EAAE,GAAGrC,GAAG,CAACiC,CAAC,GAAGA,CAAL,CAAd;MACA,IAAMK,GAAG,GAAGtC,GAAG,CAACiC,CAAC,GAAGI,EAAL,CAAf;MACA,IAAME,CAAC,GAAGvC,GAAG,CAACmB,EAAE,GAAGkB,EAAN,CAAb;MACA,IAAMP,EAAE,GAAG9B,GAAG,CAACkC,CAAC,GAAGA,CAAJ,GAAQI,GAAR,GAAcvD,GAAG,GAAGwD,CAArB,CAAd;MACA,IAAMR,EAAE,GAAG/B,GAAG,CAACkC,CAAC,IAAIK,CAAC,GAAGT,EAAR,CAAD,GAAeT,EAAE,GAAGiB,GAArB,CAAd;MACA,IAAMN,EAAE,GAAGhC,GAAG,CAACa,EAAE,GAAGG,EAAL,GAAUiB,CAAX,CAAd;MACA,OAAO,IAAI3B,aAAJ,CAAkBwB,EAAlB,EAAsBC,EAAtB,EAA0BC,EAA1B,CAAP;IACH;;;WACD,kBAASvB,KAAT,EAAgB;MACZ,OAAO,KAAK+B,GAAL,CAAS/B,KAAK,CAACgC,MAAN,EAAT,CAAP;IACH;;;WACD,wBAAeC,MAAf,EAAuB;MACnB,IAAMC,EAAE,GAAGrC,aAAa,CAAC8B,IAAzB;MACA,IAAI,OAAOM,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,KAAK9D,GAA7C,EACI,OAAO+D,EAAP;MACJ,IAAInD,CAAC,GAAGoD,eAAe,CAACF,MAAD,CAAvB;MACA,IAAIlD,CAAC,KAAKV,GAAV,EACI,OAAO,IAAP;;MACJ,IAAI,CAACoB,gBAAL,EAAuB;QACnB,IAAI2C,CAAC,GAAGF,EAAR;;QACA,IAAIG,EAAC,GAAG,IAAR;;QACA,OAAOtD,CAAC,GAAGZ,GAAX,EAAgB;UACZ,IAAIY,CAAC,GAAGV,GAAR,EACI+D,CAAC,GAAGA,CAAC,CAACL,GAAF,CAAMM,EAAN,CAAJ;UACJA,EAAC,GAAGA,EAAC,CAACX,MAAF,EAAJ;UACA3C,CAAC,KAAKV,GAAN;QACH;;QACD,OAAO+D,CAAP;MACH;;MACD,uBAA+BE,eAAe,CAACvD,CAAD,CAA9C;MAAA,IAAMwD,KAAN,oBAAMA,KAAN;MAAA,IAAaC,EAAb,oBAAaA,EAAb;MAAA,IAAiBC,KAAjB,oBAAiBA,KAAjB;MAAA,IAAwBC,EAAxB,oBAAwBA,EAAxB;;MACA,IAAIC,GAAG,GAAGT,EAAV;MACA,IAAIU,GAAG,GAAGV,EAAV;MACA,IAAIG,CAAC,GAAG,IAAR;;MACA,OAAOG,EAAE,GAAGrE,GAAL,IAAYuE,EAAE,GAAGvE,GAAxB,EAA6B;QACzB,IAAIqE,EAAE,GAAGnE,GAAT,EACIsE,GAAG,GAAGA,GAAG,CAACZ,GAAJ,CAAQM,CAAR,CAAN;QACJ,IAAIK,EAAE,GAAGrE,GAAT,EACIuE,GAAG,GAAGA,GAAG,CAACb,GAAJ,CAAQM,CAAR,CAAN;QACJA,CAAC,GAAGA,CAAC,CAACX,MAAF,EAAJ;QACAc,EAAE,KAAKnE,GAAP;QACAqE,EAAE,KAAKrE,GAAP;MACH;;MACD,IAAIkE,KAAJ,EACII,GAAG,GAAGA,GAAG,CAACX,MAAJ,EAAN;MACJ,IAAIS,KAAJ,EACIG,GAAG,GAAGA,GAAG,CAACZ,MAAJ,EAAN;MACJY,GAAG,GAAG,IAAI/C,aAAJ,CAAkBN,GAAG,CAACqD,GAAG,CAACvD,CAAJ,GAAQZ,KAAK,CAACU,IAAf,CAArB,EAA2CyD,GAAG,CAAC9C,CAA/C,EAAkD8C,GAAG,CAAC7C,CAAtD,CAAN;MACA,OAAO4C,GAAG,CAACZ,GAAJ,CAAQa,GAAR,CAAP;IACH;;;WACD,0BAAiBC,CAAjB,EAAoB;MAChB,IAAMC,OAAO,GAAGrD,gBAAgB,GAAG,MAAMoD,CAAN,GAAU,CAAb,GAAiB,MAAMA,CAAN,GAAU,CAA3D;MACA,IAAME,MAAM,GAAG,EAAf;MACA,IAAIX,CAAC,GAAG,IAAR;MACA,IAAIY,IAAI,GAAGZ,CAAX;;MACA,KAAK,IAAIa,MAAM,GAAG,CAAlB,EAAqBA,MAAM,GAAGH,OAA9B,EAAuCG,MAAM,EAA7C,EAAiD;QAC7CD,IAAI,GAAGZ,CAAP;QACAW,MAAM,CAACG,IAAP,CAAYF,IAAZ;;QACA,KAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,YAAG,CAAH,EAASN,CAAC,GAAG,CAAb,CAAjB,EAAkCM,CAAC,EAAnC,EAAuC;UACnCH,IAAI,GAAGA,IAAI,CAACjB,GAAL,CAASK,CAAT,CAAP;UACAW,MAAM,CAACG,IAAP,CAAYF,IAAZ;QACH;;QACDZ,CAAC,GAAGY,IAAI,CAACtB,MAAL,EAAJ;MACH;;MACD,OAAOqB,MAAP;IACH;;;WACD,cAAKhE,CAAL,EAAQqE,WAAR,EAAqB;MACjB,IAAI,CAACA,WAAD,IAAgB,KAAKC,MAAL,CAAYxD,aAAa,CAACyD,IAA1B,CAApB,EACIF,WAAW,GAAGG,KAAK,CAACD,IAApB;MACJ,IAAMT,CAAC,GAAIO,WAAW,IAAIA,WAAW,CAACI,YAA5B,IAA6C,CAAvD;;MACA,IAAI,MAAMX,CAAV,EAAa;QACT,MAAM,IAAIjD,KAAJ,CAAU,+DAAV,CAAN;MACH;;MACD,IAAI6D,WAAW,GAAGL,WAAW,IAAIM,gBAAgB,CAACC,GAAjB,CAAqBP,WAArB,CAAjC;;MACA,IAAI,CAACK,WAAL,EAAkB;QACdA,WAAW,GAAG,KAAKG,gBAAL,CAAsBf,CAAtB,CAAd;;QACA,IAAIO,WAAW,IAAIP,CAAC,KAAK,CAAzB,EAA4B;UACxBY,WAAW,GAAG5D,aAAa,CAACgE,UAAd,CAAyBJ,WAAzB,CAAd;UACAC,gBAAgB,CAACI,GAAjB,CAAqBV,WAArB,EAAkCK,WAAlC;QACH;MACJ;;MACD,IAAIrB,CAAC,GAAGvC,aAAa,CAAC8B,IAAtB;MACA,IAAIoC,CAAC,GAAGlE,aAAa,CAAC8B,IAAtB;MACA,IAAMmB,OAAO,GAAG,KAAKrD,gBAAgB,GAAG,MAAMoD,CAAT,GAAa,MAAMA,CAAxC,CAAhB;MACA,IAAMmB,UAAU,YAAG,CAAH,EAASnB,CAAC,GAAG,CAAb,CAAhB;MACA,IAAMoB,IAAI,GAAG7F,MAAM,CAAC,YAAKyE,CAAL,IAAS,CAAV,CAAnB;MACA,IAAMqB,SAAS,YAAG,CAAH,EAAQrB,CAAR,CAAf;MACA,IAAMsB,OAAO,GAAG/F,MAAM,CAACyE,CAAD,CAAtB;;MACA,KAAK,IAAII,MAAM,GAAG,CAAlB,EAAqBA,MAAM,GAAGH,OAA9B,EAAuCG,MAAM,EAA7C,EAAiD;QAC7C,IAAMmB,MAAM,GAAGnB,MAAM,GAAGe,UAAxB;QACA,IAAIK,KAAK,GAAGC,MAAM,CAACvF,CAAC,GAAGkF,IAAL,CAAlB;QACAlF,CAAC,KAAKoF,OAAN;;QACA,IAAIE,KAAK,GAAGL,UAAZ,EAAwB;UACpBK,KAAK,IAAIH,SAAT;UACAnF,CAAC,IAAIV,GAAL;QACH;;QACD,IAAIgG,KAAK,KAAK,CAAd,EAAiB;UACb,IAAIE,EAAE,GAAGd,WAAW,CAACW,MAAD,CAApB;UACA,IAAInB,MAAM,GAAG,CAAb,EACIsB,EAAE,GAAGA,EAAE,CAACvC,MAAH,EAAL;UACJ+B,CAAC,GAAGA,CAAC,CAAChC,GAAF,CAAMwC,EAAN,CAAJ;QACH,CALD,MAMK;UACD,IAAIC,MAAM,GAAGf,WAAW,CAACW,MAAM,GAAGK,IAAI,CAACC,GAAL,CAASL,KAAT,CAAT,GAA2B,CAA5B,CAAxB;UACA,IAAIA,KAAK,GAAG,CAAZ,EACIG,MAAM,GAAGA,MAAM,CAACxC,MAAP,EAAT;UACJI,CAAC,GAAGA,CAAC,CAACL,GAAF,CAAMyC,MAAN,CAAJ;QACH;MACJ;;MACD,OAAO;QAAEpC,CAAC,EAADA,CAAF;QAAK2B,CAAC,EAADA;MAAL,CAAP;IACH;;;WACD,kBAAS9B,MAAT,EAAiBmB,WAAjB,EAA8B;MAC1B,IAAIrE,CAAC,GAAGoD,eAAe,CAACF,MAAD,CAAvB;MACA,IAAI0C,KAAJ;MACA,IAAIC,IAAJ;;MACA,IAAInF,gBAAJ,EAAsB;QAClB,wBAAiC6C,eAAe,CAACvD,CAAD,CAAhD;QAAA,IAAQwD,KAAR,qBAAQA,KAAR;QAAA,IAAeC,EAAf,qBAAeA,EAAf;QAAA,IAAmBC,KAAnB,qBAAmBA,KAAnB;QAAA,IAA0BC,EAA1B,qBAA0BA,EAA1B;;QACA,iBAAyB,KAAKmC,IAAL,CAAUrC,EAAV,EAAcY,WAAd,CAAzB;QAAA,IAAST,GAAT,cAAMP,CAAN;QAAA,IAAiB0C,GAAjB,cAAcf,CAAd;;QACA,kBAAyB,KAAKc,IAAL,CAAUnC,EAAV,EAAcU,WAAd,CAAzB;QAAA,IAASR,GAAT,eAAMR,CAAN;QAAA,IAAiB2C,GAAjB,eAAchB,CAAd;;QACA,IAAIxB,KAAJ,EACII,GAAG,GAAGA,GAAG,CAACX,MAAJ,EAAN;QACJ,IAAIS,KAAJ,EACIG,GAAG,GAAGA,GAAG,CAACZ,MAAJ,EAAN;QACJY,GAAG,GAAG,IAAI/C,aAAJ,CAAkBN,GAAG,CAACqD,GAAG,CAACvD,CAAJ,GAAQZ,KAAK,CAACU,IAAf,CAArB,EAA2CyD,GAAG,CAAC9C,CAA/C,EAAkD8C,GAAG,CAAC7C,CAAtD,CAAN;QACA4E,KAAK,GAAGhC,GAAG,CAACZ,GAAJ,CAAQa,GAAR,CAAR;QACAgC,IAAI,GAAGE,GAAG,CAAC/C,GAAJ,CAAQgD,GAAR,CAAP;MACH,CAXD,MAYK;QACD,kBAAiB,KAAKF,IAAL,CAAU9F,CAAV,EAAaqE,WAAb,CAAjB;QAAA,IAAQhB,CAAR,eAAQA,CAAR;QAAA,IAAW2B,CAAX,eAAWA,CAAX;;QACAY,KAAK,GAAGvC,CAAR;QACAwC,IAAI,GAAGb,CAAP;MACH;;MACD,OAAOlE,aAAa,CAACgE,UAAd,CAAyB,CAACc,KAAD,EAAQC,IAAR,CAAzB,EAAwC,CAAxC,CAAP;IACH;;;WACD,oBAAgC;MAAA,IAAvBI,IAAuB,uEAAhBC,MAAM,CAAC,KAAKlF,CAAN,CAAU;MAC5B,IAAQV,CAAR,GAAoB,IAApB,CAAQA,CAAR;MAAA,IAAWS,CAAX,GAAoB,IAApB,CAAWA,CAAX;MAAA,IAAcC,CAAd,GAAoB,IAApB,CAAcA,CAAd;MACA,IAAMmF,GAAG,GAAGF,IAAZ;MACA,IAAMG,GAAG,GAAG5F,GAAG,CAAC2F,GAAG,GAAGA,GAAP,CAAf;MACA,IAAME,GAAG,GAAG7F,GAAG,CAAC4F,GAAG,GAAGD,GAAP,CAAf;MACA,IAAMG,EAAE,GAAG9F,GAAG,CAACF,CAAC,GAAG8F,GAAL,CAAd;MACA,IAAMG,EAAE,GAAG/F,GAAG,CAACO,CAAC,GAAGsF,GAAL,CAAd;MACA,IAAMG,EAAE,GAAGhG,GAAG,CAACQ,CAAC,GAAGmF,GAAL,CAAd;MACA,IAAIK,EAAE,KAAKlH,GAAX,EACI,MAAM,IAAIuB,KAAJ,CAAU,kBAAV,CAAN;MACJ,OAAO,IAAI2D,KAAJ,CAAU8B,EAAV,EAAcC,EAAd,CAAP;IACH;;;WApND,oBAAkBlD,CAAlB,EAAqB;MACjB,IAAI,EAAEA,CAAC,YAAYmB,KAAf,CAAJ,EAA2B;QACvB,MAAM,IAAItD,SAAJ,CAAc,0CAAd,CAAN;MACH;;MACD,OAAO,IAAIJ,aAAJ,CAAkBuC,CAAC,CAAC/C,CAApB,EAAuB+C,CAAC,CAACtC,CAAzB,EAA4BzB,GAA5B,CAAP;IACH;;;WACD,uBAAqB0E,MAArB,EAA6B;MACzB,IAAMyC,KAAK,GAAGC,WAAW,CAAC1C,MAAM,CAAC2C,GAAP,CAAW,UAACtD,CAAD;QAAA,OAAOA,CAAC,CAACrC,CAAT;MAAA,CAAX,CAAD,CAAzB;MACA,OAAOgD,MAAM,CAAC2C,GAAP,CAAW,UAACtD,CAAD,EAAIe,CAAJ;QAAA,OAAUf,CAAC,CAACuD,QAAF,CAAWH,KAAK,CAACrC,CAAD,CAAhB,CAAV;MAAA,CAAX,CAAP;IACH;;;WACD,oBAAkBJ,MAAlB,EAA0B;MACtB,OAAOlD,aAAa,CAAC+F,aAAd,CAA4B7C,MAA5B,EAAoC2C,GAApC,CAAwC7F,aAAa,CAACgG,UAAtD,CAAP;IACH;;;;;;AA0MLhG,aAAa,CAACyD,IAAd,GAAqB,IAAIzD,aAAJ,CAAkBpB,KAAK,CAACQ,EAAxB,EAA4BR,KAAK,CAACS,EAAlC,EAAsCb,GAAtC,CAArB;AACAwB,aAAa,CAAC8B,IAAd,GAAqB,IAAI9B,aAAJ,CAAkB1B,GAAlB,EAAuBE,GAAvB,EAA4BF,GAA5B,CAArB;AACA,IAAMuF,gBAAgB,GAAG,IAAIoC,OAAJ,EAAzB;AACA,WAAavC,KAAb;EACI,eAAYlE,CAAZ,EAAeS,CAAf,EAAkB;IAAA;;IACd,KAAKT,CAAL,GAASA,CAAT;IACA,KAAKS,CAAL,GAASA,CAAT;EACH;;EAJL;IAAA;IAAA,OAKI,wBAAekE,UAAf,EAA2B;MACvB,KAAKR,YAAL,GAAoBQ,UAApB;MACAN,gBAAgB,CAACqC,MAAjB,CAAwB,IAAxB;IACH;EARL;IAAA;IAAA,OASI,oBAAW;MACP,OAAO,KAAKjG,CAAL,GAASxB,GAAT,KAAiBH,GAAxB;IACH;EAXL;IAAA;IAAA,OAyEI,sBAAiC;MAAA,IAAtB6H,YAAsB,uEAAP,KAAO;MAC7B,OAAOC,UAAU,CAAC,KAAKC,KAAL,CAAWF,YAAX,CAAD,CAAjB;IACH;EA3EL;IAAA;IAAA,OA4EI,iBAA4B;MAAA,IAAtBA,YAAsB,uEAAP,KAAO;MACxB,IAAM3G,CAAC,GAAG8G,WAAW,CAAC,KAAK9G,CAAN,CAArB;;MACA,IAAI2G,YAAJ,EAAkB;QACd,IAAMI,MAAM,GAAG,KAAKC,QAAL,KAAkB,IAAlB,GAAyB,IAAxC;QACA,iBAAUD,MAAV,SAAmB/G,CAAnB;MACH,CAHD,MAIK;QACD,mBAAYA,CAAZ,SAAgB8G,WAAW,CAAC,KAAKrG,CAAN,CAA3B;MACH;IACJ;EArFL;IAAA;IAAA,OAsFI,kBAAS;MACL,OAAO,KAAKoG,KAAL,CAAW,IAAX,EAAiBI,KAAjB,CAAuB,CAAvB,CAAP;IACH;EAxFL;IAAA;IAAA,OAyFI,kBAAS;MACL,OAAO,KAAKC,UAAL,CAAgB,IAAhB,EAAsBD,KAAtB,CAA4B,CAA5B,CAAP;IACH;EA3FL;IAAA;IAAA,OA4FI,0BAAiB;MACb,IAAME,GAAG,GAAG,gCAAZ;MACA,IAAQnH,CAAR,GAAiB,IAAjB,CAAQA,CAAR;MAAA,IAAWS,CAAX,GAAiB,IAAjB,CAAWA,CAAX;MACA,IAAI,CAAC2G,mBAAmB,CAACpH,CAAD,CAApB,IAA2B,CAACoH,mBAAmB,CAAC3G,CAAD,CAAnD,EACI,MAAM,IAAIF,KAAJ,CAAU4G,GAAV,CAAN;MACJ,IAAME,IAAI,GAAGnH,GAAG,CAACO,CAAC,GAAGA,CAAL,CAAhB;MACA,IAAM6G,KAAK,GAAGvH,SAAS,CAACC,CAAD,CAAvB;MACA,IAAIE,GAAG,CAACmH,IAAI,GAAGC,KAAR,CAAH,KAAsBxI,GAA1B,EACI,MAAM,IAAIyB,KAAJ,CAAU4G,GAAV,CAAN;IACP;EArGL;IAAA;IAAA,OAsGI,gBAAOxG,KAAP,EAAc;MACV,OAAO,KAAKX,CAAL,KAAWW,KAAK,CAACX,CAAjB,IAAsB,KAAKS,CAAL,KAAWE,KAAK,CAACF,CAA9C;IACH;EAxGL;IAAA;IAAA,OAyGI,kBAAS;MACL,OAAO,IAAIyD,KAAJ,CAAU,KAAKlE,CAAf,EAAkBE,GAAG,CAAC,CAAC,KAAKO,CAAP,CAArB,CAAP;IACH;EA3GL;IAAA;IAAA,OA4GI,kBAAS;MACL,OAAOD,aAAa,CAACgG,UAAd,CAAyB,IAAzB,EAA+BnE,MAA/B,GAAwCiE,QAAxC,EAAP;IACH;EA9GL;IAAA;IAAA,OA+GI,aAAI3F,KAAJ,EAAW;MACP,OAAOH,aAAa,CAACgG,UAAd,CAAyB,IAAzB,EAA+B9D,GAA/B,CAAmClC,aAAa,CAACgG,UAAd,CAAyB7F,KAAzB,CAAnC,EAAoE2F,QAApE,EAAP;IACH;EAjHL;IAAA;IAAA,OAkHI,kBAAS3F,KAAT,EAAgB;MACZ,OAAO,KAAK+B,GAAL,CAAS/B,KAAK,CAACgC,MAAN,EAAT,CAAP;IACH;EApHL;IAAA;IAAA,OAqHI,kBAASC,MAAT,EAAiB;MACb,OAAOpC,aAAa,CAACgG,UAAd,CAAyB,IAAzB,EAA+Be,QAA/B,CAAwC3E,MAAxC,EAAgD,IAAhD,EAAsD0D,QAAtD,EAAP;IACH;EAvHL;IAAA;IAAA,OAwHI,8BAAqBkB,CAArB,EAAwBjI,CAAxB,EAA2BC,CAA3B,EAA8B;MAC1B,IAAMC,CAAC,GAAGe,aAAa,CAACgG,UAAd,CAAyB,IAAzB,CAAV;MACA,IAAMiB,EAAE,GAAGlI,CAAC,KAAKT,GAAN,IAAaS,CAAC,KAAKP,GAAnB,IAA0B,SAASkF,KAAK,CAACD,IAAzC,GAAgDxE,CAAC,CAACiI,cAAF,CAAiBnI,CAAjB,CAAhD,GAAsEE,CAAC,CAAC8H,QAAF,CAAWhI,CAAX,CAAjF;MACA,IAAMoI,EAAE,GAAGnH,aAAa,CAACgG,UAAd,CAAyBgB,CAAzB,EAA4BE,cAA5B,CAA2ClI,CAA3C,CAAX;MACA,IAAMoI,GAAG,GAAGH,EAAE,CAAC/E,GAAH,CAAOiF,EAAP,CAAZ;MACA,OAAOC,GAAG,CAAC5D,MAAJ,CAAWxD,aAAa,CAAC8B,IAAzB,IAAiCuF,SAAjC,GAA6CD,GAAG,CAACtB,QAAJ,EAApD;IACH;EA9HL;IAAA;IAAA,OAYI,2BAAyBwB,KAAzB,EAAgC;MAC5B,IAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,KAAiB,EAAjC;MACA,IAAMhI,CAAC,GAAGiI,aAAa,CAACF,OAAO,GAAGD,KAAH,GAAWA,KAAK,CAACI,QAAN,CAAe,CAAf,CAAnB,CAAvB;MACA,IAAI,CAACd,mBAAmB,CAACpH,CAAD,CAAxB,EACI,MAAM,IAAIO,KAAJ,CAAU,uBAAV,CAAN;MACJ,IAAM4H,EAAE,GAAGpI,SAAS,CAACC,CAAD,CAApB;MACA,IAAIS,CAAC,GAAG2H,OAAO,CAACD,EAAD,CAAf;MACA,IAAME,MAAM,GAAG,CAAC5H,CAAC,GAAGzB,GAAL,MAAcA,GAA7B;;MACA,IAAI+I,OAAJ,EAAa;QACT,IAAIM,MAAJ,EACI5H,CAAC,GAAGP,GAAG,CAAC,CAACO,CAAF,CAAP;MACP,CAHD,MAIK;QACD,IAAM6H,cAAc,GAAG,CAACR,KAAK,CAAC,CAAD,CAAL,GAAW,CAAZ,MAAmB,CAA1C;QACA,IAAIQ,cAAc,KAAKD,MAAvB,EACI5H,CAAC,GAAGP,GAAG,CAAC,CAACO,CAAF,CAAP;MACP;;MACD,IAAM6E,KAAK,GAAG,IAAIpB,KAAJ,CAAUlE,CAAV,EAAaS,CAAb,CAAd;MACA6E,KAAK,CAACiD,cAAN;MACA,OAAOjD,KAAP;IACH;EAhCL;IAAA;IAAA,OAiCI,6BAA2BwC,KAA3B,EAAkC;MAC9B,IAAM9H,CAAC,GAAGiI,aAAa,CAACH,KAAK,CAACI,QAAN,CAAe,CAAf,EAAkB,EAAlB,CAAD,CAAvB;MACA,IAAMzH,CAAC,GAAGwH,aAAa,CAACH,KAAK,CAACI,QAAN,CAAe,EAAf,EAAmB,EAAnB,CAAD,CAAvB;MACA,IAAM5C,KAAK,GAAG,IAAIpB,KAAJ,CAAUlE,CAAV,EAAaS,CAAb,CAAd;MACA6E,KAAK,CAACiD,cAAN;MACA,OAAOjD,KAAP;IACH;EAvCL;IAAA;IAAA,OAwCI,iBAAekD,GAAf,EAAoB;MAChB,IAAMV,KAAK,GAAGW,WAAW,CAACD,GAAD,CAAzB;MACA,IAAME,GAAG,GAAGZ,KAAK,CAACE,MAAlB;MACA,IAAMW,MAAM,GAAGb,KAAK,CAAC,CAAD,CAApB;;MACA,IAAIY,GAAG,KAAK,EAAR,IAAeA,GAAG,KAAK,EAAR,KAAeC,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,IAA7C,CAAnB,EAAwE;QACpE,OAAO,KAAKC,iBAAL,CAAuBd,KAAvB,CAAP;MACH;;MACD,IAAIY,GAAG,KAAK,EAAR,IAAcC,MAAM,KAAK,IAA7B,EACI,OAAO,KAAKE,mBAAL,CAAyBf,KAAzB,CAAP;MACJ,MAAM,IAAIvH,KAAJ,gHAAkHmI,GAAlH,EAAN;IACH;EAlDL;IAAA;IAAA,OAmDI,wBAAsBI,UAAtB,EAAkC;MAC9B,OAAO5E,KAAK,CAACD,IAAN,CAAWsD,QAAX,CAAoBwB,mBAAmB,CAACD,UAAD,CAAvC,CAAP;IACH;EArDL;IAAA;IAAA,OAsDI,uBAAqBE,OAArB,EAA8BC,SAA9B,EAAyCC,QAAzC,EAAmD;MAC/CF,OAAO,GAAGP,WAAW,CAACO,OAAD,CAArB;MACA,IAAMrJ,CAAC,GAAGwJ,YAAY,CAACH,OAAD,CAAtB;;MACA,0BAAiBI,kBAAkB,CAACH,SAAD,CAAnC;MAAA,IAAQ7G,CAAR,uBAAQA,CAAR;MAAA,IAAWiH,CAAX,uBAAWA,CAAX;;MACA,IAAIH,QAAQ,KAAK,CAAb,IAAkBA,QAAQ,KAAK,CAAnC,EAAsC;QAClC,MAAM,IAAI3I,KAAJ,CAAU,gDAAV,CAAN;MACH;;MACD,IAAMwG,MAAM,GAAGmC,QAAQ,GAAG,CAAX,GAAe,IAAf,GAAsB,IAArC;MACA,IAAMI,CAAC,GAAGpF,KAAK,CAACqF,OAAN,CAAcxC,MAAM,GAAGD,WAAW,CAAC1E,CAAD,CAAlC,CAAV;MACA,IAAQ1C,CAAR,GAAcN,KAAd,CAAQM,CAAR;MACA,IAAM8J,IAAI,GAAG5D,MAAM,CAACxD,CAAD,EAAI1C,CAAJ,CAAnB;MACA,IAAM+J,EAAE,GAAGvJ,GAAG,CAAC,CAACP,CAAD,GAAK6J,IAAN,EAAY9J,CAAZ,CAAd;MACA,IAAMgK,EAAE,GAAGxJ,GAAG,CAACmJ,CAAC,GAAGG,IAAL,EAAW9J,CAAX,CAAd;MACA,IAAM8H,CAAC,GAAGtD,KAAK,CAACD,IAAN,CAAW0F,oBAAX,CAAgCL,CAAhC,EAAmCG,EAAnC,EAAuCC,EAAvC,CAAV;MACA,IAAI,CAAClC,CAAL,EACI,MAAM,IAAIjH,KAAJ,CAAU,6CAAV,CAAN;MACJiH,CAAC,CAACe,cAAF;MACA,OAAOf,CAAP;IACH;EAxEL;;EAAA;AAAA;AAgIAtD,KAAK,CAACD,IAAN,GAAa,IAAIC,KAAJ,CAAU9E,KAAK,CAACQ,EAAhB,EAAoBR,KAAK,CAACS,EAA1B,CAAb;AACAqE,KAAK,CAAC5B,IAAN,GAAa,IAAI4B,KAAJ,CAAUpF,GAAV,EAAeA,GAAf,CAAb;;AACA,SAAS8K,QAAT,CAAkBP,CAAlB,EAAqB;EACjB,OAAOpE,MAAM,CAAC4E,QAAP,CAAgBR,CAAC,CAAC,CAAD,CAAjB,EAAsB,EAAtB,KAA6B,CAA7B,GAAiC,OAAOA,CAAxC,GAA4CA,CAAnD;AACH;;AACD,SAASS,WAAT,CAAqBC,IAArB,EAA2B;EACvB,IAAIA,IAAI,CAAC/B,MAAL,GAAc,CAAd,IAAmB+B,IAAI,CAAC,CAAD,CAAJ,KAAY,IAAnC,EAAyC;IACrC,MAAM,IAAIxJ,KAAJ,0CAA4CyJ,UAAU,CAACD,IAAD,CAAtD,EAAN;EACH;;EACD,IAAMrB,GAAG,GAAGqB,IAAI,CAAC,CAAD,CAAhB;EACA,IAAME,GAAG,GAAGF,IAAI,CAAC7B,QAAL,CAAc,CAAd,EAAiBQ,GAAG,GAAG,CAAvB,CAAZ;;EACA,IAAI,CAACA,GAAD,IAAQuB,GAAG,CAACjC,MAAJ,KAAeU,GAA3B,EAAgC;IAC5B,MAAM,IAAInI,KAAJ,2CAAN;EACH;;EACD,IAAI0J,GAAG,CAAC,CAAD,CAAH,KAAW,IAAX,IAAmBA,GAAG,CAAC,CAAD,CAAH,IAAU,IAAjC,EAAuC;IACnC,MAAM,IAAI1J,KAAJ,CAAU,4CAAV,CAAN;EACH;;EACD,OAAO;IAAEwJ,IAAI,EAAE9B,aAAa,CAACgC,GAAD,CAArB;IAA4B5C,IAAI,EAAE0C,IAAI,CAAC7B,QAAL,CAAcQ,GAAG,GAAG,CAApB;EAAlC,CAAP;AACH;;AACD,SAASwB,iBAAT,CAA2BH,IAA3B,EAAiC;EAC7B,IAAIA,IAAI,CAAC/B,MAAL,GAAc,CAAd,IAAmB+B,IAAI,CAAC,CAAD,CAAJ,IAAW,IAAlC,EAAwC;IACpC,MAAM,IAAIxJ,KAAJ,kCAAoCyJ,UAAU,CAACD,IAAD,CAA9C,EAAN;EACH;;EACD,IAAIA,IAAI,CAAC,CAAD,CAAJ,KAAYA,IAAI,CAAC/B,MAAL,GAAc,CAA9B,EAAiC;IAC7B,MAAM,IAAIzH,KAAJ,CAAU,qCAAV,CAAN;EACH;;EACD,mBAAkCuJ,WAAW,CAACC,IAAI,CAAC7B,QAAL,CAAc,CAAd,CAAD,CAA7C;EAAA,IAAc9F,CAAd,gBAAQ2H,IAAR;EAAA,IAAuBI,MAAvB,gBAAiB9C,IAAjB;;EACA,oBAAsCyC,WAAW,CAACK,MAAD,CAAjD;EAAA,IAAcd,CAAd,iBAAQU,IAAR;EAAA,IAAuBK,UAAvB,iBAAiB/C,IAAjB;;EACA,IAAI+C,UAAU,CAACpC,MAAf,EAAuB;IACnB,MAAM,IAAIzH,KAAJ,wDAA0DyJ,UAAU,CAACI,UAAD,CAApE,EAAN;EACH;;EACD,OAAO;IAAEhI,CAAC,EAADA,CAAF;IAAKiH,CAAC,EAADA;EAAL,CAAP;AACH;;AACD,WAAagB,SAAb;EACI,mBAAYjI,CAAZ,EAAeiH,CAAf,EAAkB;IAAA;;IACd,KAAKjH,CAAL,GAASA,CAAT;IACA,KAAKiH,CAAL,GAASA,CAAT;IACA,KAAKd,cAAL;EACH;;EALL;IAAA;IAAA,OA0BI,0BAAiB;MACb,IAAQnG,CAAR,GAAiB,IAAjB,CAAQA,CAAR;MAAA,IAAWiH,CAAX,GAAiB,IAAjB,CAAWA,CAAX;MACA,IAAI,CAACiB,kBAAkB,CAAClI,CAAD,CAAvB,EACI,MAAM,IAAI7B,KAAJ,CAAU,wCAAV,CAAN;MACJ,IAAI,CAAC+J,kBAAkB,CAACjB,CAAD,CAAvB,EACI,MAAM,IAAI9I,KAAJ,CAAU,wCAAV,CAAN;IACP;EAhCL;IAAA;IAAA,OAiCI,oBAAW;MACP,IAAMgK,IAAI,GAAGnL,KAAK,CAACM,CAAN,IAAWV,GAAxB;MACA,OAAO,KAAKqK,CAAL,GAASkB,IAAhB;IACH;EApCL;IAAA;IAAA,OAqCI,sBAAa;MACT,OAAO,KAAKC,QAAL,KAAkB,IAAIH,SAAJ,CAAc,KAAKjI,CAAnB,EAAsBhD,KAAK,CAACM,CAAN,GAAU,KAAK2J,CAArC,CAAlB,GAA4D,IAAnE;IACH;EAvCL;IAAA;IAAA,OAwCI,yBAAoC;MAAA,IAAtB1C,YAAsB,uEAAP,KAAO;MAChC,OAAOC,UAAU,CAAC,KAAK6D,QAAL,CAAc9D,YAAd,CAAD,CAAjB;IACH;EA1CL;IAAA;IAAA,OA2CI,oBAA+B;MAAA,IAAtBA,YAAsB,uEAAP,KAAO;MAC3B,IAAM+D,IAAI,GAAGd,QAAQ,CAACe,mBAAmB,CAAC,KAAKtB,CAAN,CAApB,CAArB;MACA,IAAI1C,YAAJ,EACI,OAAO+D,IAAP;MACJ,IAAME,IAAI,GAAGhB,QAAQ,CAACe,mBAAmB,CAAC,KAAKvI,CAAN,CAApB,CAArB;MACA,IAAMyI,IAAI,GAAGF,mBAAmB,CAACC,IAAI,CAAC5C,MAAL,GAAc,CAAf,CAAhC;MACA,IAAM8C,IAAI,GAAGH,mBAAmB,CAACD,IAAI,CAAC1C,MAAL,GAAc,CAAf,CAAhC;MACA,IAAMA,MAAM,GAAG2C,mBAAmB,CAACC,IAAI,CAAC5C,MAAL,GAAc,CAAd,GAAkB0C,IAAI,CAAC1C,MAAL,GAAc,CAAhC,GAAoC,CAArC,CAAlC;MACA,mBAAYA,MAAZ,eAAuB6C,IAAvB,SAA8BD,IAA9B,eAAuCE,IAAvC,SAA8CJ,IAA9C;IACH;EApDL;IAAA;IAAA,OAqDI,sBAAa;MACT,OAAO,KAAKK,aAAL,EAAP;IACH;EAvDL;IAAA;IAAA,OAwDI,iBAAQ;MACJ,OAAO,KAAKN,QAAL,EAAP;IACH;EA1DL;IAAA;IAAA,OA2DI,6BAAoB;MAChB,OAAO7D,UAAU,CAAC,KAAKoE,YAAL,EAAD,CAAjB;IACH;EA7DL;IAAA;IAAA,OA8DI,wBAAe;MACX,OAAOlE,WAAW,CAAC,KAAK1E,CAAN,CAAX,GAAsB0E,WAAW,CAAC,KAAKuC,CAAN,CAAxC;IACH;EAhEL;IAAA;IAAA,OAMI,qBAAmBb,GAAnB,EAAwB;MACpB,IAAMyC,GAAG,GAAGzC,GAAG,YAAY0C,UAA3B;MACA,IAAMC,IAAI,GAAG,uBAAb;MACA,IAAI,OAAO3C,GAAP,KAAe,QAAf,IAA2B,CAACyC,GAAhC,EACI,MAAM,IAAIrK,SAAJ,WAAiBuK,IAAjB,qCAAN;MACJ,IAAMC,GAAG,GAAGH,GAAG,GAAGjB,UAAU,CAACxB,GAAD,CAAb,GAAqBA,GAApC;MACA,IAAI4C,GAAG,CAACpD,MAAJ,KAAe,GAAnB,EACI,MAAM,IAAIzH,KAAJ,WAAa4K,IAAb,4BAAN;MACJ,OAAO,IAAId,SAAJ,CAAcgB,WAAW,CAACD,GAAG,CAACnE,KAAJ,CAAU,CAAV,EAAa,EAAb,CAAD,CAAzB,EAA6CoE,WAAW,CAACD,GAAG,CAACnE,KAAJ,CAAU,EAAV,EAAc,GAAd,CAAD,CAAxD,CAAP;IACH;EAfL;IAAA;IAAA,OAgBI,iBAAeuB,GAAf,EAAoB;MAChB,IAAMyC,GAAG,GAAGzC,GAAG,YAAY0C,UAA3B;MACA,IAAI,OAAO1C,GAAP,KAAe,QAAf,IAA2B,CAACyC,GAAhC,EACI,MAAM,IAAIrK,SAAJ,oDAAN;;MACJ,yBAAiBsJ,iBAAiB,CAACe,GAAG,GAAGzC,GAAH,GAAS5B,UAAU,CAAC4B,GAAD,CAAvB,CAAlC;MAAA,IAAQpG,CAAR,sBAAQA,CAAR;MAAA,IAAWiH,CAAX,sBAAWA,CAAX;;MACA,OAAO,IAAIgB,SAAJ,CAAcjI,CAAd,EAAiBiH,CAAjB,CAAP;IACH;EAtBL;IAAA;IAAA,OAuBI,iBAAeb,GAAf,EAAoB;MAChB,OAAO,KAAK8C,OAAL,CAAa9C,GAAb,CAAP;IACH;EAzBL;;EAAA;AAAA;;AAkEA,SAAS+C,WAAT,GAAgC;EAAA,kCAARC,MAAQ;IAARA,MAAQ;EAAA;;EAC5B,IAAI,CAACA,MAAM,CAACC,KAAP,CAAa,UAACjM,CAAD;IAAA,OAAOA,CAAC,YAAY0L,UAApB;EAAA,CAAb,CAAL,EACI,MAAM,IAAI3K,KAAJ,CAAU,0BAAV,CAAN;EACJ,IAAIiL,MAAM,CAACxD,MAAP,KAAkB,CAAtB,EACI,OAAOwD,MAAM,CAAC,CAAD,CAAb;EACJ,IAAMxD,MAAM,GAAGwD,MAAM,CAACE,MAAP,CAAc,UAACnM,CAAD,EAAI0L,GAAJ;IAAA,OAAY1L,CAAC,GAAG0L,GAAG,CAACjD,MAApB;EAAA,CAAd,EAA0C,CAA1C,CAAf;EACA,IAAM2D,MAAM,GAAG,IAAIT,UAAJ,CAAelD,MAAf,CAAf;;EACA,KAAK,IAAIlE,CAAC,GAAG,CAAR,EAAW8H,GAAG,GAAG,CAAtB,EAAyB9H,CAAC,GAAG0H,MAAM,CAACxD,MAApC,EAA4ClE,CAAC,EAA7C,EAAiD;IAC7C,IAAMmH,GAAG,GAAGO,MAAM,CAAC1H,CAAD,CAAlB;IACA6H,MAAM,CAAClH,GAAP,CAAWwG,GAAX,EAAgBW,GAAhB;IACAA,GAAG,IAAIX,GAAG,CAACjD,MAAX;EACH;;EACD,OAAO2D,MAAP;AACH;;AACD,IAAME,KAAK,GAAGC,KAAK,CAACC,IAAN,CAAW;EAAE/D,MAAM,EAAE;AAAV,CAAX,EAA4B,UAACgE,CAAD,EAAIlI,CAAJ;EAAA,OAAUA,CAAC,CAACmI,QAAF,CAAW,EAAX,EAAeC,QAAf,CAAwB,CAAxB,EAA2B,GAA3B,CAAV;AAAA,CAA5B,CAAd;;AACA,SAASlC,UAAT,CAAoBmC,MAApB,EAA4B;EACxB,IAAI,EAAEA,MAAM,YAAYjB,UAApB,CAAJ,EACI,MAAM,IAAI3K,KAAJ,CAAU,qBAAV,CAAN;EACJ,IAAIiI,GAAG,GAAG,EAAV;;EACA,KAAK,IAAI1E,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqI,MAAM,CAACnE,MAA3B,EAAmClE,CAAC,EAApC,EAAwC;IACpC0E,GAAG,IAAIqD,KAAK,CAACM,MAAM,CAACrI,CAAD,CAAP,CAAZ;EACH;;EACD,OAAO0E,GAAP;AACH;;AACD,IAAM4D,SAAS,GAAGrN,MAAM,CAAC,qEAAD,CAAxB;;AACA,SAAS+H,WAAT,CAAqBuF,GAArB,EAA0B;EACtB,IAAI,OAAOA,GAAP,KAAe,QAAnB,EACI,MAAM,IAAI9L,KAAJ,CAAU,iBAAV,CAAN;EACJ,IAAI,EAAEzB,GAAG,IAAIuN,GAAP,IAAcA,GAAG,GAAGD,SAAtB,CAAJ,EACI,MAAM,IAAI7L,KAAJ,CAAU,yBAAV,CAAN;EACJ,OAAO8L,GAAG,CAACJ,QAAJ,CAAa,EAAb,EAAiBC,QAAjB,CAA0B,EAA1B,EAA8B,GAA9B,CAAP;AACH;;AACD,SAASI,QAAT,CAAkBD,GAAlB,EAAuB;EACnB,IAAM7M,CAAC,GAAGoH,UAAU,CAACE,WAAW,CAACuF,GAAD,CAAZ,CAApB;EACA,IAAI7M,CAAC,CAACwI,MAAF,KAAa,EAAjB,EACI,MAAM,IAAIzH,KAAJ,CAAU,0BAAV,CAAN;EACJ,OAAOf,CAAP;AACH;;AACD,SAASmL,mBAAT,CAA6B0B,GAA7B,EAAkC;EAC9B,IAAM7D,GAAG,GAAG6D,GAAG,CAACJ,QAAJ,CAAa,EAAb,CAAZ;EACA,OAAOzD,GAAG,CAACR,MAAJ,GAAa,CAAb,cAAqBQ,GAArB,IAA6BA,GAApC;AACH;;AACD,SAAS6C,WAAT,CAAqB7C,GAArB,EAA0B;EACtB,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;IACzB,MAAM,IAAI5H,SAAJ,CAAc,uCAAuC,OAAO4H,GAA5D,CAAN;EACH;;EACD,OAAOzJ,MAAM,aAAMyJ,GAAN,EAAb;AACH;;AACD,SAAS5B,UAAT,CAAoB4B,GAApB,EAAyB;EACrB,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;IACzB,MAAM,IAAI5H,SAAJ,CAAc,sCAAsC,OAAO4H,GAA3D,CAAN;EACH;;EACD,IAAIA,GAAG,CAACR,MAAJ,GAAa,CAAjB,EACI,MAAM,IAAIzH,KAAJ,CAAU,8CAA8CiI,GAAG,CAACR,MAA5D,CAAN;EACJ,IAAMuE,KAAK,GAAG,IAAIrB,UAAJ,CAAe1C,GAAG,CAACR,MAAJ,GAAa,CAA5B,CAAd;;EACA,KAAK,IAAIlE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyI,KAAK,CAACvE,MAA1B,EAAkClE,CAAC,EAAnC,EAAuC;IACnC,IAAM0I,CAAC,GAAG1I,CAAC,GAAG,CAAd;IACA,IAAM2I,OAAO,GAAGjE,GAAG,CAACvB,KAAJ,CAAUuF,CAAV,EAAaA,CAAC,GAAG,CAAjB,CAAhB;IACA,IAAME,IAAI,GAAGzH,MAAM,CAAC4E,QAAP,CAAgB4C,OAAhB,EAAyB,EAAzB,CAAb;IACA,IAAIxH,MAAM,CAAC0H,KAAP,CAAaD,IAAb,KAAsBA,IAAI,GAAG,CAAjC,EACI,MAAM,IAAInM,KAAJ,CAAU,uBAAV,CAAN;IACJgM,KAAK,CAACzI,CAAD,CAAL,GAAW4I,IAAX;EACH;;EACD,OAAOH,KAAP;AACH;;AACD,SAAStE,aAAT,CAAuBH,KAAvB,EAA8B;EAC1B,OAAOuD,WAAW,CAACrB,UAAU,CAAClC,KAAD,CAAX,CAAlB;AACH;;AACD,SAASW,WAAT,CAAqBD,GAArB,EAA0B;EACtB,OAAOA,GAAG,YAAY0C,UAAf,GAA4BA,UAAU,CAACa,IAAX,CAAgBvD,GAAhB,CAA5B,GAAmD5B,UAAU,CAAC4B,GAAD,CAApE;AACH;;AACD,SAAS1F,eAAT,CAAyBuJ,GAAzB,EAA8B;EAC1B,IAAI,OAAOA,GAAP,KAAe,QAAf,IAA2BpH,MAAM,CAAC2H,aAAP,CAAqBP,GAArB,CAA3B,IAAwDA,GAAG,GAAG,CAAlE,EACI,OAAOtN,MAAM,CAACsN,GAAD,CAAb;EACJ,IAAI,OAAOA,GAAP,KAAe,QAAf,IAA2B/B,kBAAkB,CAAC+B,GAAD,CAAjD,EACI,OAAOA,GAAP;EACJ,MAAM,IAAIzL,SAAJ,CAAc,qDAAd,CAAN;AACH;;AACD,SAASV,GAAT,CAAaX,CAAb,EAA6B;EAAA,IAAbC,CAAa,uEAATJ,KAAK,CAACK,CAAG;EACzB,IAAMkM,MAAM,GAAGpM,CAAC,GAAGC,CAAnB;EACA,OAAOmM,MAAM,IAAI7M,GAAV,GAAgB6M,MAAhB,GAAyBnM,CAAC,GAAGmM,MAApC;AACH;;AACD,SAASkB,IAAT,CAAc7M,CAAd,EAAiB8M,KAAjB,EAAwB;EACpB,IAAQrN,CAAR,GAAcL,KAAd,CAAQK,CAAR;EACA,IAAIwK,GAAG,GAAGjK,CAAV;;EACA,OAAO8M,KAAK,KAAKhO,GAAjB,EAAsB;IAClBmL,GAAG,IAAIA,GAAP;IACAA,GAAG,IAAIxK,CAAP;EACH;;EACD,OAAOwK,GAAP;AACH;;AACD,SAAS7B,OAAT,CAAiBpI,CAAjB,EAAoB;EAChB,IAAQP,CAAR,GAAcL,KAAd,CAAQK,CAAR;;EACA,IAAMsN,GAAG,GAAGhO,MAAM,CAAC,CAAD,CAAlB;;EACA,IAAMiO,IAAI,GAAGjO,MAAM,CAAC,EAAD,CAAnB;;EACA,IAAMkO,IAAI,GAAGlO,MAAM,CAAC,EAAD,CAAnB;;EACA,IAAMmO,IAAI,GAAGnO,MAAM,CAAC,EAAD,CAAnB;;EACA,IAAMoO,IAAI,GAAGpO,MAAM,CAAC,EAAD,CAAnB;;EACA,IAAMqO,IAAI,GAAGrO,MAAM,CAAC,EAAD,CAAnB;;EACA,IAAMsO,EAAE,GAAIrN,CAAC,GAAGA,CAAJ,GAAQA,CAAT,GAAcP,CAAzB;EACA,IAAM6N,EAAE,GAAID,EAAE,GAAGA,EAAL,GAAUrN,CAAX,GAAgBP,CAA3B;EACA,IAAM8N,EAAE,GAAIV,IAAI,CAACS,EAAD,EAAKpO,GAAL,CAAJ,GAAgBoO,EAAjB,GAAuB7N,CAAlC;EACA,IAAM+N,EAAE,GAAIX,IAAI,CAACU,EAAD,EAAKrO,GAAL,CAAJ,GAAgBoO,EAAjB,GAAuB7N,CAAlC;EACA,IAAMgO,GAAG,GAAIZ,IAAI,CAACW,EAAD,EAAKvO,GAAL,CAAJ,GAAgBoO,EAAjB,GAAuB5N,CAAnC;EACA,IAAMiO,GAAG,GAAIb,IAAI,CAACY,GAAD,EAAMT,IAAN,CAAJ,GAAkBS,GAAnB,GAA0BhO,CAAtC;EACA,IAAMkO,GAAG,GAAId,IAAI,CAACa,GAAD,EAAMT,IAAN,CAAJ,GAAkBS,GAAnB,GAA0BjO,CAAtC;EACA,IAAMmO,GAAG,GAAIf,IAAI,CAACc,GAAD,EAAMR,IAAN,CAAJ,GAAkBQ,GAAnB,GAA0BlO,CAAtC;EACA,IAAMoO,IAAI,GAAIhB,IAAI,CAACe,GAAD,EAAMR,IAAN,CAAJ,GAAkBQ,GAAnB,GAA0BnO,CAAvC;EACA,IAAMqO,IAAI,GAAIjB,IAAI,CAACgB,IAAD,EAAOV,IAAP,CAAJ,GAAmBQ,GAApB,GAA2BlO,CAAxC;EACA,IAAMsO,IAAI,GAAIlB,IAAI,CAACiB,IAAD,EAAO5O,GAAP,CAAJ,GAAkBoO,EAAnB,GAAyB7N,CAAtC;EACA,IAAMuO,EAAE,GAAInB,IAAI,CAACkB,IAAD,EAAOb,IAAP,CAAJ,GAAmBQ,GAApB,GAA2BjO,CAAtC;EACA,IAAMwO,EAAE,GAAIpB,IAAI,CAACmB,EAAD,EAAKjB,GAAL,CAAJ,GAAgBM,EAAjB,GAAuB5N,CAAlC;EACA,OAAOoN,IAAI,CAACoB,EAAD,EAAKhP,GAAL,CAAX;AACH;;AACD,SAAS2G,MAAT,CAAgBsI,MAAhB,EAA0C;EAAA,IAAlBC,MAAkB,uEAAT/O,KAAK,CAACK,CAAG;;EACtC,IAAIyO,MAAM,KAAKpP,GAAX,IAAkBqP,MAAM,IAAIrP,GAAhC,EAAqC;IACjC,MAAM,IAAIyB,KAAJ,qDAAuD2N,MAAvD,kBAAqEC,MAArE,EAAN;EACH;;EACD,IAAI5O,CAAC,GAAGW,GAAG,CAACgO,MAAD,EAASC,MAAT,CAAX;EACA,IAAI3O,CAAC,GAAG2O,MAAR;EACA,IAAInO,CAAC,GAAGlB,GAAR;EAAA,IAAa2B,CAAC,GAAGzB,GAAjB;EAAA,IAAsBoP,CAAC,GAAGpP,GAA1B;EAAA,IAA+BgN,CAAC,GAAGlN,GAAnC;;EACA,OAAOS,CAAC,KAAKT,GAAb,EAAkB;IACd,IAAMuP,CAAC,GAAG7O,CAAC,GAAGD,CAAd;IACA,IAAM6C,CAAC,GAAG5C,CAAC,GAAGD,CAAd;IACA,IAAM+O,CAAC,GAAGtO,CAAC,GAAGoO,CAAC,GAAGC,CAAlB;IACA,IAAM3O,CAAC,GAAGe,CAAC,GAAGuL,CAAC,GAAGqC,CAAlB;IACA7O,CAAC,GAAGD,CAAJ,EAAOA,CAAC,GAAG6C,CAAX,EAAcpC,CAAC,GAAGoO,CAAlB,EAAqB3N,CAAC,GAAGuL,CAAzB,EAA4BoC,CAAC,GAAGE,CAAhC,EAAmCtC,CAAC,GAAGtM,CAAvC;EACH;;EACD,IAAM6O,GAAG,GAAG/O,CAAZ;EACA,IAAI+O,GAAG,KAAKvP,GAAZ,EACI,MAAM,IAAIuB,KAAJ,CAAU,wBAAV,CAAN;EACJ,OAAOL,GAAG,CAACF,CAAD,EAAImO,MAAJ,CAAV;AACH;;AACD,SAAS/H,WAAT,CAAqBoI,IAArB,EAAwC;EAAA,IAAbzL,CAAa,uEAAT3D,KAAK,CAACK,CAAG;EACpC,IAAMgP,OAAO,GAAG,IAAI3C,KAAJ,CAAU0C,IAAI,CAACxG,MAAf,CAAhB;EACA,IAAM0G,cAAc,GAAGF,IAAI,CAAC9C,MAAL,CAAY,UAACiD,GAAD,EAAMtC,GAAN,EAAWvI,CAAX,EAAiB;IAChD,IAAIuI,GAAG,KAAKvN,GAAZ,EACI,OAAO6P,GAAP;IACJF,OAAO,CAAC3K,CAAD,CAAP,GAAa6K,GAAb;IACA,OAAOzO,GAAG,CAACyO,GAAG,GAAGtC,GAAP,EAAYtJ,CAAZ,CAAV;EACH,CALsB,EAKpB/D,GALoB,CAAvB;EAMA,IAAM4P,QAAQ,GAAGhJ,MAAM,CAAC8I,cAAD,EAAiB3L,CAAjB,CAAvB;EACAyL,IAAI,CAACK,WAAL,CAAiB,UAACF,GAAD,EAAMtC,GAAN,EAAWvI,CAAX,EAAiB;IAC9B,IAAIuI,GAAG,KAAKvN,GAAZ,EACI,OAAO6P,GAAP;IACJF,OAAO,CAAC3K,CAAD,CAAP,GAAa5D,GAAG,CAACyO,GAAG,GAAGF,OAAO,CAAC3K,CAAD,CAAd,EAAmBf,CAAnB,CAAhB;IACA,OAAO7C,GAAG,CAACyO,GAAG,GAAGtC,GAAP,EAAYtJ,CAAZ,CAAV;EACH,CALD,EAKG6L,QALH;EAMA,OAAOH,OAAP;AACH;;AACD,IAAMK,UAAU,GAAG,SAAbA,UAAa,CAACvP,CAAD,EAAIC,CAAJ;EAAA,OAAU,CAACD,CAAC,GAAGC,CAAC,GAAGP,GAAT,IAAgBO,CAA1B;AAAA,CAAnB;;AACA,IAAMuP,IAAI,GAAG;EACTC,EAAE,EAAEjQ,MAAM,CAAC,oCAAD,CADD;EAETkQ,EAAE,EAAE,CAACjQ,GAAD,GAAOD,MAAM,CAAC,oCAAD,CAFR;EAGTmQ,EAAE,EAAEnQ,MAAM,CAAC,qCAAD,CAHD;EAITsO,EAAE,EAAEtO,MAAM,CAAC,oCAAD,CAJD;EAKToQ,SAAS,EAAEpQ,MAAM,CAAC,qCAAD;AALR,CAAb;;AAOA,SAASkE,eAAT,CAAyBmM,CAAzB,EAA4B;EACxB,IAAQ1P,CAAR,GAAcN,KAAd,CAAQM,CAAR;EACA,IAAQsP,EAAR,GAAsCD,IAAtC,CAAQC,EAAR;EAAA,IAAYC,EAAZ,GAAsCF,IAAtC,CAAYE,EAAZ;EAAA,IAAgBC,EAAhB,GAAsCH,IAAtC,CAAgBG,EAAhB;EAAA,IAAoB7B,EAApB,GAAsC0B,IAAtC,CAAoB1B,EAApB;EAAA,IAAwB8B,SAAxB,GAAsCJ,IAAtC,CAAwBI,SAAxB;EACA,IAAME,EAAE,GAAGP,UAAU,CAACzB,EAAE,GAAG+B,CAAN,EAAS1P,CAAT,CAArB;EACA,IAAM4P,EAAE,GAAGR,UAAU,CAAC,CAACG,EAAD,GAAMG,CAAP,EAAU1P,CAAV,CAArB;EACA,IAAIyD,EAAE,GAAGjD,GAAG,CAACkP,CAAC,GAAGC,EAAE,GAAGL,EAAT,GAAcM,EAAE,GAAGJ,EAApB,EAAwBxP,CAAxB,CAAZ;EACA,IAAI2D,EAAE,GAAGnD,GAAG,CAAC,CAACmP,EAAD,GAAMJ,EAAN,GAAWK,EAAE,GAAGjC,EAAjB,EAAqB3N,CAArB,CAAZ;EACA,IAAMwD,KAAK,GAAGC,EAAE,GAAGgM,SAAnB;EACA,IAAM/L,KAAK,GAAGC,EAAE,GAAG8L,SAAnB;EACA,IAAIjM,KAAJ,EACIC,EAAE,GAAGzD,CAAC,GAAGyD,EAAT;EACJ,IAAIC,KAAJ,EACIC,EAAE,GAAG3D,CAAC,GAAG2D,EAAT;;EACJ,IAAIF,EAAE,GAAGgM,SAAL,IAAkB9L,EAAE,GAAG8L,SAA3B,EAAsC;IAClC,MAAM,IAAI5O,KAAJ,CAAU,6CAA6C6O,CAAvD,CAAN;EACH;;EACD,OAAO;IAAElM,KAAK,EAALA,KAAF;IAASC,EAAE,EAAFA,EAAT;IAAaC,KAAK,EAALA,KAAb;IAAoBC,EAAE,EAAFA;EAApB,CAAP;AACH;;AACD,SAAS8F,YAAT,CAAsBoG,IAAtB,EAA4B;EACxB,IAAQ7P,CAAR,GAAcN,KAAd,CAAQM,CAAR;EACA,IAAM8P,UAAU,GAAGD,IAAI,CAACvH,MAAxB;EACA,IAAMyH,KAAK,GAAGD,UAAU,GAAG,CAAb,GAAiB,GAA/B;EACA,IAAI7P,CAAC,GAAGsI,aAAa,CAACsH,IAAD,CAArB;EACA,IAAIE,KAAK,GAAG,CAAZ,EACI9P,CAAC,GAAGA,CAAC,IAAIZ,MAAM,CAAC0Q,KAAD,CAAf;EACJ,IAAI9P,CAAC,IAAID,CAAT,EACIC,CAAC,IAAID,CAAL;EACJ,OAAOC,CAAP;AACH;;AACD,IAAI+P,WAAJ;;AACA,IAAIC,eAAJ;;IACMC,Q;EACF,oBAAc;IAAA;;IACV,KAAK5D,CAAL,GAAS,IAAId,UAAJ,CAAe,EAAf,EAAmB2E,IAAnB,CAAwB,CAAxB,CAAT;IACA,KAAKT,CAAL,GAAS,IAAIlE,UAAJ,CAAe,EAAf,EAAmB2E,IAAnB,CAAwB,CAAxB,CAAT;IACA,KAAKC,OAAL,GAAe,CAAf;EACH;;;;WACD,gBAAgB;MAAA,mCAARC,MAAQ;QAARA,MAAQ;MAAA;;MACZ,OAAOC,KAAK,CAACC,UAAN,OAAAD,KAAK,GAAY,KAAKZ,CAAjB,SAAuBW,MAAvB,EAAZ;IACH;;;WACD,oBAAoB;MAAA,mCAARA,MAAQ;QAARA,MAAQ;MAAA;;MAChB,OAAOJ,eAAe,MAAf,UAAgB,KAAKP,CAArB,SAA2BW,MAA3B,EAAP;IACH;;;WACD,qBAAY;MACR,IAAI,OAAOJ,eAAP,KAA2B,UAA/B,EACI,MAAM,IAAItP,QAAJ,CAAa,gCAAb,CAAN;IACP;;;WACD,gBAAO;MACH,IAAI,KAAKyP,OAAL,IAAgB,IAApB,EACI,MAAM,IAAIvP,KAAJ,CAAU,mDAAV,CAAN;MACJ,KAAKuP,OAAL,IAAgB,CAAhB;IACH;;;;+EACD;QAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAaI,IAAb,2DAAoB,IAAIhF,UAAJ,EAApB;gBAAA;gBAAA,OACmB,KAAKiF,IAAL,CAAU,KAAKnE,CAAf,EAAkBd,UAAU,CAACa,IAAX,CAAgB,CAAC,IAAD,CAAhB,CAAlB,EAA2CmE,IAA3C,CADnB;;cAAA;gBACI,KAAKd,CADT;gBAAA;gBAAA,OAEmB,KAAKe,IAAL,CAAU,KAAKnE,CAAf,CAFnB;;cAAA;gBAEI,KAAKA,CAFT;;gBAAA,MAGQkE,IAAI,CAAClI,MAAL,KAAgB,CAHxB;kBAAA;kBAAA;gBAAA;;gBAAA;;cAAA;gBAAA;gBAAA,OAKmB,KAAKmI,IAAL,CAAU,KAAKnE,CAAf,EAAkBd,UAAU,CAACa,IAAX,CAAgB,CAAC,IAAD,CAAhB,CAAlB,EAA2CmE,IAA3C,CALnB;;cAAA;gBAKI,KAAKd,CALT;gBAAA;gBAAA,OAMmB,KAAKe,IAAL,CAAU,KAAKnE,CAAf,CANnB;;cAAA;gBAMI,KAAKA,CANT;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;WAQA,sBAAoC;MAAA,IAAzBkE,IAAyB,uEAAlB,IAAIhF,UAAJ,EAAkB;MAChC,KAAKkF,SAAL;MACA,KAAKhB,CAAL,GAAS,KAAKiB,QAAL,CAAc,KAAKrE,CAAnB,EAAsBd,UAAU,CAACa,IAAX,CAAgB,CAAC,IAAD,CAAhB,CAAtB,EAA+CmE,IAA/C,CAAT;MACA,KAAKlE,CAAL,GAAS,KAAKqE,QAAL,CAAc,KAAKrE,CAAnB,CAAT;MACA,IAAIkE,IAAI,CAAClI,MAAL,KAAgB,CAApB,EACI;MACJ,KAAKoH,CAAL,GAAS,KAAKiB,QAAL,CAAc,KAAKrE,CAAnB,EAAsBd,UAAU,CAACa,IAAX,CAAgB,CAAC,IAAD,CAAhB,CAAtB,EAA+CmE,IAA/C,CAAT;MACA,KAAKlE,CAAL,GAAS,KAAKqE,QAAL,CAAc,KAAKrE,CAAnB,CAAT;IACH;;;;iFACD;QAAA;UAAA;YAAA;cAAA;gBACI,KAAKsE,IAAL;gBADJ;gBAAA,OAEmB,KAAKH,IAAL,CAAU,KAAKnE,CAAf,CAFnB;;cAAA;gBAEI,KAAKA,CAFT;gBAAA,kCAGW,KAAKA,CAHhB;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;WAKA,wBAAe;MACX,KAAKoE,SAAL;MACA,KAAKE,IAAL;MACA,KAAKtE,CAAL,GAAS,KAAKqE,QAAL,CAAc,KAAKrE,CAAnB,CAAT;MACA,OAAO,KAAKA,CAAZ;IACH;;;;;;AAEL,SAAS1B,kBAAT,CAA4B+B,GAA5B,EAAiC;EAC7B,OAAOvN,GAAG,GAAGuN,GAAN,IAAaA,GAAG,GAAGjN,KAAK,CAACM,CAAhC;AACH;;AACD,SAAS0H,mBAAT,CAA6BiF,GAA7B,EAAkC;EAC9B,OAAOvN,GAAG,GAAGuN,GAAN,IAAaA,GAAG,GAAGjN,KAAK,CAACK,CAAhC;AACH;;AACD,SAAS8Q,QAAT,CAAkBC,MAAlB,EAA0BlC,CAA1B,EAA6BtL,CAA7B,EAAgC;EAC5B,IAAMoM,CAAC,GAAGnH,aAAa,CAACuI,MAAD,CAAvB;EACA,IAAI,CAAClG,kBAAkB,CAAC8E,CAAD,CAAvB,EACI;EACJ,IAAQ1P,CAAR,GAAcN,KAAd,CAAQM,CAAR;EACA,IAAM2O,CAAC,GAAGnK,KAAK,CAACD,IAAN,CAAWsD,QAAX,CAAoB6H,CAApB,CAAV;EACA,IAAMhN,CAAC,GAAGlC,GAAG,CAACmO,CAAC,CAACrO,CAAH,EAAMN,CAAN,CAAb;EACA,IAAI0C,CAAC,KAAKtD,GAAV,EACI;EACJ,IAAMuK,CAAC,GAAGnJ,GAAG,CAAC0F,MAAM,CAACwJ,CAAD,EAAI1P,CAAJ,CAAN,GAAeQ,GAAG,CAACoO,CAAC,GAAGtL,CAAC,GAAGZ,CAAT,EAAY1C,CAAZ,CAAnB,EAAmCA,CAAnC,CAAb;EACA,IAAI2J,CAAC,KAAKvK,GAAV,EACI;EACJ,IAAM2R,GAAG,GAAG,IAAIpG,SAAJ,CAAcjI,CAAd,EAAiBiH,CAAjB,CAAZ;EACA,IAAMH,QAAQ,GAAG,CAACmF,CAAC,CAACrO,CAAF,KAAQyQ,GAAG,CAACrO,CAAZ,GAAgB,CAAhB,GAAoB,CAArB,IAA0B6C,MAAM,CAACoJ,CAAC,CAAC5N,CAAF,GAAMzB,GAAP,CAAjD;EACA,OAAO;IAAEyR,GAAG,EAAHA,GAAF;IAAOvH,QAAQ,EAARA;EAAP,CAAP;AACH;;AACD,SAASH,mBAAT,CAA6B2H,GAA7B,EAAkC;EAC9B,IAAIrE,GAAJ;;EACA,IAAI,OAAOqE,GAAP,KAAe,QAAnB,EAA6B;IACzBrE,GAAG,GAAGqE,GAAN;EACH,CAFD,MAGK,IAAI,OAAOA,GAAP,KAAe,QAAf,IAA2BzL,MAAM,CAAC2H,aAAP,CAAqB8D,GAArB,CAA3B,IAAwDA,GAAG,GAAG,CAAlE,EAAqE;IACtErE,GAAG,GAAGtN,MAAM,CAAC2R,GAAD,CAAZ;EACH,CAFI,MAGA,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;IAC9B,IAAIA,GAAG,CAAC1I,MAAJ,KAAe,EAAnB,EACI,MAAM,IAAIzH,KAAJ,CAAU,kCAAV,CAAN;IACJ8L,GAAG,GAAGhB,WAAW,CAACqF,GAAD,CAAjB;EACH,CAJI,MAKA,IAAIA,GAAG,YAAYxF,UAAnB,EAA+B;IAChC,IAAIwF,GAAG,CAAC1I,MAAJ,KAAe,EAAnB,EACI,MAAM,IAAIzH,KAAJ,CAAU,kCAAV,CAAN;IACJ8L,GAAG,GAAGpE,aAAa,CAACyI,GAAD,CAAnB;EACH,CAJI,MAKA;IACD,MAAM,IAAI9P,SAAJ,CAAc,4BAAd,CAAN;EACH;;EACD,IAAI,CAAC0J,kBAAkB,CAAC+B,GAAD,CAAvB,EACI,MAAM,IAAI9L,KAAJ,CAAU,mCAAV,CAAN;EACJ,OAAO8L,GAAP;AACH;;AACD,SAASsE,kBAAT,CAA4BC,SAA5B,EAAuC;EACnC,IAAIA,SAAS,YAAY1M,KAAzB,EAAgC;IAC5B0M,SAAS,CAACrI,cAAV;IACA,OAAOqI,SAAP;EACH,CAHD,MAIK;IACD,OAAO1M,KAAK,CAACqF,OAAN,CAAcqH,SAAd,CAAP;EACH;AACJ;;AACD,SAASxH,kBAAT,CAA4BH,SAA5B,EAAuC;EACnC,IAAIA,SAAS,YAAYoB,SAAzB,EAAoC;IAChCpB,SAAS,CAACV,cAAV;IACA,OAAOU,SAAP;EACH;;EACD,IAAI;IACA,OAAOoB,SAAS,CAACiB,OAAV,CAAkBrC,SAAlB,CAAP;EACH,CAFD,CAGA,OAAO4H,KAAP,EAAc;IACV,OAAOxG,SAAS,CAACyG,WAAV,CAAsB7H,SAAtB,CAAP;EACH;AACJ;;AACD,OAAO,SAAS8H,YAAT,CAAsBjI,UAAtB,EAAwD;EAAA,IAAtBnC,YAAsB,uEAAP,KAAO;EAC3D,OAAOzC,KAAK,CAAC8M,cAAN,CAAqBlI,UAArB,EAAiC5B,UAAjC,CAA4CP,YAA5C,CAAP;AACH;AACD,OAAO,SAASsK,gBAAT,CAA0BjI,OAA1B,EAAmCC,SAAnC,EAA8CC,QAA9C,EAA8E;EAAA,IAAtBvC,YAAsB,uEAAP,KAAO;EACjF,OAAOzC,KAAK,CAACgN,aAAN,CAAoBlI,OAApB,EAA6BC,SAA7B,EAAwCC,QAAxC,EAAkDhC,UAAlD,CAA6DP,YAA7D,CAAP;AACH;;AACD,SAASwK,SAAT,CAAmBC,IAAnB,EAAyB;EACrB,IAAMnG,GAAG,GAAGmG,IAAI,YAAYlG,UAA5B;EACA,IAAME,GAAG,GAAG,OAAOgG,IAAP,KAAgB,QAA5B;EACA,IAAM1I,GAAG,GAAG,CAACuC,GAAG,IAAIG,GAAR,KAAgBgG,IAAI,CAACpJ,MAAjC;EACA,IAAIiD,GAAJ,EACI,OAAOvC,GAAG,KAAK,EAAR,IAAcA,GAAG,KAAK,EAA7B;EACJ,IAAI0C,GAAJ,EACI,OAAO1C,GAAG,KAAK,EAAR,IAAcA,GAAG,KAAK,GAA7B;EACJ,IAAI0I,IAAI,YAAYlN,KAApB,EACI,OAAO,IAAP;EACJ,OAAO,KAAP;AACH;;AACD,OAAO,SAASmN,eAAT,CAAyBC,QAAzB,EAAmCC,OAAnC,EAAkE;EAAA,IAAtB5K,YAAsB,uEAAP,KAAO;EACrE,IAAIwK,SAAS,CAACG,QAAD,CAAb,EACI,MAAM,IAAI1Q,SAAJ,CAAc,gDAAd,CAAN;EACJ,IAAI,CAACuQ,SAAS,CAACI,OAAD,CAAd,EACI,MAAM,IAAI3Q,SAAJ,CAAc,gDAAd,CAAN;EACJ,IAAMpB,CAAC,GAAGmR,kBAAkB,CAACY,OAAD,CAA5B;EACA/R,CAAC,CAAC+I,cAAF;EACA,OAAO/I,CAAC,CAAC+H,QAAF,CAAWwB,mBAAmB,CAACuI,QAAD,CAA9B,EAA0CpK,UAA1C,CAAqDP,YAArD,CAAP;AACH;;AACD,SAAS6K,QAAT,CAAkB1J,KAAlB,EAAyB;EACrB,IAAMb,KAAK,GAAGa,KAAK,CAACE,MAAN,GAAe,EAAf,GAAoBF,KAAK,CAACb,KAAN,CAAY,CAAZ,EAAe,EAAf,CAApB,GAAyCa,KAAvD;EACA,OAAOG,aAAa,CAAChB,KAAD,CAApB;AACH;;AACD,SAASwK,WAAT,CAAqB3J,KAArB,EAA4B;EACxB,IAAM4J,EAAE,GAAGF,QAAQ,CAAC1J,KAAD,CAAnB;EACA,IAAM6J,EAAE,GAAGzR,GAAG,CAACwR,EAAD,EAAKtS,KAAK,CAACM,CAAX,CAAd;EACA,OAAOkS,UAAU,CAACD,EAAE,GAAG7S,GAAL,GAAW4S,EAAX,GAAgBC,EAAjB,CAAjB;AACH;;AACD,SAASC,UAAT,CAAoBvF,GAApB,EAAyB;EACrB,OAAOC,QAAQ,CAACD,GAAD,CAAf;AACH;;AACD,SAASwF,WAAT,CAAqB7I,OAArB,EAA8BF,UAA9B,EAA0CgJ,YAA1C,EAAwD;EACpD,IAAI9I,OAAO,IAAI,IAAf,EACI,MAAM,IAAIzI,KAAJ,oDAAqDyI,OAArD,QAAN;EACJ,IAAM+I,EAAE,GAAGtJ,WAAW,CAACO,OAAD,CAAtB;EACA,IAAMhG,CAAC,GAAG+F,mBAAmB,CAACD,UAAD,CAA7B;EACA,IAAMkJ,QAAQ,GAAG,CAACJ,UAAU,CAAC5O,CAAD,CAAX,EAAgByO,WAAW,CAACM,EAAD,CAA3B,CAAjB;;EACA,IAAID,YAAY,IAAI,IAApB,EAA0B;IACtB,IAAIA,YAAY,KAAK,IAArB,EACIA,YAAY,GAAG9B,KAAK,CAACiC,WAAN,CAAkB,EAAlB,CAAf;IACJ,IAAMC,CAAC,GAAGzJ,WAAW,CAACqJ,YAAD,CAArB;IACA,IAAII,CAAC,CAAClK,MAAF,KAAa,EAAjB,EACI,MAAM,IAAIzH,KAAJ,CAAU,uCAAV,CAAN;IACJyR,QAAQ,CAACnO,IAAT,CAAcqO,CAAd;EACH;;EACD,IAAMhC,IAAI,GAAG3E,WAAW,MAAX,SAAeyG,QAAf,CAAb;EACA,IAAM1D,CAAC,GAAGkD,QAAQ,CAACO,EAAD,CAAlB;EACA,OAAO;IAAE7B,IAAI,EAAJA,IAAF;IAAQ5B,CAAC,EAADA,CAAR;IAAWtL,CAAC,EAADA;EAAX,CAAP;AACH;;AACD,SAASmP,WAAT,CAAqBC,MAArB,EAA6BC,IAA7B,EAAmC;EAC/B,IAAM5B,GAAN,GAAwB2B,MAAxB,CAAM3B,GAAN;EAAA,IAAWvH,QAAX,GAAwBkJ,MAAxB,CAAWlJ,QAAX;;EACA,qBAAsC7J,MAAM,CAACiT,MAAP,CAAc;IAAEC,SAAS,EAAE,IAAb;IAAmBC,GAAG,EAAE;EAAxB,CAAd,EAA8CH,IAA9C,CAAtC;EAAA,IAAQE,SAAR,kBAAQA,SAAR;EAAA,IAAmBC,GAAnB,kBAAmBA,GAAnB;EAAA,IAAwBC,SAAxB,kBAAwBA,SAAxB;;EACA,IAAIF,SAAS,IAAI9B,GAAG,CAACjG,QAAJ,EAAjB,EAAiC;IAC7BiG,GAAG,GAAGA,GAAG,CAACiC,UAAJ,EAAN;IACAxJ,QAAQ,IAAI,CAAZ;EACH;;EACD,IAAMyJ,MAAM,GAAGH,GAAG,GAAG/B,GAAG,CAAC1F,aAAJ,EAAH,GAAyB0F,GAAG,CAACmC,iBAAJ,EAA3C;EACA,OAAOH,SAAS,GAAG,CAACE,MAAD,EAASzJ,QAAT,CAAH,GAAwByJ,MAAxC;AACH;;SACcE,I;;;;;qEAAf,kBAAoB7J,OAApB,EAA6B8J,OAA7B;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAsCT,IAAtC,8DAA6C,EAA7C;YAAA,gBAC2BR,WAAW,CAAC7I,OAAD,EAAU8J,OAAV,EAAmBT,IAAI,CAACP,YAAxB,CADtC,EACY5B,IADZ,iBACYA,IADZ,EACkB5B,CADlB,iBACkBA,CADlB,EACqBtL,CADrB,iBACqBA,CADrB;YAGU+P,IAHV,GAGiB,IAAInD,QAAJ,EAHjB;YAAA;YAAA,OAIUmD,IAAI,CAACC,MAAL,CAAY9C,IAAZ,CAJV;;UAAA;YAAA,eAKmBK,QALnB;YAAA;YAAA,OAKkCwC,IAAI,CAACE,QAAL,EALlC;;UAAA;YAAA;YAAA,eAKmD3E,CALnD;YAAA,eAKsDtL,CALtD;;YAAA,IAKayN,GALb;cAAA;cAAA;YAAA;;YAAA;YAAA,OAMcsC,IAAI,CAACC,MAAL,EANd;;UAAA;YAAA;YAAA;;UAAA;YAAA,kCAOWb,WAAW,CAAC1B,GAAD,EAAM4B,IAAN,CAPtB;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C;;;;AASA,SAASa,QAAT,CAAkBlK,OAAlB,EAA2B8J,OAA3B,EAA+C;EAAA,IAAXT,IAAW,uEAAJ,EAAI;;EAC3C,mBAAuBR,WAAW,CAAC7I,OAAD,EAAU8J,OAAV,EAAmBT,IAAI,CAACP,YAAxB,CAAlC;EAAA,IAAQ5B,IAAR,gBAAQA,IAAR;EAAA,IAAc5B,CAAd,gBAAcA,CAAd;EAAA,IAAiBtL,CAAjB,gBAAiBA,CAAjB;;EACA,IAAIyN,GAAJ;EACA,IAAMsC,IAAI,GAAG,IAAInD,QAAJ,EAAb;EACAmD,IAAI,CAACI,UAAL,CAAgBjD,IAAhB;;EACA,OAAO,EAAEO,GAAG,GAAGF,QAAQ,CAACwC,IAAI,CAACK,YAAL,EAAD,EAAsB9E,CAAtB,EAAyBtL,CAAzB,CAAhB,CAAP;IACI+P,IAAI,CAACI,UAAL;EADJ;;EAEA,OAAOhB,WAAW,CAAC1B,GAAD,EAAM4B,IAAN,CAAlB;AACH;;AACD,SAASQ,IAAT,EAAeK,QAAf;AACA,IAAMG,KAAK,GAAG;EAAEC,MAAM,EAAE;AAAV,CAAd;AACA,OAAO,SAASC,MAAT,CAAgBtK,SAAhB,EAA2BD,OAA3B,EAAoC4H,SAApC,EAA6D;EAAA,IAAdyB,IAAc,uEAAPgB,KAAO;EAChE,IAAI5C,GAAJ;;EACA,IAAI;IACAA,GAAG,GAAGrH,kBAAkB,CAACH,SAAD,CAAxB;IACAD,OAAO,GAAGP,WAAW,CAACO,OAAD,CAArB;EACH,CAHD,CAIA,OAAO6H,KAAP,EAAc;IACV,OAAO,KAAP;EACH;;EACD,WAAiBJ,GAAjB;EAAA,IAAQrO,CAAR,QAAQA,CAAR;EAAA,IAAWiH,CAAX,QAAWA,CAAX;EACA,IAAIgJ,IAAI,CAACiB,MAAL,IAAe7C,GAAG,CAACjG,QAAJ,EAAnB,EACI,OAAO,KAAP;EACJ,IAAM7K,CAAC,GAAGwJ,YAAY,CAACH,OAAD,CAAtB;EACA,IAAIvJ,CAAJ;;EACA,IAAI;IACAA,CAAC,GAAGkR,kBAAkB,CAACC,SAAD,CAAtB;EACH,CAFD,CAGA,OAAOC,KAAP,EAAc;IACV,OAAO,KAAP;EACH;;EACD,IAAQnR,CAAR,GAAcN,KAAd,CAAQM,CAAR;EACA,IAAM8T,IAAI,GAAG5N,MAAM,CAACyD,CAAD,EAAI3J,CAAJ,CAAnB;EACA,IAAM+J,EAAE,GAAGvJ,GAAG,CAACP,CAAC,GAAG6T,IAAL,EAAW9T,CAAX,CAAd;EACA,IAAMgK,EAAE,GAAGxJ,GAAG,CAACkC,CAAC,GAAGoR,IAAL,EAAW9T,CAAX,CAAd;EACA,IAAM4J,CAAC,GAAGpF,KAAK,CAACD,IAAN,CAAW0F,oBAAX,CAAgClK,CAAhC,EAAmCgK,EAAnC,EAAuCC,EAAvC,CAAV;EACA,IAAI,CAACJ,CAAL,EACI,OAAO,KAAP;EACJ,IAAM0C,CAAC,GAAG9L,GAAG,CAACoJ,CAAC,CAACtJ,CAAH,EAAMN,CAAN,CAAb;EACA,OAAOsM,CAAC,KAAK5J,CAAb;AACH;;AACD,SAASqR,wBAAT,CAAkCC,EAAlC,EAAsC;EAClC,OAAOxT,GAAG,CAAC+H,aAAa,CAACyL,EAAD,CAAd,EAAoBtU,KAAK,CAACM,CAA1B,CAAV;AACH;;IACKiU,gB;EACF,0BAAYvR,CAAZ,EAAeiH,CAAf,EAAkB;IAAA;;IACd,KAAKjH,CAAL,GAASA,CAAT;IACA,KAAKiH,CAAL,GAASA,CAAT;IACA,KAAKd,cAAL;EACH;;;;WASD,0BAAiB;MACb,IAAQnG,CAAR,GAAiB,IAAjB,CAAQA,CAAR;MAAA,IAAWiH,CAAX,GAAiB,IAAjB,CAAWA,CAAX;MACA,IAAI,CAACjC,mBAAmB,CAAChF,CAAD,CAApB,IAA2B,CAACkI,kBAAkB,CAACjB,CAAD,CAAlD,EACI,MAAM,IAAI9I,KAAJ,CAAU,mBAAV,CAAN;IACP;;;WACD,iBAAQ;MACJ,OAAOuG,WAAW,CAAC,KAAK1E,CAAN,CAAX,GAAsB0E,WAAW,CAAC,KAAKuC,CAAN,CAAxC;IACH;;;WACD,sBAAa;MACT,OAAOzC,UAAU,CAAC,KAAKC,KAAL,EAAD,CAAjB;IACH;;;WAlBD,iBAAe2B,GAAf,EAAoB;MAChB,IAAMV,KAAK,GAAGW,WAAW,CAACD,GAAD,CAAzB;MACA,IAAIV,KAAK,CAACE,MAAN,KAAiB,EAArB,EACI,MAAM,IAAIpH,SAAJ,4DAAkEkH,KAAK,CAACE,MAAxE,EAAN;MACJ,IAAM5F,CAAC,GAAG6F,aAAa,CAACH,KAAK,CAACI,QAAN,CAAe,CAAf,EAAkB,EAAlB,CAAD,CAAvB;MACA,IAAMmB,CAAC,GAAGpB,aAAa,CAACH,KAAK,CAACI,QAAN,CAAe,EAAf,EAAmB,EAAnB,CAAD,CAAvB;MACA,OAAO,IAAIyL,gBAAJ,CAAqBvR,CAArB,EAAwBiH,CAAxB,CAAP;IACH;;;;;;AAaL,SAASuK,mBAAT,CAA6B9K,UAA7B,EAAyC;EACrC,OAAO5E,KAAK,CAAC8M,cAAN,CAAqBlI,UAArB,EAAiC+K,MAAjC,EAAP;AACH;;IACKC,wB;EACF,kCAAYxT,OAAZ,EAAqBwI,UAArB,EAAgE;IAAA,IAA/BiL,OAA+B,uEAArB/D,KAAK,CAACiC,WAAN,EAAqB;;IAAA;;IAC5D,IAAI3R,OAAO,IAAI,IAAf,EACI,MAAM,IAAIM,SAAJ,+CAAoDN,OAApD,QAAN;IACJ,KAAKgO,CAAL,GAAS7F,WAAW,CAACnI,OAAD,CAApB;;IACA,sBAAsB,KAAK0T,SAAL,CAAejL,mBAAmB,CAACD,UAAD,CAAlC,CAAtB;IAAA,IAAQ9I,CAAR,mBAAQA,CAAR;IAAA,IAAW4C,MAAX,mBAAWA,MAAX;;IACA,KAAKqR,EAAL,GAAUjU,CAAV;IACA,KAAKgD,CAAL,GAASJ,MAAT;IACA,KAAKsR,IAAL,GAAYzL,WAAW,CAACsL,OAAD,CAAvB;IACA,IAAI,KAAKG,IAAL,CAAUlM,MAAV,KAAqB,EAAzB,EACI,MAAM,IAAIpH,SAAJ,CAAc,2CAAd,CAAN;EACP;;;;WACD,mBAAUuT,IAAV,EAAgB;MACZ,IAAM7O,KAAK,GAAGpB,KAAK,CAAC8M,cAAN,CAAqBmD,IAArB,CAAd;MACA,IAAMvR,MAAM,GAAG0C,KAAK,CAAC0B,QAAN,KAAmBmN,IAAnB,GAA0B/U,KAAK,CAACM,CAAN,GAAUyU,IAAnD;MACA,OAAO;QAAE7O,KAAK,EAALA,KAAF;QAAS1C,MAAM,EAANA,MAAT;QAAiB5C,CAAC,EAAEsF,KAAK,CAACuO,MAAN;MAApB,CAAP;IACH;;;WACD,mBAAU7Q,CAAV,EAAaoR,GAAb,EAAkB;MACd,OAAO9H,QAAQ,CAACtJ,CAAC,GAAGiF,aAAa,CAACmM,GAAD,CAAlB,CAAf;IACH;;;WACD,uBAAcC,GAAd,EAAmB;MACf,IAAMC,EAAE,GAAGpU,GAAG,CAAC+H,aAAa,CAACoM,GAAD,CAAd,EAAqBjV,KAAK,CAACM,CAA3B,CAAd;MACA,IAAI4U,EAAE,KAAKxV,GAAX,EACI,MAAM,IAAIyB,KAAJ,CAAU,+CAAV,CAAN;;MACJ,uBAAuC,KAAKyT,SAAL,CAAeM,EAAf,CAAvC;MAAA,IAAehL,CAAf,oBAAQhE,KAAR;MAAA,IAAqBiP,EAArB,oBAAkBvU,CAAlB;MAAA,IAAiCoP,CAAjC,oBAAyBxM,MAAzB;;MACA,OAAO;QAAE0G,CAAC,EAADA,CAAF;QAAKiL,EAAE,EAAFA,EAAL;QAASnF,CAAC,EAADA;MAAT,CAAP;IACH;;;WACD,qBAAY9F,CAAZ,EAAe8F,CAAf,EAAkB8C,CAAlB,EAAqBlP,CAArB,EAAwB;MACpB,OAAO,IAAI2Q,gBAAJ,CAAqBrK,CAAC,CAACtJ,CAAvB,EAA0BE,GAAG,CAACkP,CAAC,GAAG8C,CAAC,GAAGlP,CAAT,EAAY5D,KAAK,CAACM,CAAlB,CAA7B,EAAmDwH,UAAnD,EAAP;IACH;;;WACD,iBAAQ;MACJ,MAAM,IAAI3G,KAAJ,CAAU,kCAAV,CAAN;IACH;;;;6EACD;QAAA;;QAAA;UAAA;YAAA;cAAA;gBACY+N,CADZ,GAC+B,IAD/B,CACYA,CADZ,EACetL,CADf,GAC+B,IAD/B,CACeA,CADf,EACkBiR,EADlB,GAC+B,IAD/B,CACkBA,EADlB,EACsBC,IADtB,GAC+B,IAD/B,CACsBA,IADtB;gBAEUM,GAFV,GAEgBxE,KAAK,CAACyE,UAFtB;gBAAA,eAGc,IAHd;gBAAA,eAG6BzR,CAH7B;gBAAA;gBAAA,OAGsCwR,GAAG,CAACE,IAAI,CAACC,GAAN,EAAWT,IAAX,CAHzC;;cAAA;gBAAA;gBAGUU,CAHV,gBAGmBC,SAHnB;gBAAA,eAIyB,IAJzB;gBAAA;gBAAA,OAIkDL,GAAG,CAACE,IAAI,CAACI,KAAN,EAAaF,CAAb,EAAgBX,EAAhB,EAAoB3F,CAApB,CAJrD;;cAAA;gBAAA;gBAAA,mCAI8ByG,aAJ9B;gBAIYzL,CAJZ,uBAIYA,CAJZ;gBAIeiL,EAJf,uBAIeA,EAJf;gBAImBnF,CAJnB,uBAImBA,CAJnB;gBAAA,eAKcqE,wBALd;gBAAA;gBAAA,OAK6Ce,GAAG,CAACE,IAAI,CAACM,SAAN,EAAiBT,EAAjB,EAAqBN,EAArB,EAAyB3F,CAAzB,CALhD;;cAAA;gBAAA;gBAKU4D,CALV;gBAMUzB,GANV,GAMgB,KAAK0B,WAAL,CAAiB7I,CAAjB,EAAoB8F,CAApB,EAAuB8C,CAAvB,EAA0BlP,CAA1B,CANhB;gBAAA;gBAAA,OAOgBiS,aAAa,CAACxE,GAAD,EAAMnC,CAAN,EAAS2F,EAAT,CAP7B;;cAAA;gBAAA;kBAAA;kBAAA;gBAAA;;gBAQQ,KAAKpD,KAAL;;cARR;gBAAA,kCASWJ,GATX;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;WAWA,oBAAW;MACP,IAAQnC,CAAR,GAA2B,IAA3B,CAAQA,CAAR;MAAA,IAAWtL,CAAX,GAA2B,IAA3B,CAAWA,CAAX;MAAA,IAAciR,EAAd,GAA2B,IAA3B,CAAcA,EAAd;MAAA,IAAkBC,IAAlB,GAA2B,IAA3B,CAAkBA,IAAlB;MACA,IAAMM,GAAG,GAAGxE,KAAK,CAACkF,cAAlB;MACA,IAAMN,CAAC,GAAG,KAAKC,SAAL,CAAe7R,CAAf,EAAkBwR,GAAG,CAACE,IAAI,CAACC,GAAN,EAAWT,IAAX,CAArB,CAAV;;MACA,2BAAqB,KAAKa,aAAL,CAAmBP,GAAG,CAACE,IAAI,CAACI,KAAN,EAAaF,CAAb,EAAgBX,EAAhB,EAAoB3F,CAApB,CAAtB,CAArB;MAAA,IAAQhF,CAAR,wBAAQA,CAAR;MAAA,IAAWiL,EAAX,wBAAWA,EAAX;MAAA,IAAenF,CAAf,wBAAeA,CAAf;;MACA,IAAM8C,CAAC,GAAGuB,wBAAwB,CAACe,GAAG,CAACE,IAAI,CAACM,SAAN,EAAiBT,EAAjB,EAAqBN,EAArB,EAAyB3F,CAAzB,CAAJ,CAAlC;MACA,IAAMmC,GAAG,GAAG,KAAK0B,WAAL,CAAiB7I,CAAjB,EAAoB8F,CAApB,EAAuB8C,CAAvB,EAA0BlP,CAA1B,CAAZ;MACA,IAAI,CAACmS,iBAAiB,CAAC1E,GAAD,EAAMnC,CAAN,EAAS2F,EAAT,CAAtB,EACI,KAAKpD,KAAL;MACJ,OAAOJ,GAAP;IACH;;;;;;SAEU2E,W;;;;;4EAAf,kBAA2BjO,GAA3B,EAAgC2L,OAAhC,EAAyCiB,OAAzC;IAAA;MAAA;QAAA;UAAA;YAAA,kCACW,IAAID,wBAAJ,CAA6B3M,GAA7B,EAAkC2L,OAAlC,EAA2CiB,OAA3C,EAAoDsB,IAApD,EADX;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C;;;;AAGA,SAASC,eAAT,CAAyBnO,GAAzB,EAA8B2L,OAA9B,EAAuCiB,OAAvC,EAAgD;EAC5C,OAAO,IAAID,wBAAJ,CAA6B3M,GAA7B,EAAkC2L,OAAlC,EAA2CiB,OAA3C,EAAoDwB,QAApD,EAAP;AACH;;AACD,SAASC,iBAAT,CAA2BvM,SAA3B,EAAsC3I,OAAtC,EAA+CsQ,SAA/C,EAA0D;EACtD,IAAM6E,GAAG,GAAGxM,SAAS,YAAY0K,gBAAjC;EACA,IAAMlD,GAAG,GAAGgF,GAAG,GAAGxM,SAAH,GAAe0K,gBAAgB,CAACpK,OAAjB,CAAyBN,SAAzB,CAA9B;EACA,IAAIwM,GAAJ,EACIhF,GAAG,CAAClI,cAAJ;EACJ,uCACOkI,GADP;IAEInC,CAAC,EAAE7F,WAAW,CAACnI,OAAD,CAFlB;IAGIb,CAAC,EAAEkR,kBAAkB,CAACC,SAAD;EAHzB;AAKH;;AACD,SAAS8E,qBAAT,CAA+BtT,CAA/B,EAAkC3C,CAAlC,EAAqC4J,CAArC,EAAwC6I,CAAxC,EAA2C;EACvC,IAAM5I,CAAC,GAAGpF,KAAK,CAACD,IAAN,CAAW0F,oBAAX,CAAgClK,CAAhC,EAAmCsJ,mBAAmB,CAACM,CAAD,CAAtD,EAA2DnJ,GAAG,CAAC,CAACgS,CAAF,EAAK9S,KAAK,CAACM,CAAX,CAA9D,CAAV;EACA,IAAI,CAAC4J,CAAD,IAAM,CAACA,CAAC,CAACtC,QAAF,EAAP,IAAuBsC,CAAC,CAACtJ,CAAF,KAAQoC,CAAnC,EACI,OAAO,KAAP;EACJ,OAAO,IAAP;AACH;;SACc6S,a;;;;;8EAAf,kBAA6BhM,SAA7B,EAAwC3I,OAAxC,EAAiDsQ,SAAjD;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,sBAE+B4E,iBAAiB,CAACvM,SAAD,EAAY3I,OAAZ,EAAqBsQ,SAArB,CAFhD,EAEgBxO,CAFhB,uBAEgBA,CAFhB,EAEmBiH,CAFnB,uBAEmBA,CAFnB,EAEsBiF,CAFtB,uBAEsBA,CAFtB,EAEyB7O,CAFzB,uBAEyBA,CAFzB;YAAA,eAGkBgU,wBAHlB;YAAA;YAAA,OAGiDzD,KAAK,CAACyE,UAAN,CAAiBC,IAAI,CAACM,SAAtB,EAAiC1I,QAAQ,CAAClK,CAAD,CAAzC,EAA8C3C,CAAC,CAACoU,MAAF,EAA9C,EAA0DvF,CAA1D,CAHjD;;UAAA;YAAA;YAGc4D,CAHd;YAAA,kCAIewD,qBAAqB,CAACtT,CAAD,EAAI3C,CAAJ,EAAO4J,CAAP,EAAU6I,CAAV,CAJpC;;UAAA;YAAA;YAAA;YAAA,kCAOe,KAPf;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C;;;;AAUA,SAASiD,iBAAT,CAA2BlM,SAA3B,EAAsC3I,OAAtC,EAA+CsQ,SAA/C,EAA0D;EACtD,IAAI;IACA,yBAAuB4E,iBAAiB,CAACvM,SAAD,EAAY3I,OAAZ,EAAqBsQ,SAArB,CAAxC;IAAA,IAAQxO,CAAR,sBAAQA,CAAR;IAAA,IAAWiH,CAAX,sBAAWA,CAAX;IAAA,IAAciF,CAAd,sBAAcA,CAAd;IAAA,IAAiB7O,CAAjB,sBAAiBA,CAAjB;;IACA,IAAMyS,CAAC,GAAGuB,wBAAwB,CAACzD,KAAK,CAACkF,cAAN,CAAqBR,IAAI,CAACM,SAA1B,EAAqC1I,QAAQ,CAAClK,CAAD,CAA7C,EAAkD3C,CAAC,CAACoU,MAAF,EAAlD,EAA8DvF,CAA9D,CAAD,CAAlC;IACA,OAAOoH,qBAAqB,CAACtT,CAAD,EAAI3C,CAAJ,EAAO4J,CAAP,EAAU6I,CAAV,CAA5B;EACH,CAJD,CAKA,OAAOrB,KAAP,EAAc;IACV,IAAIA,KAAK,YAAYxQ,QAArB,EACI,MAAMwQ,KAAN;IACJ,OAAO,KAAP;EACH;AACJ;;AACD,OAAO,IAAM8E,OAAO,GAAG;EACnBtL,SAAS,EAAEsJ,gBADQ;EAEnB5C,YAAY,EAAE6C,mBAFK;EAGnBf,IAAI,EAAEuC,WAHa;EAInB7B,MAAM,EAAE0B,aAJW;EAKnB/B,QAAQ,EAAEoC,eALS;EAMnBM,UAAU,EAAET;AANO,CAAhB;;AAQPjR,KAAK,CAACD,IAAN,CAAW4R,cAAX,CAA0B,CAA1B;;AACA,IAAMC,MAAM,GAAG;EACXC,IAAI,EAAElX,UADK;EAEXmX,GAAG,EAAE,OAAOC,IAAP,KAAgB,QAAhB,IAA4B,YAAYA,IAAxC,GAA+CA,IAAI,CAACH,MAApD,GAA6DjO;AAFvD,CAAf;AAIA,IAAM6M,IAAI,GAAG;EACTM,SAAS,EAAE,mBADF;EAETL,GAAG,EAAE,aAFI;EAGTG,KAAK,EAAE;AAHE,CAAb;AAKA,IAAMoB,oBAAoB,GAAG,EAA7B;AACA,OAAO,IAAMlG,KAAK,GAAG;EACjBhG,UAAU,EAAVA,UADiB;EAEjBpD,UAAU,EAAVA,UAFiB;EAGjB2E,WAAW,EAAXA,WAHiB;EAIjBrL,GAAG,EAAHA,GAJiB;EAKjB0F,MAAM,EAANA,MALiB;EAMjBuQ,iBANiB,6BAMCrN,UAND,EAMa;IAC1B,IAAI;MACAC,mBAAmB,CAACD,UAAD,CAAnB;MACA,OAAO,IAAP;IACH,CAHD,CAIA,OAAO+H,KAAP,EAAc;MACV,OAAO,KAAP;IACH;EACJ,CAdgB;EAejBuF,gBAAgB,EAAE9J,QAfD;EAgBjB+J,oBAAoB,EAAEtN,mBAhBL;EAiBjBuN,gBAAgB,EAAE,0BAAC/G,IAAD,EAAU;IACxBA,IAAI,GAAG9G,WAAW,CAAC8G,IAAD,CAAlB;IACA,IAAIA,IAAI,CAACvH,MAAL,GAAc,EAAd,IAAoBuH,IAAI,CAACvH,MAAL,GAAc,IAAtC,EACI,MAAM,IAAIzH,KAAJ,CAAU,uDAAV,CAAN;;IACJ,IAAM8L,GAAG,GAAGnM,GAAG,CAAC+H,aAAa,CAACsH,IAAD,CAAd,EAAsBnQ,KAAK,CAACM,CAAN,GAAUV,GAAhC,CAAH,GAA0CA,GAAtD;;IACA,OAAOsN,QAAQ,CAACD,GAAD,CAAf;EACH,CAvBgB;EAwBjB4F,WAAW,EAAE,uBAAsB;IAAA,IAArBsE,WAAqB,uEAAP,EAAO;;IAC/B,IAAIT,MAAM,CAACE,GAAX,EAAgB;MACZ,OAAOF,MAAM,CAACE,GAAP,CAAWQ,eAAX,CAA2B,IAAItL,UAAJ,CAAeqL,WAAf,CAA3B,CAAP;IACH,CAFD,MAGK,IAAIT,MAAM,CAACC,IAAX,EAAiB;MAClB,IAAQ9D,WAAR,GAAwB6D,MAAM,CAACC,IAA/B,CAAQ9D,WAAR;MACA,OAAO/G,UAAU,CAACa,IAAX,CAAgBkG,WAAW,CAACsE,WAAD,CAA3B,CAAP;IACH,CAHI,MAIA;MACD,MAAM,IAAIhW,KAAJ,CAAU,mDAAV,CAAN;IACH;EACJ,CAnCgB;EAoCjBkW,gBAAgB,EAAE,4BAAM;IACpB,OAAOzG,KAAK,CAACsG,gBAAN,CAAuBtG,KAAK,CAACiC,WAAN,CAAkB,EAAlB,CAAvB,CAAP;EACH,CAtCgB;EAuCjByE,MAAM;IAAA,sEAAE;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA,4BAAUC,QAAV;gBAAUA,QAAV;cAAA;;cAAA,KACAb,MAAM,CAACE,GADP;gBAAA;gBAAA;cAAA;;cAAA;cAAA,OAEqBF,MAAM,CAACE,GAAP,CAAWY,MAAX,CAAkBC,MAAlB,CAAyB,SAAzB,EAAoCtL,WAAW,MAAX,SAAeoL,QAAf,CAApC,CAFrB;;YAAA;cAEMG,MAFN;cAAA,kCAGO,IAAI5L,UAAJ,CAAe4L,MAAf,CAHP;;YAAA;cAAA,KAKKhB,MAAM,CAACC,IALZ;gBAAA;gBAAA;cAAA;;cAMQgB,UANR,GAMuBjB,MAAM,CAACC,IAN9B,CAMQgB,UANR;cAOMxH,IAPN,GAOawH,UAAU,CAAC,QAAD,CAPvB;cAQAJ,QAAQ,CAACK,OAAT,CAAiB,UAAC1I,CAAD;gBAAA,OAAOiB,IAAI,CAAC0H,MAAL,CAAY3I,CAAZ,CAAP;cAAA,CAAjB;cARA,kCASOpD,UAAU,CAACa,IAAX,CAAgBwD,IAAI,CAACsH,MAAL,EAAhB,CATP;;YAAA;cAAA,MAYM,IAAItW,KAAJ,CAAU,8CAAV,CAZN;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAF;;IAAA;MAAA;IAAA;;IAAA;EAAA,GAvCW;EAsDjB0P,UAAU;IAAA,0EAAE,kBAAOS,GAAP;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA,4BAAeiG,QAAf;gBAAeA,QAAf;cAAA;;cAAA,KACJb,MAAM,CAACE,GADH;gBAAA;gBAAA;cAAA;;cAAA;cAAA,OAEeF,MAAM,CAACE,GAAP,CAAWY,MAAX,CAAkBM,SAAlB,CAA4B,KAA5B,EAAmCxG,GAAnC,EAAwC;gBAAEvF,IAAI,EAAE,MAAR;gBAAgBoE,IAAI,EAAE;kBAAEpE,IAAI,EAAE;gBAAR;cAAtB,CAAxC,EAAqF,KAArF,EAA4F,CAAC,MAAD,CAA5F,CAFf;;YAAA;cAEEgM,IAFF;cAGE7W,OAHF,GAGYiL,WAAW,MAAX,SAAeoL,QAAf,CAHZ;cAAA;cAAA,OAIiBb,MAAM,CAACE,GAAP,CAAWY,MAAX,CAAkB/D,IAAlB,CAAuB,MAAvB,EAA+BsE,IAA/B,EAAqC7W,OAArC,CAJjB;;YAAA;cAIEwW,MAJF;cAAA,kCAKG,IAAI5L,UAAJ,CAAe4L,MAAf,CALH;;YAAA;cAAA,KAOChB,MAAM,CAACC,IAPR;gBAAA;gBAAA;cAAA;;cAQIqB,UARJ,GAQmBtB,MAAM,CAACC,IAR1B,CAQIqB,UARJ;cASE7H,IATF,GASS6H,UAAU,CAAC,QAAD,EAAW1G,GAAX,CATnB;cAUJiG,QAAQ,CAACK,OAAT,CAAiB,UAAC1I,CAAD;gBAAA,OAAOiB,IAAI,CAAC0H,MAAL,CAAY3I,CAAZ,CAAP;cAAA,CAAjB;cAVI,kCAWGpD,UAAU,CAACa,IAAX,CAAgBwD,IAAI,CAACsH,MAAL,EAAhB,CAXH;;YAAA;cAAA,MAcE,IAAItW,KAAJ,CAAU,mDAAV,CAdF;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAF;;IAAA;MAAA;IAAA;;IAAA;EAAA,GAtDO;EAuEjB8W,UAAU,EAAExP,SAvEK;EAwEjByP,cAAc,EAAEzP,SAxEC;EAyEjB4M,UAAU;IAAA,6EAAE,kBAAOD,GAAP;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;;MAAA;QAAA;UAAA;YAAA;cACJ+C,IADI,GACGrB,oBAAoB,CAAC1B,GAAD,CADvB;;cAAA,MAEJ+C,IAAI,KAAK1P,SAFL;gBAAA;gBAAA;cAAA;;cAAA;cAAA,OAGemI,KAAK,CAAC0G,MAAN,CAAaxL,UAAU,CAACa,IAAX,CAAgByI,GAAhB,EAAqB,UAACgD,CAAD;gBAAA,OAAOA,CAAC,CAACC,UAAF,CAAa,CAAb,CAAP;cAAA,CAArB,CAAb,CAHf;;YAAA;cAGEC,IAHF;cAIJH,IAAI,GAAGhM,WAAW,CAACmM,IAAD,EAAOA,IAAP,CAAlB;cACAxB,oBAAoB,CAAC1B,GAAD,CAApB,GAA4B+C,IAA5B;;YALI;cAAA,4BAAeZ,QAAf;gBAAeA,QAAf;cAAA;;cAAA,kCAOD3G,KAAK,CAAC0G,MAAN,OAAA1G,KAAK,GAAQuH,IAAR,SAAiBZ,QAAjB,EAPJ;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAF;;IAAA;MAAA;IAAA;;IAAA;EAAA,GAzEO;EAkFjBzB,cAAc,EAAE,wBAACV,GAAD,EAAsB;IAClC,IAAI,OAAO9E,WAAP,KAAuB,UAA3B,EACI,MAAM,IAAIrP,QAAJ,CAAa,6CAAb,CAAN;IACJ,IAAIkX,IAAI,GAAGrB,oBAAoB,CAAC1B,GAAD,CAA/B;;IACA,IAAI+C,IAAI,KAAK1P,SAAb,EAAwB;MACpB,IAAM6P,IAAI,GAAGhI,WAAW,CAACxE,UAAU,CAACa,IAAX,CAAgByI,GAAhB,EAAqB,UAACgD,CAAD;QAAA,OAAOA,CAAC,CAACC,UAAF,CAAa,CAAb,CAAP;MAAA,CAArB,CAAD,CAAxB;;MACAF,IAAI,GAAGhM,WAAW,CAACmM,IAAD,EAAOA,IAAP,CAAlB;MACAxB,oBAAoB,CAAC1B,GAAD,CAApB,GAA4B+C,IAA5B;IACH;;IARiC,mCAAbZ,QAAa;MAAbA,QAAa;IAAA;;IASlC,OAAOjH,WAAW,MAAX,UAAY6H,IAAZ,SAAqBZ,QAArB,EAAP;EACH,CA5FgB;EA6FjBgB,UA7FiB,wBA6F8B;IAAA,IAApChT,UAAoC,uEAAvB,CAAuB;IAAA,IAApBW,KAAoB,uEAAZpB,KAAK,CAACD,IAAM;IAC3C,IAAMkB,MAAM,GAAGG,KAAK,KAAKpB,KAAK,CAACD,IAAhB,GAAuBqB,KAAvB,GAA+B,IAAIpB,KAAJ,CAAUoB,KAAK,CAACtF,CAAhB,EAAmBsF,KAAK,CAAC7E,CAAzB,CAA9C;;IACA0E,MAAM,CAAC0Q,cAAP,CAAsBlR,UAAtB;;IACAQ,MAAM,CAACoC,QAAP,CAAgBrI,GAAhB;IACA,OAAOiG,MAAP;EACH;AAlGgB,CAAd;AAoGP9F,MAAM,CAACuY,gBAAP,CAAwB5H,KAAxB,EAA+B;EAC3BqH,UAAU,EAAE;IACRQ,YAAY,EAAE,KADN;IAERvT,GAFQ,iBAEF;MACF,OAAOoL,WAAP;IACH,CAJO;IAKRjL,GALQ,eAKJqT,GALI,EAKC;MACL,IAAI,CAACpI,WAAL,EACIA,WAAW,GAAGoI,GAAd;IACP;EARO,CADe;EAW3BR,cAAc,EAAE;IACZO,YAAY,EAAE,KADF;IAEZvT,GAFY,iBAEN;MACF,OAAOqL,eAAP;IACH,CAJW;IAKZlL,GALY,eAKRqT,GALQ,EAKH;MACL,IAAI,CAACnI,eAAL,EACIA,eAAe,GAAGmI,GAAlB;IACP;EARW;AAXW,CAA/B"},"metadata":{},"sourceType":"module"}