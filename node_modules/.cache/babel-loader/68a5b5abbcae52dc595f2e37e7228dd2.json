{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/Users/sarahagarrat/git/sceneportal/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\n\nvar _classCallCheck = require(\"/Users/sarahagarrat/git/sceneportal/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/Users/sarahagarrat/git/sceneportal/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _inherits = require(\"/Users/sarahagarrat/git/sceneportal/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/Users/sarahagarrat/git/sceneportal/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SHA2 = void 0;\n\nvar _assert_js_1 = require(\"./_assert.js\");\n\nvar utils_js_1 = require(\"./utils.js\"); // Polyfill for Safari 14\n\n\nfunction setBigUint64(view, byteOffset, value, isLE) {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n\n  var _32n = BigInt(32);\n\n  var _u32_max = BigInt(0xffffffff);\n\n  var wh = Number(value >> _32n & _u32_max);\n  var wl = Number(value & _u32_max);\n  var h = isLE ? 4 : 0;\n  var l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n} // Base SHA2 class (RFC 6234)\n\n\nvar SHA2 = /*#__PURE__*/function (_utils_js_1$Hash) {\n  _inherits(SHA2, _utils_js_1$Hash);\n\n  var _super = _createSuper(SHA2);\n\n  function SHA2(blockLen, outputLen, padOffset, isLE) {\n    var _this;\n\n    _classCallCheck(this, SHA2);\n\n    _this = _super.call(this);\n    _this.blockLen = blockLen;\n    _this.outputLen = outputLen;\n    _this.padOffset = padOffset;\n    _this.isLE = isLE;\n    _this.finished = false;\n    _this.length = 0;\n    _this.pos = 0;\n    _this.destroyed = false;\n    _this.buffer = new Uint8Array(blockLen);\n    _this.view = (0, utils_js_1.createView)(_this.buffer);\n    return _this;\n  }\n\n  _createClass(SHA2, [{\n    key: \"update\",\n    value: function update(data) {\n      _assert_js_1.default.exists(this);\n\n      var view = this.view,\n          buffer = this.buffer,\n          blockLen = this.blockLen;\n      data = (0, utils_js_1.toBytes)(data);\n      var len = data.length;\n\n      for (var pos = 0; pos < len;) {\n        var take = Math.min(blockLen - this.pos, len - pos); // Fast path: we have at least one block in input, cast it to view and process\n\n        if (take === blockLen) {\n          var dataView = (0, utils_js_1.createView)(data);\n\n          for (; blockLen <= len - pos; pos += blockLen) {\n            this.process(dataView, pos);\n          }\n\n          continue;\n        }\n\n        buffer.set(data.subarray(pos, pos + take), this.pos);\n        this.pos += take;\n        pos += take;\n\n        if (this.pos === blockLen) {\n          this.process(view, 0);\n          this.pos = 0;\n        }\n      }\n\n      this.length += data.length;\n      this.roundClean();\n      return this;\n    }\n  }, {\n    key: \"digestInto\",\n    value: function digestInto(out) {\n      _assert_js_1.default.exists(this);\n\n      _assert_js_1.default.output(out, this);\n\n      this.finished = true; // Padding\n      // We can avoid allocation of buffer for padding completely if it\n      // was previously not allocated here. But it won't change performance.\n\n      var buffer = this.buffer,\n          view = this.view,\n          blockLen = this.blockLen,\n          isLE = this.isLE;\n      var pos = this.pos; // append the bit '1' to the message\n\n      buffer[pos++] = 128;\n      this.buffer.subarray(pos).fill(0); // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n\n      if (this.padOffset > blockLen - pos) {\n        this.process(view, 0);\n        pos = 0;\n      } // Pad until full block byte with zeros\n\n\n      for (var i = pos; i < blockLen; i++) {\n        buffer[i] = 0;\n      } // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n      // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n      // So we just write lowest 64 bits of that value.\n\n\n      setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n      this.process(view, 0);\n      var oview = (0, utils_js_1.createView)(out);\n      this.get().forEach(function (v, i) {\n        return oview.setUint32(4 * i, v, isLE);\n      });\n    }\n  }, {\n    key: \"digest\",\n    value: function digest() {\n      var buffer = this.buffer,\n          outputLen = this.outputLen;\n      this.digestInto(buffer);\n      var res = buffer.slice(0, outputLen);\n      this.destroy();\n      return res;\n    }\n  }, {\n    key: \"_cloneInto\",\n    value: function _cloneInto(to) {\n      var _to;\n\n      to || (to = new this.constructor());\n\n      (_to = to).set.apply(_to, _toConsumableArray(this.get()));\n\n      var blockLen = this.blockLen,\n          buffer = this.buffer,\n          length = this.length,\n          finished = this.finished,\n          destroyed = this.destroyed,\n          pos = this.pos;\n      to.length = length;\n      to.pos = pos;\n      to.finished = finished;\n      to.destroyed = destroyed;\n      if (length % blockLen) to.buffer.set(buffer);\n      return to;\n    }\n  }]);\n\n  return SHA2;\n}(utils_js_1.Hash);\n\nexports.SHA2 = SHA2;","map":{"version":3,"names":["Object","defineProperty","exports","value","SHA2","_assert_js_1","require","utils_js_1","setBigUint64","view","byteOffset","isLE","_32n","BigInt","_u32_max","wh","Number","wl","h","l","setUint32","blockLen","outputLen","padOffset","finished","length","pos","destroyed","buffer","Uint8Array","createView","data","default","exists","toBytes","len","take","Math","min","dataView","process","set","subarray","roundClean","out","output","fill","i","oview","get","forEach","v","digestInto","res","slice","destroy","to","constructor","Hash"],"sources":["/Users/sarahagarrat/git/sceneportal/node_modules/@noble/hashes/_sha2.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SHA2 = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nclass SHA2 extends utils_js_1.Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = (0, utils_js_1.createView)(this.buffer);\n    }\n    update(data) {\n        _assert_js_1.default.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = (0, utils_js_1.createView)(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        _assert_js_1.default.exists(this);\n        _assert_js_1.default.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = (0, utils_js_1.createView)(out);\n        this.get().forEach((v, i) => oview.setUint32(4 * i, v, isLE));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\nexports.SHA2 = SHA2;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}