{"ast":null,"code":"var _jsxFileName = \"/Users/sarahagarrat/git/sceneportal/src/App.js\",\n    _s = $RefreshSig$();\n\n//IMPORTS\nimport React, { useEffect, useState } from \"react\";\nimport { Connection, PublicKey, clusterApiUrl } from \"@solana/web3.js\";\nimport { Program, Provider, web3 } from \"@project-serum/anchor\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport \"./App.css\"; //CONSTANTS\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TEST_GIFS = ['https://media.giphy.com/media/35LCBkf6buF9AuzOL7/giphy.gif', 'https://media.giphy.com/media/pxuSx9i61E40xaAFyF/giphy.gif', 'https://media.giphy.com/media/26gspNQegsL4F1Sqk/giphy.gif'];\n\nconst App = () => {\n  _s();\n\n  //useSTATE\n  const [walletAddress, setWalletAddress] = useState(null);\n  const [inputValue, setInputValue] = useState('');\n  const [gifList, setGifList] = useState([]); //TOASTS\n  //ACTIONS\n\n  const checkIfWalletIsConnected = async () => {\n    try {\n      const {\n        solana\n      } = window;\n\n      if (solana) {\n        if (solana.isPhantom) {\n          console.log('Phantom wallet found!');\n          const response = await solana.connect({\n            onlyIfTrusted: true\n          });\n          console.log(\"Connected with Public Key:\", response.publicKey.toString());\n          setWalletAddress(response.publicKey.toString());\n        }\n      } else {\n        alert('To sign in, download a Phantom Wallet ðŸ‘» at https://phantom.app');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const connectWallet = async () => {\n    const {\n      solana\n    } = window;\n\n    if (solana) {\n      const response = await solana.connect();\n      console.log(\"Connected with Public Key:\", response.publicKey.toString());\n      setWalletAddress(response.publicKey.toString());\n    }\n  };\n\n  const disconnectWallet = () => {\n    console.log(\"Wallet Disconnected\");\n    setWalletAddress(null);\n  };\n\n  const sendGif = async () => {\n    if (inputValue.length > 0) {\n      console.log('Gif link:', inputValue);\n    } else {\n      console.log('Empty input. Try again.');\n    }\n  };\n\n  const onInputChange = event => {\n    const {\n      value\n    } = event.target;\n    setInputValue(value);\n  };\n\n  const renderConnectedContainer = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"connected-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"connected-header\",\n      children: \"SCENE PORTAL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"cta-button disconnect-wallet-button\",\n      onClick: disconnectWallet,\n      children: \"SIGN OUT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: event => {\n        event.preventDefault();\n        sendGif();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gif-grid\",\n        children: gifList.map(gif => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gif-item\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"gif-image\",\n            src: gif,\n            alt: gif\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, gif, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"post your favorite film/tv scene\",\n        value: inputValue,\n        onChange: onInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"cta-button submit-gif-button\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n\n  const renderNotConnectedContainer = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"cta-button connect-wallet-button\",\n      onClick: connectWallet,\n      children: \"SIGN IN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"header\",\n      children: \"Scene Portal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"sub-header\",\n      children: \"Your favorite scenes, on the blockchain\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"moon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kiki\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this); //useEFFECTS\n\n\n  useEffect(() => {\n    const onLoad = async () => {\n      await checkIfWalletIsConnected();\n    };\n\n    window.addEventListener('load', onLoad);\n    return () => window.removeEventListener('load', onLoad);\n  }, []);\n  useEffect(() => {\n    if (walletAddress) {\n      console.log(\"Fetching GIF list...\"); // Call Solana program here.\n\n      setGifList(TEST_GIFS);\n    }\n  }, [walletAddress]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: walletAddress ? \"authed-container\" : \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Toaster, {\n        toastOptions: {\n          className: \"\",\n          duration: 3000,\n          style: {\n            border: \"1px solid #713200\",\n            padding: \"16px\",\n            color: \"#713200\"\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: [!walletAddress && renderNotConnectedContainer(), walletAddress && renderConnectedContainer()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"GUp0OLdI+EDuCRRqm+ZLCxBP30A=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Connection","PublicKey","clusterApiUrl","Program","Provider","web3","toast","Toaster","TEST_GIFS","App","walletAddress","setWalletAddress","inputValue","setInputValue","gifList","setGifList","checkIfWalletIsConnected","solana","window","isPhantom","console","log","response","connect","onlyIfTrusted","publicKey","toString","alert","error","connectWallet","disconnectWallet","sendGif","length","onInputChange","event","value","target","renderConnectedContainer","preventDefault","map","gif","renderNotConnectedContainer","onLoad","addEventListener","removeEventListener","className","duration","style","border","padding","color"],"sources":["/Users/sarahagarrat/git/sceneportal/src/App.js"],"sourcesContent":["//IMPORTS\nimport React, { useEffect, useState } from \"react\";\nimport { Connection, PublicKey, clusterApiUrl } from \"@solana/web3.js\";\nimport { Program, Provider, web3 } from \"@project-serum/anchor\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport \"./App.css\";\n\n//CONSTANTS\nconst TEST_GIFS = [\n\t'https://media.giphy.com/media/35LCBkf6buF9AuzOL7/giphy.gif',\n\t'https://media.giphy.com/media/pxuSx9i61E40xaAFyF/giphy.gif',\n\t'https://media.giphy.com/media/26gspNQegsL4F1Sqk/giphy.gif'\n]\n\nconst App = () => {\n  //useSTATE\n  const [walletAddress, setWalletAddress] = useState(null);\n  const [inputValue, setInputValue] = useState('');\n  const [gifList, setGifList] = useState([]);\n\n  //TOASTS\n\n  //ACTIONS\n  const checkIfWalletIsConnected = async () => {\n    try {\n      const { solana } = window;\n\n      if (solana) {\n        if (solana.isPhantom) {\n          console.log('Phantom wallet found!');\n\n          const response = await solana.connect({ onlyIfTrusted: true });\n          console.log(\n          \"Connected with Public Key:\",\n          response.publicKey.toString()\n         );\n         setWalletAddress(response.publicKey.toString());\n        }\n      } else {\n        alert ('To sign in, download a Phantom Wallet ðŸ‘» at https://phantom.app');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const connectWallet = async () => {\n    const { solana } = window;\n\n    if (solana) {\n      const response = await solana.connect();\n      console.log(\"Connected with Public Key:\", response.publicKey.toString());\n      setWalletAddress(response.publicKey.toString());\n    }\n  };\n\n  const disconnectWallet = () => {\n    console.log(\"Wallet Disconnected\");\n    setWalletAddress(null);\n  };\n\n  const sendGif = async () => {\n    if (inputValue.length > 0) {\n      console.log('Gif link:', inputValue);\n    } else {\n      console.log('Empty input. Try again.');\n    }\n  }; \n\n  const onInputChange = (event) => {\n    const { value } = event.target;\n    setInputValue(value);\n  }; \n\n  const renderConnectedContainer = () => (\n    <div className=\"connected-container\">\n      <p className=\"connected-header\">SCENE PORTAL</p>\n      <button className=\"cta-button disconnect-wallet-button\" onClick={disconnectWallet}>\n        SIGN OUT\n      </button>\n      <form\n        className=\"form\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          sendGif();\n        }}\n      >\n        <div className=\"gif-grid\">\n        {gifList.map((gif) => (\n          <div className=\"gif-item\" key={gif}>\n            <img className=\"gif-image\" src={gif} alt={gif} />\n          </div>\n        ))}\n        </div>\n        <input\n          type=\"text\"\n          placeholder=\"post your favorite film/tv scene\"\n          value={inputValue}\n          onChange={onInputChange}\n        />\n        <button type=\"submit\" className=\"cta-button submit-gif-button\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n\n  const renderNotConnectedContainer = () => (\n    <div className=\"container\">\n      <button\n        className=\"cta-button connect-wallet-button\"\n        onClick={connectWallet}\n      >\n        SIGN IN\n      </button>\n      <p className=\"header\">Scene Portal</p>\n      <p className=\"sub-header\">Your favorite scenes, on the blockchain</p>\n      <div className=\"moon\" />\n      <div className=\"kiki\" />\n    </div>\n  );\n\n  //useEFFECTS\n  useEffect(() => {\n    const onLoad = async () => {\n      await checkIfWalletIsConnected();\n    };\n    window.addEventListener('load', onLoad);\n    return () => window.removeEventListener('load', onLoad);\n  }, []);\n\n  useEffect(() => {\n    if (walletAddress) {\n      console.log(\"Fetching GIF list...\");\n\n      // Call Solana program here.\n\n      setGifList(TEST_GIFS);\n    }\n  }, [walletAddress]);\n\n  return (\n    <div className=\"App\">\n      <div className={walletAddress ? \"authed-container\" : \"container\"}>\n        <Toaster\n          toastOptions={{\n            className: \"\",\n            duration: 3000,\n            style: {\n              border: \"1px solid #713200\",\n              padding: \"16px\",\n              color: \"#713200\",\n            },\n          }}\n        />\n        <div className=\"header-container\">\n          {!walletAddress && renderNotConnectedContainer()}\n          {walletAddress && renderConnectedContainer()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}