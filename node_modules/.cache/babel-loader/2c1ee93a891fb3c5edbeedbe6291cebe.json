{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/sarahagarrat/git/sceneportal/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/Users/sarahagarrat/git/sceneportal/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _inherits = require(\"/Users/sarahagarrat/git/sceneportal/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/Users/sarahagarrat/git/sceneportal/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar _slicedToArray = require(\"/Users/sarahagarrat/git/sceneportal/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shake256 = exports.shake128 = exports.keccak_512 = exports.keccak_384 = exports.keccak_256 = exports.keccak_224 = exports.sha3_512 = exports.sha3_384 = exports.sha3_256 = exports.sha3_224 = exports.Keccak = exports.keccakP = void 0;\n\nvar _assert_js_1 = require(\"./_assert.js\");\n\nvar _u64_js_1 = require(\"./_u64.js\");\n\nvar utils_js_1 = require(\"./utils.js\"); // Various per round constants calculations\n\n\nvar SHA3_PI = [],\n    SHA3_ROTL = [],\n    _SHA3_IOTA = [];\n\nvar _0n = BigInt(0);\n\nvar _1n = BigInt(1);\n\nvar _2n = BigInt(2);\n\nvar _7n = BigInt(7);\n\nvar _256n = BigInt(256);\n\nvar _0x71n = BigInt(0x71);\n\nfor (var round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n  // Pi\n  var _ref = [y, (2 * x + 3 * y) % 5];\n  x = _ref[0];\n  y = _ref[1];\n  SHA3_PI.push(2 * (5 * y + x)); // Rotational\n\n  SHA3_ROTL.push((round + 1) * (round + 2) / 2 % 64); // Iota\n\n  var t = _0n;\n\n  for (var j = 0; j < 7; j++) {\n    R = (R << _1n ^ (R >> _7n) * _0x71n) % _256n;\n    if (R & _2n) t ^= _1n << (_1n << BigInt(j)) - _1n;\n  }\n\n  _SHA3_IOTA.push(t);\n}\n\nvar _u64_js_1$default$spl = _u64_js_1.default.split(_SHA3_IOTA, true),\n    _u64_js_1$default$spl2 = _slicedToArray(_u64_js_1$default$spl, 2),\n    SHA3_IOTA_H = _u64_js_1$default$spl2[0],\n    SHA3_IOTA_L = _u64_js_1$default$spl2[1]; // Left rotation (without 0, 32, 64)\n\n\nvar rotlH = function rotlH(h, l, s) {\n  return s > 32 ? _u64_js_1.default.rotlBH(h, l, s) : _u64_js_1.default.rotlSH(h, l, s);\n};\n\nvar rotlL = function rotlL(h, l, s) {\n  return s > 32 ? _u64_js_1.default.rotlBL(h, l, s) : _u64_js_1.default.rotlSL(h, l, s);\n}; // Same as keccakf1600, but allows to skip some rounds\n\n\nfunction keccakP(s) {\n  var rounds = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 24;\n  var B = new Uint32Array(5 * 2); // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n\n  for (var round = 24 - rounds; round < 24; round++) {\n    // Theta θ\n    for (var x = 0; x < 10; x++) {\n      B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n    }\n\n    for (var _x = 0; _x < 10; _x += 2) {\n      var idx1 = (_x + 8) % 10;\n      var idx0 = (_x + 2) % 10;\n      var B0 = B[idx0];\n      var B1 = B[idx0 + 1];\n      var Th = rotlH(B0, B1, 1) ^ B[idx1];\n      var Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n\n      for (var y = 0; y < 50; y += 10) {\n        s[_x + y] ^= Th;\n        s[_x + y + 1] ^= Tl;\n      }\n    } // Rho (ρ) and Pi (π)\n\n\n    var curH = s[2];\n    var curL = s[3];\n\n    for (var t = 0; t < 24; t++) {\n      var shift = SHA3_ROTL[t];\n\n      var _Th = rotlH(curH, curL, shift);\n\n      var _Tl = rotlL(curH, curL, shift);\n\n      var PI = SHA3_PI[t];\n      curH = s[PI];\n      curL = s[PI + 1];\n      s[PI] = _Th;\n      s[PI + 1] = _Tl;\n    } // Chi (χ)\n\n\n    for (var _y = 0; _y < 50; _y += 10) {\n      for (var _x2 = 0; _x2 < 10; _x2++) {\n        B[_x2] = s[_y + _x2];\n      }\n\n      for (var _x3 = 0; _x3 < 10; _x3++) {\n        s[_y + _x3] ^= ~B[(_x3 + 2) % 10] & B[(_x3 + 4) % 10];\n      }\n    } // Iota (ι)\n\n\n    s[0] ^= SHA3_IOTA_H[round];\n    s[1] ^= SHA3_IOTA_L[round];\n  }\n\n  B.fill(0);\n}\n\nexports.keccakP = keccakP;\n\nvar Keccak = /*#__PURE__*/function (_utils_js_1$Hash) {\n  _inherits(Keccak, _utils_js_1$Hash);\n\n  var _super = _createSuper(Keccak);\n\n  // NOTE: we accept arguments in bytes instead of bits here.\n  function Keccak(blockLen, suffix, outputLen) {\n    var _this;\n\n    var enableXOF = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    var rounds = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 24;\n\n    _classCallCheck(this, Keccak);\n\n    _this = _super.call(this);\n    _this.blockLen = blockLen;\n    _this.suffix = suffix;\n    _this.outputLen = outputLen;\n    _this.enableXOF = enableXOF;\n    _this.rounds = rounds;\n    _this.pos = 0;\n    _this.posOut = 0;\n    _this.finished = false;\n    _this.destroyed = false; // Can be passed from user as dkLen\n\n    _assert_js_1.default.number(outputLen); // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n\n\n    if (0 >= _this.blockLen || _this.blockLen >= 200) throw new Error('Sha3 supports only keccak-f1600 function');\n    _this.state = new Uint8Array(200);\n    _this.state32 = (0, utils_js_1.u32)(_this.state);\n    return _this;\n  }\n\n  _createClass(Keccak, [{\n    key: \"keccak\",\n    value: function keccak() {\n      keccakP(this.state32, this.rounds);\n      this.posOut = 0;\n      this.pos = 0;\n    }\n  }, {\n    key: \"update\",\n    value: function update(data) {\n      _assert_js_1.default.exists(this);\n\n      var blockLen = this.blockLen,\n          state = this.state;\n      data = (0, utils_js_1.toBytes)(data);\n      var len = data.length;\n\n      for (var pos = 0; pos < len;) {\n        var take = Math.min(blockLen - this.pos, len - pos);\n\n        for (var i = 0; i < take; i++) {\n          state[this.pos++] ^= data[pos++];\n        }\n\n        if (this.pos === blockLen) this.keccak();\n      }\n\n      return this;\n    }\n  }, {\n    key: \"finish\",\n    value: function finish() {\n      if (this.finished) return;\n      this.finished = true;\n      var state = this.state,\n          suffix = this.suffix,\n          pos = this.pos,\n          blockLen = this.blockLen; // Do the padding\n\n      state[pos] ^= suffix;\n      if ((suffix & 0x80) !== 0 && pos === blockLen - 1) this.keccak();\n      state[blockLen - 1] ^= 0x80;\n      this.keccak();\n    }\n  }, {\n    key: \"writeInto\",\n    value: function writeInto(out) {\n      _assert_js_1.default.exists(this, false);\n\n      _assert_js_1.default.bytes(out);\n\n      this.finish();\n      var bufferOut = this.state;\n      var blockLen = this.blockLen;\n\n      for (var pos = 0, len = out.length; pos < len;) {\n        if (this.posOut >= blockLen) this.keccak();\n        var take = Math.min(blockLen - this.posOut, len - pos);\n        out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n        this.posOut += take;\n        pos += take;\n      }\n\n      return out;\n    }\n  }, {\n    key: \"xofInto\",\n    value: function xofInto(out) {\n      // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n      if (!this.enableXOF) throw new Error('XOF is not possible for this instance');\n      return this.writeInto(out);\n    }\n  }, {\n    key: \"xof\",\n    value: function xof(bytes) {\n      _assert_js_1.default.number(bytes);\n\n      return this.xofInto(new Uint8Array(bytes));\n    }\n  }, {\n    key: \"digestInto\",\n    value: function digestInto(out) {\n      _assert_js_1.default.output(out, this);\n\n      if (this.finished) throw new Error('digest() was already called');\n      this.writeInto(out);\n      this.destroy();\n      return out;\n    }\n  }, {\n    key: \"digest\",\n    value: function digest() {\n      return this.digestInto(new Uint8Array(this.outputLen));\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.destroyed = true;\n      this.state.fill(0);\n    }\n  }, {\n    key: \"_cloneInto\",\n    value: function _cloneInto(to) {\n      var blockLen = this.blockLen,\n          suffix = this.suffix,\n          outputLen = this.outputLen,\n          rounds = this.rounds,\n          enableXOF = this.enableXOF;\n      to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n      to.state32.set(this.state32);\n      to.pos = this.pos;\n      to.posOut = this.posOut;\n      to.finished = this.finished;\n      to.rounds = rounds; // Suffix can change in cSHAKE\n\n      to.suffix = suffix;\n      to.outputLen = outputLen;\n      to.enableXOF = enableXOF;\n      to.destroyed = this.destroyed;\n      return to;\n    }\n  }]);\n\n  return Keccak;\n}(utils_js_1.Hash);\n\nexports.Keccak = Keccak;\n\nvar gen = function gen(suffix, blockLen, outputLen) {\n  return (0, utils_js_1.wrapConstructor)(function () {\n    return new Keccak(blockLen, suffix, outputLen);\n  });\n};\n\nexports.sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\n\nexports.sha3_256 = gen(0x06, 136, 256 / 8);\nexports.sha3_384 = gen(0x06, 104, 384 / 8);\nexports.sha3_512 = gen(0x06, 72, 512 / 8);\nexports.keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\n\nexports.keccak_256 = gen(0x01, 136, 256 / 8);\nexports.keccak_384 = gen(0x01, 104, 384 / 8);\nexports.keccak_512 = gen(0x01, 72, 512 / 8);\n\nvar genShake = function genShake(suffix, blockLen, outputLen) {\n  return (0, utils_js_1.wrapConstructorWithOpts)(function () {\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true);\n  });\n};\n\nexports.shake128 = genShake(0x1f, 168, 128 / 8);\nexports.shake256 = genShake(0x1f, 136, 256 / 8);","map":{"version":3,"names":["Object","defineProperty","exports","value","shake256","shake128","keccak_512","keccak_384","keccak_256","keccak_224","sha3_512","sha3_384","sha3_256","sha3_224","Keccak","keccakP","_assert_js_1","require","_u64_js_1","utils_js_1","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_0n","BigInt","_1n","_2n","_7n","_256n","_0x71n","round","R","x","y","push","t","j","default","split","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","h","l","s","rotlBH","rotlSH","rotlL","rotlBL","rotlSL","rounds","B","Uint32Array","idx1","idx0","B0","B1","Th","Tl","curH","curL","shift","PI","fill","blockLen","suffix","outputLen","enableXOF","pos","posOut","finished","destroyed","number","Error","state","Uint8Array","state32","u32","data","exists","toBytes","len","length","take","Math","min","i","keccak","out","bytes","finish","bufferOut","set","subarray","writeInto","xofInto","output","destroy","digestInto","to","Hash","gen","wrapConstructor","genShake","wrapConstructorWithOpts","opts","dkLen","undefined"],"sources":["/Users/sarahagarrat/git/sceneportal/node_modules/@noble/hashes/sha3.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shake256 = exports.shake128 = exports.keccak_512 = exports.keccak_384 = exports.keccak_256 = exports.keccak_224 = exports.sha3_512 = exports.sha3_384 = exports.sha3_256 = exports.sha3_224 = exports.Keccak = exports.keccakP = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst _u64_js_1 = require(\"./_u64.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = _u64_js_1.default.split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => s > 32 ? _u64_js_1.default.rotlBH(h, l, s) : _u64_js_1.default.rotlSH(h, l, s);\nconst rotlL = (h, l, s) => s > 32 ? _u64_js_1.default.rotlBL(h, l, s) : _u64_js_1.default.rotlSL(h, l, s);\n// Same as keccakf1600, but allows to skip some rounds\nfunction keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexports.keccakP = keccakP;\nclass Keccak extends utils_js_1.Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        _assert_js_1.default.number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = (0, utils_js_1.u32)(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        _assert_js_1.default.exists(this);\n        const { blockLen, state } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        _assert_js_1.default.exists(this, false);\n        _assert_js_1.default.bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        _assert_js_1.default.number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        _assert_js_1.default.output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nexports.Keccak = Keccak;\nconst gen = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapConstructor)(() => new Keccak(blockLen, suffix, outputLen));\nexports.sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexports.sha3_256 = gen(0x06, 136, 256 / 8);\nexports.sha3_384 = gen(0x06, 104, 384 / 8);\nexports.sha3_512 = gen(0x06, 72, 512 / 8);\nexports.keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexports.keccak_256 = gen(0x01, 136, 256 / 8);\nexports.keccak_384 = gen(0x01, 104, 384 / 8);\nexports.keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapConstructorWithOpts)((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexports.shake128 = genShake(0x1f, 168, 128 / 8);\nexports.shake256 = genShake(0x1f, 136, 256 / 8);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}