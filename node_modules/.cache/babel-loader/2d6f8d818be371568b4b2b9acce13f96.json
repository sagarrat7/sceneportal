{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/sarahagarrat/git/sceneportal/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/Users/sarahagarrat/git/sceneportal/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _inherits = require(\"/Users/sarahagarrat/git/sceneportal/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/Users/sarahagarrat/git/sceneportal/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hmac = void 0;\n\nvar _assert_js_1 = require(\"./_assert.js\");\n\nvar utils_js_1 = require(\"./utils.js\"); // HMAC (RFC 2104)\n\n\nvar HMAC = /*#__PURE__*/function (_utils_js_1$Hash) {\n  _inherits(HMAC, _utils_js_1$Hash);\n\n  var _super = _createSuper(HMAC);\n\n  function HMAC(hash, _key) {\n    var _this;\n\n    _classCallCheck(this, HMAC);\n\n    _this = _super.call(this);\n    _this.finished = false;\n    _this.destroyed = false;\n\n    _assert_js_1.default.hash(hash);\n\n    var key = (0, utils_js_1.toBytes)(_key);\n    _this.iHash = hash.create();\n    if (!(_this.iHash instanceof utils_js_1.Hash)) throw new TypeError('Expected instance of class which extends utils.Hash');\n    var blockLen = _this.blockLen = _this.iHash.blockLen;\n    _this.outputLen = _this.iHash.outputLen;\n    var pad = new Uint8Array(blockLen); // blockLen can be bigger than outputLen\n\n    pad.set(key.length > _this.iHash.blockLen ? hash.create().update(key).digest() : key);\n\n    for (var i = 0; i < pad.length; i++) {\n      pad[i] ^= 0x36;\n    }\n\n    _this.iHash.update(pad); // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n\n\n    _this.oHash = hash.create(); // Undo internal XOR && apply outer XOR\n\n    for (var _i = 0; _i < pad.length; _i++) {\n      pad[_i] ^= 0x36 ^ 0x5c;\n    }\n\n    _this.oHash.update(pad);\n\n    pad.fill(0);\n    return _this;\n  }\n\n  _createClass(HMAC, [{\n    key: \"update\",\n    value: function update(buf) {\n      _assert_js_1.default.exists(this);\n\n      this.iHash.update(buf);\n      return this;\n    }\n  }, {\n    key: \"digestInto\",\n    value: function digestInto(out) {\n      _assert_js_1.default.exists(this);\n\n      _assert_js_1.default.bytes(out, this.outputLen);\n\n      this.finished = true;\n      this.iHash.digestInto(out);\n      this.oHash.update(out);\n      this.oHash.digestInto(out);\n      this.destroy();\n    }\n  }, {\n    key: \"digest\",\n    value: function digest() {\n      var out = new Uint8Array(this.oHash.outputLen);\n      this.digestInto(out);\n      return out;\n    }\n  }, {\n    key: \"_cloneInto\",\n    value: function _cloneInto(to) {\n      // Create new instance without calling constructor since key already in state and we don't know it.\n      to || (to = Object.create(Object.getPrototypeOf(this), {}));\n      var oHash = this.oHash,\n          iHash = this.iHash,\n          finished = this.finished,\n          destroyed = this.destroyed,\n          blockLen = this.blockLen,\n          outputLen = this.outputLen;\n      to = to;\n      to.finished = finished;\n      to.destroyed = destroyed;\n      to.blockLen = blockLen;\n      to.outputLen = outputLen;\n      to.oHash = oHash._cloneInto(to.oHash);\n      to.iHash = iHash._cloneInto(to.iHash);\n      return to;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.destroyed = true;\n      this.oHash.destroy();\n      this.iHash.destroy();\n    }\n  }]);\n\n  return HMAC;\n}(utils_js_1.Hash);\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\n\n\nvar hmac = function hmac(hash, key, message) {\n  return new HMAC(hash, key).update(message).digest();\n};\n\nexports.hmac = hmac;\n\nexports.hmac.create = function (hash, key) {\n  return new HMAC(hash, key);\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","hmac","_assert_js_1","require","utils_js_1","HMAC","hash","_key","finished","destroyed","default","key","toBytes","iHash","create","Hash","TypeError","blockLen","outputLen","pad","Uint8Array","set","length","update","digest","i","oHash","fill","buf","exists","out","bytes","digestInto","destroy","to","getPrototypeOf","_cloneInto","message"],"sources":["/Users/sarahagarrat/git/sceneportal/node_modules/@noble/hashes/hmac.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hmac = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// HMAC (RFC 2104)\nclass HMAC extends utils_js_1.Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        _assert_js_1.default.hash(hash);\n        const key = (0, utils_js_1.toBytes)(_key);\n        this.iHash = hash.create();\n        if (!(this.iHash instanceof utils_js_1.Hash))\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        const blockLen = (this.blockLen = this.iHash.blockLen);\n        this.outputLen = this.iHash.outputLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > this.iHash.blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        _assert_js_1.default.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        _assert_js_1.default.exists(this);\n        _assert_js_1.default.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nconst hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nexports.hmac = hmac;\nexports.hmac.create = (hash, key) => new HMAC(hash, key);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}